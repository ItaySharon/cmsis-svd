<?xml version="1.0" encoding="UTF-8"?>
<device xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"><addressUnitBits>0x20</addressUnitBits>
<cpu>
  <dcachePresent>
    <dcachePresen></dcachePresen>
  </dcachePresent>
  <deviceNumInterrupts>0x0</deviceNumInterrupts>
  <dtcmPresent>
    <dtcmPresen></dtcmPresen>
  </dtcmPresent>
  <endian>little</endian>
  <fpuPresent>0x1</fpuPresent>
  <icachePresent>
    <icachePresen></icachePresen>
  </icachePresent>
  <itcmPresent>
    <itcmPresen></itcmPresen>
  </itcmPresent>
  <mpuPresent>0x0</mpuPresent>
  <name>Xtensa LX6</name>
  <nvicPrioBits>0x3</nvicPrioBits>
  <revision>r0p0</revision>
  <sauNumRegions>0x0</sauNumRegions>
  <vendorSystickConfig>0x0</vendorSystickConfig>
</cpu>
<description>32-bit MCU &amp; 2.4 GHz Wi-Fi &amp; Bluetooth/Bluetooth LE</description>
<name>ESP32</name>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x40</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF01000</baseAddress>
    <description>AES Accelerator</description>
    <groupName>AES</groupName>
    <interrupts></interrupts>
    <name>AES</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to start the AES operation.</description>
            <name>START</name>
          </field>
        </fields>
        <name>START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>AES Idle register. Reads ’zero’ while the AES Accelerator is busy processing; reads ’one’ otherwise.</description>
            <name>IDLE</name>
          </field>
        </fields>
        <name>IDLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Selects the AES accelerator mode of operation. See Table 22-1 for details.</description>
            <name>MODE</name>
          </field>
        </fields>
        <name>MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Endianness selection register. See Table 22-2 for details.</description>
            <name>ENDIAN</name>
          </field>
        </fields>
        <name>ENDIAN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>AES key material register.</description>
            <name>KEY</name>
          </field>
        </fields>
        <name>KEY_0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>AES key material register.</description>
            <name>KEY</name>
          </field>
        </fields>
        <name>KEY_1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>AES key material register.</description>
            <name>KEY</name>
          </field>
        </fields>
        <name>KEY_2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>AES key material register.</description>
            <name>KEY</name>
          </field>
        </fields>
        <name>KEY_3</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>AES key material register.</description>
            <name>KEY</name>
          </field>
        </fields>
        <name>KEY_4</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>AES key material register.</description>
            <name>KEY</name>
          </field>
        </fields>
        <name>KEY_5</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>AES key material register.</description>
            <name>KEY</name>
          </field>
        </fields>
        <name>KEY_6</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>AES key material register.</description>
            <name>KEY</name>
          </field>
        </fields>
        <name>KEY_7</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Plaintext and ciphertext register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Plaintext and ciphertext register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Plaintext and ciphertext register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Plaintext and ciphertext register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_3</name>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x44</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF66000</baseAddress>
    <description>Advanced Peripheral Bus Controller</description>
    <groupName>APB_CTRL</groupName>
    <interrupts></interrupts>
    <name>APB_CTRL</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>PRE_DIV_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLK_320M_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RST_TICK_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>QUICK_CLK_CHNG</name>
          </field>
        </fields>
        <name>SYSCLK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>XTAL_TICK_NUM</name>
          </field>
        </fields>
        <name>XTAL_TICK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x27</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>PLL_TICK_NUM</name>
          </field>
        </fields>
        <name>PLL_TICK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CK8M_TICK_NUM</name>
          </field>
        </fields>
        <name>CK8M_TICK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xB</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SARADC_START_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SARADC_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SAR ADC2 is controlled by DIG ADC2 CTRL  0: SAR ADC2 is controlled by PWDET CTRL</description>
            <name>SARADC_SAR2_MUX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>0: single mode  1: double mode  2: alternate mode</description>
            <name>SARADC_WORK_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: SAR1  1: SAR2  only work for single SAR mode</description>
            <name>SARADC_SAR_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SARADC_SAR_CLK_GATED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SAR clock divider</description>
            <name>SARADC_SAR_CLK_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>0 ~ 15 means length 1 ~ 16</description>
            <name>SARADC_SAR1_PATT_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>0 ~ 15 means length 1 ~ 16</description>
            <name>SARADC_SAR2_PATT_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear the pointer of pattern table for DIG ADC1 CTRL</description>
            <name>SARADC_SAR1_PATT_P_CLEAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear the pointer of pattern table for DIG ADC2 CTRL</description>
            <name>SARADC_SAR2_PATT_P_CLEAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: sar_sel will be coded by the MSB of the 16-bit output data  in this case the resolution should not be larger than 11 bits.</description>
            <name>SARADC_DATA_SAR_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: I2S input data is from SAR ADC (for DMA)  0: I2S input data is from GPIO matrix</description>
            <name>SARADC_DATA_TO_I2S</name>
          </field>
        </fields>
        <name>APB_SARADC_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7F8240</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SARADC_MEAS_NUM_LIMIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>max conversion number</description>
            <name>SARADC_MAX_MEAS_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: data to DIG ADC1 CTRL is inverted  otherwise not</description>
            <name>SARADC_SAR1_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: data to DIG ADC2 CTRL is inverted  otherwise not</description>
            <name>SARADC_SAR2_INV</name>
          </field>
        </fields>
        <name>APB_SARADC_CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1FE</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SARADC_RSTB_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SARADC_STANDBY_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SARADC_START_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>sample cycles</description>
            <name>SARADC_SAMPLE_CYCLE</name>
          </field>
        </fields>
        <name>APB_SARADC_FSM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x208FF08</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>item 0 ~ 3 for pattern table 1 (each item one byte)</description>
            <name>SARADC_SAR1_PATT_TAB1</name>
          </field>
        </fields>
        <name>APB_SARADC_SAR1_PATT_TAB1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 4 ~ 7 for pattern table 1 (each item one byte)</description>
            <name>SARADC_SAR1_PATT_TAB2</name>
          </field>
        </fields>
        <name>APB_SARADC_SAR1_PATT_TAB2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 8 ~ 11 for pattern table 1 (each item one byte)</description>
            <name>SARADC_SAR1_PATT_TAB3</name>
          </field>
        </fields>
        <name>APB_SARADC_SAR1_PATT_TAB3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 12 ~ 15 for pattern table 1 (each item one byte)</description>
            <name>SARADC_SAR1_PATT_TAB4</name>
          </field>
        </fields>
        <name>APB_SARADC_SAR1_PATT_TAB4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>item 0 ~ 3 for pattern table 2 (each item one byte)</description>
            <name>SARADC_SAR2_PATT_TAB1</name>
          </field>
        </fields>
        <name>APB_SARADC_SAR2_PATT_TAB1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 4 ~ 7 for pattern table 2 (each item one byte)</description>
            <name>SARADC_SAR2_PATT_TAB2</name>
          </field>
        </fields>
        <name>APB_SARADC_SAR2_PATT_TAB2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 8 ~ 11 for pattern table 2 (each item one byte)</description>
            <name>SARADC_SAR2_PATT_TAB3</name>
          </field>
        </fields>
        <name>APB_SARADC_SAR2_PATT_TAB3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 12 ~ 15 for pattern table 2 (each item one byte)</description>
            <name>SARADC_SAR2_PATT_TAB4</name>
          </field>
        </fields>
        <name>APB_SARADC_SAR2_PATT_TAB4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>APLL_TICK_NUM</name>
          </field>
        </fields>
        <name>APLL_TICK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x63</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x16042000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x4</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF5D000</baseAddress>
    <description>Peripheral BB</description>
    <groupName>BB</groupName>
    <interrupts></interrupts>
    <name>BB</name>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>Baseband control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DC_EST_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DC_EST_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FFT_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FFT_FORCE_PU</name>
          </field>
        </fields>
        <name>BBPD_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x5C0</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF00000</baseAddress>
    <description>Peripheral DPORT</description>
    <groupName>DPORT</groupName>
    <interrupts></interrupts>
    <name>DPORT</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_BOOT_REMAP</name>
          </field>
        </fields>
        <name>PRO_BOOT_REMAP_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_BOOT_REMAP</name>
          </field>
        </fields>
        <name>APP_BOOT_REMAP_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP</name>
          </field>
        </fields>
        <name>ACCESS_CHECK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>PRODPORT_APB_MASK0</name>
          </field>
        </fields>
        <name>PRO_DPORT_APB_MASK0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>PRODPORT_APB_MASK1</name>
          </field>
        </fields>
        <name>PRO_DPORT_APB_MASK1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>APPDPORT_APB_MASK0</name>
          </field>
        </fields>
        <name>APP_DPORT_APB_MASK0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>APPDPORT_APB_MASK1</name>
          </field>
        </fields>
        <name>APP_DPORT_APB_MASK1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>PERI_CLK_EN</name>
          </field>
        </fields>
        <name>PERI_CLK_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>PERI_RST_EN</name>
          </field>
        </fields>
        <name>PERI_RST_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>WIFI_BB_CFG</name>
          </field>
        </fields>
        <name>WIFI_BB_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>WIFI_BB_CFG_2</name>
          </field>
        </fields>
        <name>WIFI_BB_CFG_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APPCPU_RESETTING</name>
          </field>
        </fields>
        <name>APPCPU_CTRL_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APPCPU_CLKGATE_EN</name>
          </field>
        </fields>
        <name>APPCPU_CTRL_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APPCPU_RUNSTALL</name>
          </field>
        </fields>
        <name>APPCPU_CTRL_C</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>APPCPU_BOOT_ADDR</name>
          </field>
        </fields>
        <name>APPCPU_CTRL_D</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CPUPERIOD_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LOWSPEED_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAST_CLK_RTC_SEL</name>
          </field>
        </fields>
        <name>CPU_PER_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_FLUSH_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_FLUSH_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_LOCK_0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_LOCK_1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_LOCK_2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_LOCK_3_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_SINGLE_IRAM_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_DRAM_SPLIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_AHB_SPI_REQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_SLAVE_REQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AHB_SPI_REQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLAVE_REQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_DRAM_HL</name>
          </field>
        </fields>
        <name>PRO_CACHE_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_MASK_IRAM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_MASK_IRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_MASK_IROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_MASK_DRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_MASK_DROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_MASK_OPSDRAM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>PRO_CMMU_SRAM_PAGE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>PRO_CMMU_FLASH_PAGE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CMMU_FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CMMU_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_MMU_IA_CLR</name>
          </field>
        </fields>
        <name>PRO_CACHE_CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <name>PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MAX</name>
          </field>
        </fields>
        <name>PRO_CACHE_LOCK_0_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <name>PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MAX</name>
          </field>
        </fields>
        <name>PRO_CACHE_LOCK_1_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <name>PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MAX</name>
          </field>
        </fields>
        <name>PRO_CACHE_LOCK_2_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <name>PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MAX</name>
          </field>
        </fields>
        <name>PRO_CACHE_LOCK_3_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_FLUSH_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_FLUSH_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_LOCK_0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_LOCK_1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_LOCK_2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_LOCK_3_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_SINGLE_IRAM_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_DRAM_SPLIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_AHB_SPI_REQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_SLAVE_REQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_DRAM_HL</name>
          </field>
        </fields>
        <name>APP_CACHE_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_MASK_IRAM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_MASK_IRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_MASK_IROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_MASK_DRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_MASK_DROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_MASK_OPSDRAM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>APP_CMMU_SRAM_PAGE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>APP_CMMU_FLASH_PAGE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CMMU_FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CMMU_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_MMU_IA_CLR</name>
          </field>
        </fields>
        <name>APP_CACHE_CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <name>PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MAX</name>
          </field>
        </fields>
        <name>APP_CACHE_LOCK_0_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <name>PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MAX</name>
          </field>
        </fields>
        <name>APP_CACHE_LOCK_1_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <name>PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MAX</name>
          </field>
        </fields>
        <name>APP_CACHE_LOCK_2_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <name>PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>MAX</name>
          </field>
        </fields>
        <name>APP_CACHE_LOCK_3_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TRACEMEM_MUX_MODE</name>
          </field>
        </fields>
        <name>TRACEMEM_MUX_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_TRACEMEM_ENA</name>
          </field>
        </fields>
        <name>PRO_TRACEMEM_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_TRACEMEM_ENA</name>
          </field>
        </fields>
        <name>APP_TRACEMEM_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CACHE_MUX_MODE</name>
          </field>
        </fields>
        <name>CACHE_MUX_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INTERNAL_SRAM_IMMU_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>IMMU_PAGE_MODE</name>
          </field>
        </fields>
        <name>IMMU_PAGE_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INTERNAL_SRAM_DMMU_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DMMU_PAGE_MODE</name>
          </field>
        </fields>
        <name>DMMU_PAGE_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SHARE_ROM_MPU_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_ROM_MPU_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_ROM_MPU_ENA</name>
          </field>
        </fields>
        <name>ROM_MPU_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LSLP_MEM_PD_MASK</name>
          </field>
        </fields>
        <name>MEM_PD_MASK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_ROM_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_ROM_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>SHARE_ROM_PD</name>
          </field>
        </fields>
        <name>ROM_PD_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_ROM_FO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_ROM_FO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>SHARE_ROM_FO</name>
          </field>
        </fields>
        <name>ROM_FO_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SRAM_PD_0</name>
          </field>
        </fields>
        <name>SRAM_PD_CTRL_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SRAM_PD_1</name>
          </field>
        </fields>
        <name>SRAM_PD_CTRL_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SRAM_FO_0</name>
          </field>
        </fields>
        <name>SRAM_FO_CTRL_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SRAM_FO_1</name>
          </field>
        </fields>
        <name>SRAM_FO_CTRL_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>MASK_PRO_IRAM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>MASK_APP_IRAM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>MASK_PRO_DRAM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>MASK_APP_DRAM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>MASK_AHB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>MAC_DUMP_MODE</name>
          </field>
        </fields>
        <name>IRAM_DRAM_AHB_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_TAG_FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_TAG_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_TAG_FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_TAG_PD</name>
          </field>
        </fields>
        <name>TAG_FO_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x101</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SDIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRODPORT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APPDPORT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>AHB_LITE_SDHOST_PID</name>
          </field>
        </fields>
        <name>AHB_LITE_MASK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>AHB_ACCESS_GRANT_0</name>
          </field>
        </fields>
        <name>AHB_MPU_TABLE_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>AHB_ACCESS_GRANT_1</name>
          </field>
        </fields>
        <name>AHB_MPU_TABLE_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>PERI_IO_SWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>LINK_DEVICE_SEL</name>
          </field>
        </fields>
        <name>HOST_INF_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>PERIP_CLK_EN</name>
          </field>
        </fields>
        <name>PERIP_CLK_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF9C1E06F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>PERIP_RST</name>
          </field>
        </fields>
        <name>PERIP_RST_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLAVE_SPI_MASK_PRO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLAVE_SPI_MASK_APP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SPI_ENCRYPT_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SPI_DECRYPT_ENABLE</name>
          </field>
        </fields>
        <name>SLAVE_SPI_CONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>WIFI_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>WIFI_CLK_WIFI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>WIFI_CLK_WIFI_BT_COMMON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>WIFI_CLK_BT_EN</name>
          </field>
        </fields>
        <name>WIFI_CLK_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFCE030</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CORE_RST</name>
          </field>
        </fields>
        <name>CORE_RST_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>BT_LPCK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>BTEXTWAKEUP_REQ</name>
          </field>
        </fields>
        <name>BT_LPCK_DIV_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>BT_LPCK_DIV_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>BT_LPCK_DIV_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LPCLK_SEL_RTC_SLOW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LPCLK_SEL_8M</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LPCLK_SEL_XTAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LPCLK_SEL_XTAL32K</name>
          </field>
        </fields>
        <name>BT_LPCK_DIV_FRAC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2001001</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CPU_INTR_FROM_CPU_0</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CPU_INTR_FROM_CPU_1</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CPU_INTR_FROM_CPU_2</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CPU_INTR_FROM_CPU_3</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>PRO_INTR_STATUS_0</name>
          </field>
        </fields>
        <name>PRO_INTR_STATUS_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>PRO_INTR_STATUS_1</name>
          </field>
        </fields>
        <name>PRO_INTR_STATUS_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>PRO_INTR_STATUS_2</name>
          </field>
        </fields>
        <name>PRO_INTR_STATUS_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>APP_INTR_STATUS_0</name>
          </field>
        </fields>
        <name>APP_INTR_STATUS_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>APP_INTR_STATUS_1</name>
          </field>
        </fields>
        <name>APP_INTR_STATUS_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>APP_INTR_STATUS_2</name>
          </field>
        </fields>
        <name>APP_INTR_STATUS_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_MAC_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_MAC_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_MAC_NMI_MAP</name>
          </field>
        </fields>
        <name>PRO_MAC_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_BB_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_BB_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_BT_MAC_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_BT_MAC_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_BT_BB_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_BT_BB_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_BT_BB_NMI_MAP</name>
          </field>
        </fields>
        <name>PRO_BT_BB_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_RWBT_IRQ_MAP</name>
          </field>
        </fields>
        <name>PRO_RWBT_IRQ_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_RWBLE_IRQ_MAP</name>
          </field>
        </fields>
        <name>PRO_RWBLE_IRQ_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_RWBT_NMI_MAP</name>
          </field>
        </fields>
        <name>PRO_RWBT_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_RWBLE_NMI_MAP</name>
          </field>
        </fields>
        <name>PRO_RWBLE_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_SLC0_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_SLC0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_SLC1_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_SLC1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_UHCI0_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_UHCI0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_UHCI1_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_UHCI1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG_T0_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG_T0_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG_T1_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG_T1_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG_WDT_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG_WDT_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG_LACT_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG_LACT_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG1_T0_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG1_T0_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x150</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG1_T1_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG1_T1_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x154</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG1_WDT_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG1_WDT_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x158</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG1_LACT_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG1_LACT_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_GPIO_INTERRUPT_PRO_MAP</name>
          </field>
        </fields>
        <name>PRO_GPIO_INTERRUPT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x160</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_GPIO_INTERRUPT_PRO_NMI_MAP</name>
          </field>
        </fields>
        <name>PRO_GPIO_INTERRUPT_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x164</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_CPU_INTR_FROM_CPU_0_MAP</name>
          </field>
        </fields>
        <name>PRO_CPU_INTR_FROM_CPU_0_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x168</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_CPU_INTR_FROM_CPU_1_MAP</name>
          </field>
        </fields>
        <name>PRO_CPU_INTR_FROM_CPU_1_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_CPU_INTR_FROM_CPU_2_MAP</name>
          </field>
        </fields>
        <name>PRO_CPU_INTR_FROM_CPU_2_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x170</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_CPU_INTR_FROM_CPU_3_MAP</name>
          </field>
        </fields>
        <name>PRO_CPU_INTR_FROM_CPU_3_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x174</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_SPI_INTR_0_MAP</name>
          </field>
        </fields>
        <name>PRO_SPI_INTR_0_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x178</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_SPI_INTR_1_MAP</name>
          </field>
        </fields>
        <name>PRO_SPI_INTR_1_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_SPI_INTR_2_MAP</name>
          </field>
        </fields>
        <name>PRO_SPI_INTR_2_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x180</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_SPI_INTR_3_MAP</name>
          </field>
        </fields>
        <name>PRO_SPI_INTR_3_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x184</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_I2S0_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_I2S0_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x188</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_I2S1_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_I2S1_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_UART_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_UART_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x190</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_UART1_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_UART1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x194</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_UART2_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_UART2_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x198</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_SDIO_HOST_INTERRUPT_MAP</name>
          </field>
        </fields>
        <name>PRO_SDIO_HOST_INTERRUPT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_EMAC_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_EMAC_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_PWM0_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_PWM0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_PWM1_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_PWM1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_PWM2_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_PWM2_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1AC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_PWM3_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_PWM3_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_LEDC_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_LEDC_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_EFUSE_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_EFUSE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_CAN_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_CAN_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1BC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_RTC_CORE_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_RTC_CORE_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_RMT_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_RMT_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_PCNT_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_PCNT_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_I2C_EXT0_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_I2C_EXT0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1CC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_I2C_EXT1_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_I2C_EXT1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_RSA_INTR_MAP</name>
          </field>
        </fields>
        <name>PRO_RSA_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_SPI1_DMA_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_SPI1_DMA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_SPI2_DMA_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_SPI2_DMA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1DC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_SPI3_DMA_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_SPI3_DMA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_WDG_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_WDG_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TIMER_INT1_MAP</name>
          </field>
        </fields>
        <name>PRO_TIMER_INT1_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TIMER_INT2_MAP</name>
          </field>
        </fields>
        <name>PRO_TIMER_INT2_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1EC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG_T0_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG_T0_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG_T1_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG_T1_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG_WDT_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG_WDT_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG_LACT_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG_LACT_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG1_T0_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG1_T0_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x200</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG1_T1_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG1_T1_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x204</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG1_WDT_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG1_WDT_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x208</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_TG1_LACT_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_TG1_LACT_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_MMU_IA_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_MMU_IA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x210</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_MPU_IA_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_MPU_IA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x214</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PRO_CACHE_IA_INT_MAP</name>
          </field>
        </fields>
        <name>PRO_CACHE_IA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x218</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_MAC_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_MAC_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_MAC_NMI_MAP</name>
          </field>
        </fields>
        <name>APP_MAC_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x220</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_BB_INT_MAP</name>
          </field>
        </fields>
        <name>APP_BB_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x224</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_BT_MAC_INT_MAP</name>
          </field>
        </fields>
        <name>APP_BT_MAC_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x228</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_BT_BB_INT_MAP</name>
          </field>
        </fields>
        <name>APP_BT_BB_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x22C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_BT_BB_NMI_MAP</name>
          </field>
        </fields>
        <name>APP_BT_BB_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x230</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_RWBT_IRQ_MAP</name>
          </field>
        </fields>
        <name>APP_RWBT_IRQ_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x234</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_RWBLE_IRQ_MAP</name>
          </field>
        </fields>
        <name>APP_RWBLE_IRQ_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x238</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_RWBT_NMI_MAP</name>
          </field>
        </fields>
        <name>APP_RWBT_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x23C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_RWBLE_NMI_MAP</name>
          </field>
        </fields>
        <name>APP_RWBLE_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x240</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_SLC0_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_SLC0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x244</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_SLC1_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_SLC1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x248</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_UHCI0_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_UHCI0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_UHCI1_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_UHCI1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x250</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG_T0_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG_T0_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x254</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG_T1_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG_T1_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x258</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG_WDT_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG_WDT_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG_LACT_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG_LACT_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x260</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG1_T0_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG1_T0_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x264</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG1_T1_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG1_T1_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x268</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG1_WDT_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG1_WDT_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG1_LACT_LEVEL_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG1_LACT_LEVEL_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x270</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_GPIO_INTERRUPT_APP_MAP</name>
          </field>
        </fields>
        <name>APP_GPIO_INTERRUPT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x274</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_GPIO_INTERRUPT_APP_NMI_MAP</name>
          </field>
        </fields>
        <name>APP_GPIO_INTERRUPT_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x278</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_CPU_INTR_FROM_CPU_0_MAP</name>
          </field>
        </fields>
        <name>APP_CPU_INTR_FROM_CPU_0_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_CPU_INTR_FROM_CPU_1_MAP</name>
          </field>
        </fields>
        <name>APP_CPU_INTR_FROM_CPU_1_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x280</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_CPU_INTR_FROM_CPU_2_MAP</name>
          </field>
        </fields>
        <name>APP_CPU_INTR_FROM_CPU_2_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x284</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_CPU_INTR_FROM_CPU_3_MAP</name>
          </field>
        </fields>
        <name>APP_CPU_INTR_FROM_CPU_3_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x288</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_SPI_INTR_0_MAP</name>
          </field>
        </fields>
        <name>APP_SPI_INTR_0_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_SPI_INTR_1_MAP</name>
          </field>
        </fields>
        <name>APP_SPI_INTR_1_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x290</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_SPI_INTR_2_MAP</name>
          </field>
        </fields>
        <name>APP_SPI_INTR_2_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x294</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_SPI_INTR_3_MAP</name>
          </field>
        </fields>
        <name>APP_SPI_INTR_3_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x298</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_I2S0_INT_MAP</name>
          </field>
        </fields>
        <name>APP_I2S0_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x29C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_I2S1_INT_MAP</name>
          </field>
        </fields>
        <name>APP_I2S1_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_UART_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_UART_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_UART1_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_UART1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_UART2_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_UART2_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2AC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_SDIO_HOST_INTERRUPT_MAP</name>
          </field>
        </fields>
        <name>APP_SDIO_HOST_INTERRUPT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_EMAC_INT_MAP</name>
          </field>
        </fields>
        <name>APP_EMAC_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_PWM0_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_PWM0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_PWM1_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_PWM1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2BC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_PWM2_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_PWM2_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_PWM3_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_PWM3_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_LEDC_INT_MAP</name>
          </field>
        </fields>
        <name>APP_LEDC_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_EFUSE_INT_MAP</name>
          </field>
        </fields>
        <name>APP_EFUSE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2CC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_CAN_INT_MAP</name>
          </field>
        </fields>
        <name>APP_CAN_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_RTC_CORE_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_RTC_CORE_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_RMT_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_RMT_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_PCNT_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_PCNT_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2DC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_I2C_EXT0_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_I2C_EXT0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_I2C_EXT1_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_I2C_EXT1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_RSA_INTR_MAP</name>
          </field>
        </fields>
        <name>APP_RSA_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_SPI1_DMA_INT_MAP</name>
          </field>
        </fields>
        <name>APP_SPI1_DMA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2EC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_SPI2_DMA_INT_MAP</name>
          </field>
        </fields>
        <name>APP_SPI2_DMA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_SPI3_DMA_INT_MAP</name>
          </field>
        </fields>
        <name>APP_SPI3_DMA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_WDG_INT_MAP</name>
          </field>
        </fields>
        <name>APP_WDG_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TIMER_INT1_MAP</name>
          </field>
        </fields>
        <name>APP_TIMER_INT1_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2FC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TIMER_INT2_MAP</name>
          </field>
        </fields>
        <name>APP_TIMER_INT2_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x300</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG_T0_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG_T0_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x304</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG_T1_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG_T1_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x308</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG_WDT_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG_WDT_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG_LACT_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG_LACT_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x310</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG1_T0_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG1_T0_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x314</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG1_T1_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG1_T1_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x318</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG1_WDT_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG1_WDT_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x31C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_TG1_LACT_EDGE_INT_MAP</name>
          </field>
        </fields>
        <name>APP_TG1_LACT_EDGE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x320</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_MMU_IA_INT_MAP</name>
          </field>
        </fields>
        <name>APP_MMU_IA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x324</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_MPU_IA_INT_MAP</name>
          </field>
        </fields>
        <name>APP_MPU_IA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x328</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>APP_CACHE_IA_INT_MAP</name>
          </field>
        </fields>
        <name>APP_CACHE_IA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x32C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>UART_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_UART</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x330</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>SPI1_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_SPI1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x334</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>SPI0_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_SPI0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x338</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GPIO_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_GPIO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x33C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>FE2_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_FE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x340</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>FE_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_FE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x344</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>TIMER_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_TIMER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x348</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RTC_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_RTC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>IOMUX_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_IO_MUX</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x350</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>WDG_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_WDG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x354</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>HINF_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_HINF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x358</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>UHCI1_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_UHCI1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x35C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>MISC_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_MISC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x360</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>I2C_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_I2C</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x364</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>I2S0_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_I2S0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x368</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>UART1_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_UART1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x36C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>BT_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_BT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x370</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>BTBUFFER_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_BT_BUFFER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x374</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>I2CEXT0_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_I2C_EXT0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x378</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>UHCI0_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_UHCI0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x37C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>SLCHOST_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_SLCHOST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x380</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RMT_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_RMT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x384</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>PCNT_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_PCNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x388</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>SLC_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_SLC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>LEDC_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_LEDC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x390</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>EFUSE_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_EFUSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x394</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>SPI_ENCRYPY_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_SPI_ENCRYPT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x398</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>BB_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_BB</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x39C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>PWM0_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_PWM0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>TIMERGROUP_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_TIMERGROUP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>TIMERGROUP1_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_TIMERGROUP1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>SPI2_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_SPI2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3AC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>SPI3_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_SPI3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>APBCTRL_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_APB_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>I2CEXT1_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_I2C_EXT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>SDIOHOST_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_SDIO_HOST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3BC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>EMAC_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_EMAC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>CAN_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_CAN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>PWM1_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_PWM1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>I2S1_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_I2S1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3CC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>UART2_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_UART2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>PWM2_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_PWM2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>PWM3_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_PWM3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RWBT_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_RWBT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3DC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>BTMAC_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_BTMAC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>WIFIMAC_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_WIFIMAC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>PWR_ACCESS_GRANT_CONFIG</name>
          </field>
        </fields>
        <name>AHBLITE_MPU_TABLE_PWR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_ROM_MPU_AD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_ROM_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_ROM_MPU_AD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_ROM_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHARE_ROM_MPU_AD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>SHARE_ROM_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>INTERNAL_SRAM_MMU_AD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>INTERNAL_SRAM_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>INTERNAL_SRAM_MMU_MULTI_HIT</name>
          </field>
        </fields>
        <name>MEM_ACCESS_DBUG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3EC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>INTERNAL_SRAM_MMU_MISS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>ARB_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>PIDGEN_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AHB_ACCESS_DENY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AHBLITE_ACCESS_DENY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AHBLITE_IA</name>
          </field>
        </fields>
        <name>MEM_ACCESS_DBUG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_SLAVE_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_MMU_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>PRO_CACHE_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>PRO_CACHE_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_WR_BAK_TO_READ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_TX_END</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_SLAVE_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_SLAVE_WDATA_V</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_RX_END</name>
          </field>
        </fields>
        <name>PRO_DCACHE_DBUG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>PRO_CTAG_RAM_RDATA</name>
          </field>
        </fields>
        <name>PRO_DCACHE_DBUG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1B</bitWidth>
            <name>PRO_CACHE_VADDR</name>
          </field>
        </fields>
        <name>PRO_DCACHE_DBUG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>PRO_MMU_RDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>PRO_CPU_DISABLED_CACHE_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CPU_DISABLED_CACHE_IA_OPPOSITE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CPU_DISABLED_CACHE_IA_DRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CPU_DISABLED_CACHE_IA_IROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CPU_DISABLED_CACHE_IA_IRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CPU_DISABLED_CACHE_IA_IRAM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CPU_DISABLED_CACHE_IA_DROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CACHE_IRAM0_PID_ERROR</name>
          </field>
        </fields>
        <name>PRO_DCACHE_DBUG3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x400</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>PRO_DRAM1ADDR0_IA</name>
          </field>
        </fields>
        <name>PRO_DCACHE_DBUG4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x404</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>PRO_DROM0ADDR0_IA</name>
          </field>
        </fields>
        <name>PRO_DCACHE_DBUG5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x408</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>PRO_IRAM0ADDR_IA</name>
          </field>
        </fields>
        <name>PRO_DCACHE_DBUG6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>PRO_IRAM1ADDR_IA</name>
          </field>
        </fields>
        <name>PRO_DCACHE_DBUG7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x410</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>PRO_IROM0ADDR_IA</name>
          </field>
        </fields>
        <name>PRO_DCACHE_DBUG8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x414</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>PRO_OPSDRAMADDR_IA</name>
          </field>
        </fields>
        <name>PRO_DCACHE_DBUG9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x418</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_SLAVE_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_MMU_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>APP_CACHE_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>APP_CACHE_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_WR_BAK_TO_READ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_TX_END</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_SLAVE_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_SLAVE_WDATA_V</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_RX_END</name>
          </field>
        </fields>
        <name>APP_DCACHE_DBUG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x41C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>APP_CTAG_RAM_RDATA</name>
          </field>
        </fields>
        <name>APP_DCACHE_DBUG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x420</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1B</bitWidth>
            <name>APP_CACHE_VADDR</name>
          </field>
        </fields>
        <name>APP_DCACHE_DBUG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x424</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>APP_MMU_RDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>APP_CPU_DISABLED_CACHE_IA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CPU_DISABLED_CACHE_IA_OPPOSITE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CPU_DISABLED_CACHE_IA_DRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CPU_DISABLED_CACHE_IA_IROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CPU_DISABLED_CACHE_IA_IRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CPU_DISABLED_CACHE_IA_IRAM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CPU_DISABLED_CACHE_IA_DROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CACHE_IRAM0_PID_ERROR</name>
          </field>
        </fields>
        <name>APP_DCACHE_DBUG3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x428</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>APP_DRAM1ADDR0_IA</name>
          </field>
        </fields>
        <name>APP_DCACHE_DBUG4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x42C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>APP_DROM0ADDR0_IA</name>
          </field>
        </fields>
        <name>APP_DCACHE_DBUG5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x430</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>APP_IRAM0ADDR_IA</name>
          </field>
        </fields>
        <name>APP_DCACHE_DBUG6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x434</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>APP_IRAM1ADDR_IA</name>
          </field>
        </fields>
        <name>APP_DCACHE_DBUG7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x438</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>APP_IROM0ADDR_IA</name>
          </field>
        </fields>
        <name>APP_DCACHE_DBUG8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x43C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>APP_OPSDRAMADDR_IA</name>
          </field>
        </fields>
        <name>APP_DCACHE_DBUG9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x440</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CPU_RECORD_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CPU_RECORD_DISABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CPU_PDEBUG_ENABLE</name>
          </field>
        </fields>
        <name>PRO_CPU_RECORD_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x444</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_CPU_RECORDING</name>
          </field>
        </fields>
        <name>PRO_CPU_RECORD_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x448</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>RECORD_PRO_PID</name>
          </field>
        </fields>
        <name>PRO_CPU_RECORD_PID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_PRO_PDEBUGINST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>RECORD_PDEBUGINST_SZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>RECORD_PDEBUGINST_ISRC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>RECORD_PDEBUGINST_CINTL</name>
          </field>
        </fields>
        <name>PRO_CPU_RECORD_PDEBUGINST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x450</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>RECORD_PRO_PDEBUGSTATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RECORD_PDEBUGSTATUS_BBCAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RECORD_PDEBUGSTATUS_INSNTYPE</name>
          </field>
        </fields>
        <name>PRO_CPU_RECORD_PDEBUGSTATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x454</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_PRO_PDEBUGDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>RECORD_PDEBUGDATA_EXCVEC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>RECORD_PDEBUGDATA_INSNTYPE_SR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>RECORD_PDEBUGDATA_INSNTYPE_ER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RECORD_PDEBUGDATA_EXCCAUSE</name>
          </field>
        </fields>
        <name>PRO_CPU_RECORD_PDEBUGDATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x458</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_PRO_PDEBUGPC</name>
          </field>
        </fields>
        <name>PRO_CPU_RECORD_PDEBUGPC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x45C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_PRO_PDEBUGLS0STAT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>RECORD_PDEBUGLS0STAT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>RECORD_PDEBUGLS0STAT_SZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RECORD_PDEBUGLS0STAT_STCOH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>RECORD_PDEBUGLS0STAT_TGT</name>
          </field>
        </fields>
        <name>PRO_CPU_RECORD_PDEBUGLS0STAT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x460</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_PRO_PDEBUGLS0ADDR</name>
          </field>
        </fields>
        <name>PRO_CPU_RECORD_PDEBUGLS0ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x464</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_PRO_PDEBUGLS0DATA</name>
          </field>
        </fields>
        <name>PRO_CPU_RECORD_PDEBUGLS0DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x468</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CPU_RECORD_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CPU_RECORD_DISABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CPU_PDEBUG_ENABLE</name>
          </field>
        </fields>
        <name>APP_CPU_RECORD_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x46C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_CPU_RECORDING</name>
          </field>
        </fields>
        <name>APP_CPU_RECORD_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x470</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>RECORD_APP_PID</name>
          </field>
        </fields>
        <name>APP_CPU_RECORD_PID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x474</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_APP_PDEBUGINST</name>
          </field>
        </fields>
        <name>APP_CPU_RECORD_PDEBUGINST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x478</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>RECORD_APP_PDEBUGSTATUS</name>
          </field>
        </fields>
        <name>APP_CPU_RECORD_PDEBUGSTATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x47C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_APP_PDEBUGDATA</name>
          </field>
        </fields>
        <name>APP_CPU_RECORD_PDEBUGDATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x480</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_APP_PDEBUGPC</name>
          </field>
        </fields>
        <name>APP_CPU_RECORD_PDEBUGPC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x484</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_APP_PDEBUGLS0STAT</name>
          </field>
        </fields>
        <name>APP_CPU_RECORD_PDEBUGLS0STAT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x488</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_APP_PDEBUGLS0ADDR</name>
          </field>
        </fields>
        <name>APP_CPU_RECORD_PDEBUGLS0ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RECORD_APP_PDEBUGLS0DATA</name>
          </field>
        </fields>
        <name>APP_CPU_RECORD_PDEBUGLS0DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x490</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RSA_PD</name>
          </field>
        </fields>
        <name>RSA_PD_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x494</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>ROM_MPU_TABLE0</name>
          </field>
        </fields>
        <name>ROM_MPU_TABLE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x498</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>ROM_MPU_TABLE1</name>
          </field>
        </fields>
        <name>ROM_MPU_TABLE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x49C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>ROM_MPU_TABLE2</name>
          </field>
        </fields>
        <name>ROM_MPU_TABLE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>ROM_MPU_TABLE3</name>
          </field>
        </fields>
        <name>ROM_MPU_TABLE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE0</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE1</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4AC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE2</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE3</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE4</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE5</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4BC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE6</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE7</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE8</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE9</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4CC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE10</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE11</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE12</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE13</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4DC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE14</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE15</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE16</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE16</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE17</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE17</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4EC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE18</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE18</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE19</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE19</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE20</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE20</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE21</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE21</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4FC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE22</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE22</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x500</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SHROM_MPU_TABLE23</name>
          </field>
        </fields>
        <name>SHROM_MPU_TABLE23</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x504</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE0</name>
          </field>
        </fields>
        <name>IMMU_TABLE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x508</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE1</name>
          </field>
        </fields>
        <name>IMMU_TABLE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE2</name>
          </field>
        </fields>
        <name>IMMU_TABLE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x510</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE3</name>
          </field>
        </fields>
        <name>IMMU_TABLE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x514</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE4</name>
          </field>
        </fields>
        <name>IMMU_TABLE4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x518</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE5</name>
          </field>
        </fields>
        <name>IMMU_TABLE5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE6</name>
          </field>
        </fields>
        <name>IMMU_TABLE6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x520</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE7</name>
          </field>
        </fields>
        <name>IMMU_TABLE7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x524</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE8</name>
          </field>
        </fields>
        <name>IMMU_TABLE8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x528</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE9</name>
          </field>
        </fields>
        <name>IMMU_TABLE9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x9</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE10</name>
          </field>
        </fields>
        <name>IMMU_TABLE10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x530</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE11</name>
          </field>
        </fields>
        <name>IMMU_TABLE11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xB</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x534</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE12</name>
          </field>
        </fields>
        <name>IMMU_TABLE12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x538</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE13</name>
          </field>
        </fields>
        <name>IMMU_TABLE13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE14</name>
          </field>
        </fields>
        <name>IMMU_TABLE14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xE</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x540</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>IMMU_TABLE15</name>
          </field>
        </fields>
        <name>IMMU_TABLE15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x544</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE0</name>
          </field>
        </fields>
        <name>DMMU_TABLE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x548</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE1</name>
          </field>
        </fields>
        <name>DMMU_TABLE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE2</name>
          </field>
        </fields>
        <name>DMMU_TABLE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x550</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE3</name>
          </field>
        </fields>
        <name>DMMU_TABLE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x554</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE4</name>
          </field>
        </fields>
        <name>DMMU_TABLE4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x558</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE5</name>
          </field>
        </fields>
        <name>DMMU_TABLE5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE6</name>
          </field>
        </fields>
        <name>DMMU_TABLE6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x560</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE7</name>
          </field>
        </fields>
        <name>DMMU_TABLE7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x564</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE8</name>
          </field>
        </fields>
        <name>DMMU_TABLE8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x568</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE9</name>
          </field>
        </fields>
        <name>DMMU_TABLE9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x9</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE10</name>
          </field>
        </fields>
        <name>DMMU_TABLE10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x570</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE11</name>
          </field>
        </fields>
        <name>DMMU_TABLE11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xB</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x574</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE12</name>
          </field>
        </fields>
        <name>DMMU_TABLE12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x578</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE13</name>
          </field>
        </fields>
        <name>DMMU_TABLE13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE14</name>
          </field>
        </fields>
        <name>DMMU_TABLE14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xE</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x580</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DMMU_TABLE15</name>
          </field>
        </fields>
        <name>DMMU_TABLE15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x584</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PRO_INTRUSION_RECORD_RESET_N</name>
          </field>
        </fields>
        <name>PRO_INTRUSION_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x588</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>PRO_INTRUSION_RECORD</name>
          </field>
        </fields>
        <name>PRO_INTRUSION_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>APP_INTRUSION_RECORD_RESET_N</name>
          </field>
        </fields>
        <name>APP_INTRUSION_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x590</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>APP_INTRUSION_RECORD</name>
          </field>
        </fields>
        <name>APP_INTRUSION_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x594</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AGC_MEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AGC_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PBUS_MEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PBUS_MEM_FORCE_PD</name>
          </field>
        </fields>
        <name>FRONT_END_MEM_PD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x598</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <name>MMU_IA_INT_EN</name>
          </field>
        </fields>
        <name>MMU_IA_INT_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x11</bitWidth>
            <name>MPU_IA_INT_EN</name>
          </field>
        </fields>
        <name>MPU_IA_INT_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>Interrupt enable bits for various invalid cache access reasons</description>
            <name>CACHE_IA_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU invalid access to DROM0 when cache is disabled </description>
            <name>CACHE_IA_INT_APP_DROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU invalid access to IRAM0 when cache is disabled </description>
            <name>CACHE_IA_INT_APP_IRAM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU invalid access to IRAM1 when cache is disabled </description>
            <name>CACHE_IA_INT_APP_IRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU invalid access to IROM0 when cache is disabled </description>
            <name>CACHE_IA_INT_APP_IROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU invalid access to DRAM1 when cache is disabled </description>
            <name>CACHE_IA_INT_APP_DRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU invalid access to APP CPU cache when cache disabled </description>
            <name>CACHE_IA_INT_APP_OPPOSITE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU invalid access to DROM0 when cache is disabled </description>
            <name>CACHE_IA_INT_PRO_DROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU invalid access to IRAM0 when cache is disabled </description>
            <name>CACHE_IA_INT_PRO_IRAM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU invalid access to IRAM1 when cache is disabled </description>
            <name>CACHE_IA_INT_PRO_IRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU invalid access to IROM0 when cache is disabled </description>
            <name>CACHE_IA_INT_PRO_IROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU invalid access to DRAM1 when cache is disabled </description>
            <name>CACHE_IA_INT_PRO_DRAM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU invalid access to APP CPU cache when cache disabled </description>
            <name>CACHE_IA_INT_PRO_OPPOSITE</name>
          </field>
        </fields>
        <name>CACHE_IA_INT_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW_BOOTLOADER_SEL</name>
          </field>
        </fields>
        <name>SECURE_BOOT_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SPI1_DMA_CHAN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SPI2_DMA_CHAN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SPI3_DMA_CHAN_SEL</name>
          </field>
        </fields>
        <name>SPI_DMA_CHAN_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5AC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>PRO_OUT_VECBASE_SEL</name>
          </field>
        </fields>
        <name>PRO_VECBASE_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x16</bitWidth>
            <name>PRO_OUT_VECBASE</name>
          </field>
        </fields>
        <name>PRO_VECBASE_SET</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>APP_OUT_VECBASE_SEL</name>
          </field>
        </fields>
        <name>APP_VECBASE_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x16</bitWidth>
            <name>APP_OUT_VECBASE</name>
          </field>
        </fields>
        <name>APP_VECBASE_SET</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1605190</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x124</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF5A000</baseAddress>
    <description>eFuse Controller</description>
    <groupName>EFUSE</groupName>
    <interrupts>
      <interrupt>
        <name>EFUSE</name>
        <value>0x2C</value>
      </interrupt>
    </interrupts>
    <name>EFUSE</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>read for efuse_wr_disable</description>
            <name>RD_EFUSE_WR_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>read for efuse_rd_disable</description>
            <name>RD_EFUSE_RD_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>read for flash_crypt_cnt</description>
            <name>RD_FLASH_CRYPT_CNT</name>
          </field>
        </fields>
        <name>BLK0_RDATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for low 32bit WIFI_MAC_Address</description>
            <name>RD_WIFI_MAC_CRC_LOW</name>
          </field>
        </fields>
        <name>BLK0_RDATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>read for high 24bit WIFI_MAC_Address</description>
            <name>RD_WIFI_MAC_CRC_HIGH</name>
          </field>
        </fields>
        <name>BLK0_RDATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RD_CHIP_VER_DIS_APP_CPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RD_CHIP_VER_DIS_BT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>most significant bit of chip package </description>
            <name>RD_CHIP_VER_PKG_4BIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RD_CHIP_VER_DIS_CACHE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>read for SPI_pad_config_hd</description>
            <name>RD_SPI_PAD_CONFIG_HD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>least significant bits of chip package </description>
            <name>RD_CHIP_VER_PKG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If set alongside EFUSE_RD_CHIP_CPU_FREQ_RATED, the ESP32's max CPU frequency is rated for 160MHz. 240MHz otherwise</description>
            <name>RD_CHIP_CPU_FREQ_LOW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If set, the ESP32's maximum CPU frequency has been rated</description>
            <name>RD_CHIP_CPU_FREQ_RATED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If set, this bit indicates that BLOCK3[143:96] is reserved for internal use</description>
            <name>RD_BLK3_PART_RESERVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bit is set to 1 for rev1 silicon</description>
            <name>RD_CHIP_VER_REV1</name>
          </field>
        </fields>
        <name>BLK0_RDATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>RD_CK8M_FREQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>True ADC reference voltage </description>
            <name>RD_ADC_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RD_SDIO_DREFH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RD_SDIO_DREFM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RD_SDIO_DREFL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for XPD_SDIO_REG</description>
            <name>RD_XPD_SDIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for SDIO_TIEH</description>
            <name>RD_SDIO_TIEH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for sdio_force</description>
            <name>RD_SDIO_FORCE</name>
          </field>
        </fields>
        <name>BLK0_RDATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>read for SPI_pad_config_clk</description>
            <name>RD_SPI_PAD_CONFIG_CLK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>read for SPI_pad_config_q</description>
            <name>RD_SPI_PAD_CONFIG_Q</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>read for SPI_pad_config_d</description>
            <name>RD_SPI_PAD_CONFIG_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>read for SPI_pad_config_cs0</description>
            <name>RD_SPI_PAD_CONFIG_CS0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>RD_INST_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This field stores the voltage level for CPU to run at 240 MHz, or for flash/PSRAM to run at 80 MHz.0x0: level 7; 0x1: level 6; 0x2: level 5; 0x3: level 4. (RO)</description>
            <name>RD_VOL_LEVEL_HP_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>RD_DIG_VOL_L6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>read for flash_crypt_config</description>
            <name>RD_FLASH_CRYPT_CONFIG</name>
          </field>
        </fields>
        <name>BLK0_RDATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>read for coding_scheme</description>
            <name>RD_CODING_SCHEME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for console_debug_disable</description>
            <name>RD_CONSOLE_DEBUG_DISABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RD_DISABLE_SDIO_HOST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for abstract_done_0</description>
            <name>RD_ABS_DONE_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for abstract_done_1</description>
            <name>RD_ABS_DONE_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for JTAG_disable</description>
            <name>RD_DISABLE_JTAG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for download_dis_encrypt</description>
            <name>RD_DISABLE_DL_ENCRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for download_dis_decrypt</description>
            <name>RD_DISABLE_DL_DECRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for download_dis_cache</description>
            <name>RD_DISABLE_DL_CACHE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read for key_status</description>
            <name>RD_KEY_STATUS</name>
          </field>
        </fields>
        <name>BLK0_RDATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>program for efuse_wr_disable</description>
            <name>WR_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>program for efuse_rd_disable</description>
            <name>RD_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>program for flash_crypt_cnt</description>
            <name>FLASH_CRYPT_CNT</name>
          </field>
        </fields>
        <name>BLK0_WDATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for low 32bit WIFI_MAC_Address</description>
            <name>WIFI_MAC_CRC_LOW</name>
          </field>
        </fields>
        <name>BLK0_WDATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>program for high 24bit WIFI_MAC_Address</description>
            <name>WIFI_MAC_CRC_HIGH</name>
          </field>
        </fields>
        <name>BLK0_WDATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CHIP_VER_DIS_APP_CPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CHIP_VER_DIS_BT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>most significant bit of chip package </description>
            <name>CHIP_VER_PKG_4BIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CHIP_VER_DIS_CACHE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>program for SPI_pad_config_hd</description>
            <name>SPI_PAD_CONFIG_HD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>least significant bits of chip package </description>
            <name>CHIP_VER_PKG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If set alongside EFUSE_CHIP_CPU_FREQ_RATED, the ESP32's max CPU frequency is rated for 160MHz. 240MHz otherwise</description>
            <name>CHIP_CPU_FREQ_LOW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If set, the ESP32's maximum CPU frequency has been rated</description>
            <name>CHIP_CPU_FREQ_RATED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If set, this bit indicates that BLOCK3[143:96] is reserved for internal use</description>
            <name>BLK3_PART_RESERVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CHIP_VER_REV1</name>
          </field>
        </fields>
        <name>BLK0_WDATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CK8M_FREQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>True ADC reference voltage </description>
            <name>ADC_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SDIO_DREFH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SDIO_DREFM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SDIO_DREFL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for XPD_SDIO_REG</description>
            <name>XPD_SDIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for SDIO_TIEH</description>
            <name>SDIO_TIEH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for sdio_force</description>
            <name>SDIO_FORCE</name>
          </field>
        </fields>
        <name>BLK0_WDATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>program for SPI_pad_config_clk</description>
            <name>SPI_PAD_CONFIG_CLK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>program for SPI_pad_config_q</description>
            <name>SPI_PAD_CONFIG_Q</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>program for SPI_pad_config_d</description>
            <name>SPI_PAD_CONFIG_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>program for SPI_pad_config_cs0</description>
            <name>SPI_PAD_CONFIG_CS0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>INST_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This field stores the voltage level for CPU to run at 240 MHz, or for flash/PSRAM to run at 80 MHz.0x0: level 7; 0x1: level 6; 0x2: level 5; 0x3: level 4. (R/W)</description>
            <name>VOL_LEVEL_HP_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DIG_VOL_L6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>program for flash_crypt_config</description>
            <name>FLASH_CRYPT_CONFIG</name>
          </field>
        </fields>
        <name>BLK0_WDATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>program for coding_scheme</description>
            <name>CODING_SCHEME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for console_debug_disable</description>
            <name>CONSOLE_DEBUG_DISABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DISABLE_SDIO_HOST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for abstract_done_0</description>
            <name>ABS_DONE_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for abstract_done_1</description>
            <name>ABS_DONE_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for JTAG_disable</description>
            <name>DISABLE_JTAG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for download_dis_encrypt</description>
            <name>DISABLE_DL_ENCRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for download_dis_decrypt</description>
            <name>DISABLE_DL_DECRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for download_dis_cache</description>
            <name>DISABLE_DL_CACHE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program for key_status</description>
            <name>KEY_STATUS</name>
          </field>
        </fields>
        <name>BLK0_WDATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK1</description>
            <name>BLK1_DOUT0</name>
          </field>
        </fields>
        <name>BLK1_RDATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK1</description>
            <name>BLK1_DOUT1</name>
          </field>
        </fields>
        <name>BLK1_RDATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK1</description>
            <name>BLK1_DOUT2</name>
          </field>
        </fields>
        <name>BLK1_RDATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK1</description>
            <name>BLK1_DOUT3</name>
          </field>
        </fields>
        <name>BLK1_RDATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK1</description>
            <name>BLK1_DOUT4</name>
          </field>
        </fields>
        <name>BLK1_RDATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK1</description>
            <name>BLK1_DOUT5</name>
          </field>
        </fields>
        <name>BLK1_RDATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK1</description>
            <name>BLK1_DOUT6</name>
          </field>
        </fields>
        <name>BLK1_RDATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK1</description>
            <name>BLK1_DOUT7</name>
          </field>
        </fields>
        <name>BLK1_RDATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK2</description>
            <name>BLK2_DOUT0</name>
          </field>
        </fields>
        <name>BLK2_RDATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK2</description>
            <name>BLK2_DOUT1</name>
          </field>
        </fields>
        <name>BLK2_RDATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK2</description>
            <name>BLK2_DOUT2</name>
          </field>
        </fields>
        <name>BLK2_RDATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK2</description>
            <name>BLK2_DOUT3</name>
          </field>
        </fields>
        <name>BLK2_RDATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK2</description>
            <name>BLK2_DOUT4</name>
          </field>
        </fields>
        <name>BLK2_RDATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK2</description>
            <name>BLK2_DOUT5</name>
          </field>
        </fields>
        <name>BLK2_RDATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK2</description>
            <name>BLK2_DOUT6</name>
          </field>
        </fields>
        <name>BLK2_RDATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK2</description>
            <name>BLK2_DOUT7</name>
          </field>
        </fields>
        <name>BLK2_RDATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK3</description>
            <name>BLK3_DOUT0</name>
          </field>
        </fields>
        <name>BLK3_RDATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK3</description>
            <name>BLK3_DOUT1</name>
          </field>
        </fields>
        <name>BLK3_RDATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK3</description>
            <name>BLK3_DOUT2</name>
          </field>
        </fields>
        <name>BLK3_RDATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK3</description>
            <name>BLK3_DOUT3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>ADC1 Two Point calibration low point. Only valid if EFUSE_RD_BLK3_PART_RESERVE </description>
            <name>RD_ADC1_TP_LOW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>ADC1 Two Point calibration high point. Only valid if EFUSE_RD_BLK3_PART_RESERVE </description>
            <name>RD_ADC1_TP_HIGH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>ADC2 Two Point calibration low point. Only valid if EFUSE_RD_BLK3_PART_RESERVE </description>
            <name>RD_ADC2_TP_LOW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>ADC2 Two Point calibration high point. Only valid if EFUSE_RD_BLK3_PART_RESERVE </description>
            <name>RD_ADC2_TP_HIGH</name>
          </field>
        </fields>
        <name>BLK3_RDATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK3</description>
            <name>BLK3_DOUT4</name>
          </field>
        </fields>
        <name>BLK3_RDATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK3</description>
            <name>BLK3_DOUT5</name>
          </field>
        </fields>
        <name>BLK3_RDATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK3</description>
            <name>BLK3_DOUT6</name>
          </field>
        </fields>
        <name>BLK3_RDATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>read for BLOCK3</description>
            <name>BLK3_DOUT7</name>
          </field>
        </fields>
        <name>BLK3_RDATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK1</description>
            <name>BLK1_DIN0</name>
          </field>
        </fields>
        <name>BLK1_WDATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK1</description>
            <name>BLK1_DIN1</name>
          </field>
        </fields>
        <name>BLK1_WDATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK1</description>
            <name>BLK1_DIN2</name>
          </field>
        </fields>
        <name>BLK1_WDATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK1</description>
            <name>BLK1_DIN3</name>
          </field>
        </fields>
        <name>BLK1_WDATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK1</description>
            <name>BLK1_DIN4</name>
          </field>
        </fields>
        <name>BLK1_WDATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK1</description>
            <name>BLK1_DIN5</name>
          </field>
        </fields>
        <name>BLK1_WDATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK1</description>
            <name>BLK1_DIN6</name>
          </field>
        </fields>
        <name>BLK1_WDATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK1</description>
            <name>BLK1_DIN7</name>
          </field>
        </fields>
        <name>BLK1_WDATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK2</description>
            <name>BLK2_DIN0</name>
          </field>
        </fields>
        <name>BLK2_WDATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK2</description>
            <name>BLK2_DIN1</name>
          </field>
        </fields>
        <name>BLK2_WDATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK2</description>
            <name>BLK2_DIN2</name>
          </field>
        </fields>
        <name>BLK2_WDATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK2</description>
            <name>BLK2_DIN3</name>
          </field>
        </fields>
        <name>BLK2_WDATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK2</description>
            <name>BLK2_DIN4</name>
          </field>
        </fields>
        <name>BLK2_WDATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK2</description>
            <name>BLK2_DIN5</name>
          </field>
        </fields>
        <name>BLK2_WDATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK2</description>
            <name>BLK2_DIN6</name>
          </field>
        </fields>
        <name>BLK2_WDATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK2</description>
            <name>BLK2_DIN7</name>
          </field>
        </fields>
        <name>BLK2_WDATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK3</description>
            <name>BLK3_DIN0</name>
          </field>
        </fields>
        <name>BLK3_WDATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK3</description>
            <name>BLK3_DIN1</name>
          </field>
        </fields>
        <name>BLK3_WDATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK3</description>
            <name>BLK3_DIN2</name>
          </field>
        </fields>
        <name>BLK3_WDATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK3</description>
            <name>BLK3_DIN3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>ADC1 Two Point calibration low point. Only valid if EFUSE_RD_BLK3_PART_RESERVE </description>
            <name>ADC1_TP_LOW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>ADC1 Two Point calibration high point. Only valid if EFUSE_RD_BLK3_PART_RESERVE </description>
            <name>ADC1_TP_HIGH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>ADC2 Two Point calibration low point. Only valid if EFUSE_RD_BLK3_PART_RESERVE </description>
            <name>ADC2_TP_LOW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>ADC2 Two Point calibration high point. Only valid if EFUSE_RD_BLK3_PART_RESERVE </description>
            <name>ADC2_TP_HIGH</name>
          </field>
        </fields>
        <name>BLK3_WDATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK3</description>
            <name>BLK3_DIN4</name>
          </field>
        </fields>
        <name>BLK3_WDATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK3</description>
            <name>BLK3_DIN5</name>
          </field>
        </fields>
        <name>BLK3_WDATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK3</description>
            <name>BLK3_DIN6</name>
          </field>
        </fields>
        <name>BLK3_WDATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>program for BLOCK3</description>
            <name>BLK3_DIN7</name>
          </field>
        </fields>
        <name>BLK3_WDATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>efuse timing configure</description>
            <name>SEL0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>efuse timing configure</description>
            <name>SEL1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EN</name>
          </field>
        </fields>
        <name>CLK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4052</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>efuse operation code</description>
            <name>OP_CODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FORCE_NO_WR_RD_DIS</name>
          </field>
        </fields>
        <name>CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DEBUG</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>command for read</description>
            <name>READ_CMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>command for program</description>
            <name>PGM_CMD</name>
          </field>
        </fields>
        <name>CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read done interrupt raw status</description>
            <name>READ_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program done interrupt raw status</description>
            <name>PGM_DONE_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read done interrupt status</description>
            <name>READ_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program done interrupt status</description>
            <name>PGM_DONE_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read done interrupt enable</description>
            <name>READ_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program done interrupt enable</description>
            <name>PGM_DONE_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read done interrupt clear</description>
            <name>READ_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program done interrupt clear</description>
            <name>PGM_DONE_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>efuse timing configure</description>
            <name>DAC_CLK_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DAC_CLK_PAD_SEL</name>
          </field>
        </fields>
        <name>DAC_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x28</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>the decode result of 3/4 coding scheme has warning</description>
            <name>DEC_WARNINGS</name>
          </field>
        </fields>
        <name>DEC_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x16042600</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x2C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF46000</baseAddress>
    <description>Peripheral FLASH_ENCRYPTION</description>
    <groupName>FLASH_ENCRYPTION</groupName>
    <interrupts></interrupts>
    <name>FLASH_ENCRYPTION</name>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Set this bit to start encryption operation on data buffer.</description>
            <name>FLASH_START</name>
          </field>
        </fields>
        <name>START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The physical address on the off-chip flash must be 8-word boundary aligned.</description>
            <name>ADDRESS</name>
          </field>
        </fields>
        <name>ADDRESS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit when encryption operation is complete.</description>
            <name>FLASH_DONE</name>
          </field>
        </fields>
        <name>DONE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data buffers for encryption.</description>
            <name>BUFFER</name>
          </field>
        </fields>
        <name>BUFFER_0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data buffers for encryption.</description>
            <name>BUFFER</name>
          </field>
        </fields>
        <name>BUFFER_1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data buffers for encryption.</description>
            <name>BUFFER</name>
          </field>
        </fields>
        <name>BUFFER_2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data buffers for encryption.</description>
            <name>BUFFER</name>
          </field>
        </fields>
        <name>BUFFER_3</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data buffers for encryption.</description>
            <name>BUFFER</name>
          </field>
        </fields>
        <name>BUFFER_4</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data buffers for encryption.</description>
            <name>BUFFER</name>
          </field>
        </fields>
        <name>BUFFER_5</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data buffers for encryption.</description>
            <name>BUFFER</name>
          </field>
        </fields>
        <name>BUFFER_6</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data buffers for encryption.</description>
            <name>BUFFER</name>
          </field>
        </fields>
        <name>BUFFER_7</name>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x14</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF47000</baseAddress>
    <description>Peripheral FRC_TIMER</description>
    <groupName>FRC</groupName>
    <interrupts></interrupts>
    <name>FRC_TIMER</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>VALUE</name>
          </field>
        </fields>
        <name>TIMER_LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER_COUNT</name>
          </field>
        </fields>
        <name>TIMER_COUNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER_PRESCALER</name>
          </field>
        </fields>
        <name>TIMER_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLR</name>
          </field>
        </fields>
        <name>TIMER_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER_ALARM</name>
          </field>
        </fields>
        <name>TIMER_ALARM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x5CC</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF44000</baseAddress>
    <description>General Purpose Input/Output</description>
    <groupName>GPIO</groupName>
    <interrupts>
      <interrupt>
        <name>GPIO</name>
        <value>0x16</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>GPIO_NMI</name>
        <value>0x17</value>
      </interrupt>
    </interrupts>
    <name>GPIO</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>NA</description>
            <name>BT_SEL</name>
          </field>
        </fields>
        <name>BT_SELECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 output value</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>OUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 output value write 1 to set</description>
            <name>OUT_DATA_W1TS</name>
          </field>
        </fields>
        <name>OUT_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 output value write 1 to clear</description>
            <name>OUT_DATA_W1TC</name>
          </field>
        </fields>
        <name>OUT_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 output value</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>OUT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 output value write 1 to set</description>
            <name>OUT1_DATA_W1TS</name>
          </field>
        </fields>
        <name>OUT1_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 output value write 1 to clear</description>
            <name>OUT1_DATA_W1TC</name>
          </field>
        </fields>
        <name>OUT1_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SDIO PADS on/off control from outside</description>
            <name>SDIO_SEL</name>
          </field>
        </fields>
        <name>SDIO_SELECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 output enable</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>ENABLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 output enable write 1 to set</description>
            <name>ENABLE_DATA_W1TS</name>
          </field>
        </fields>
        <name>ENABLE_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 output enable write 1 to clear</description>
            <name>ENABLE_DATA_W1TC</name>
          </field>
        </fields>
        <name>ENABLE_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 output enable</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>ENABLE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 output enable write 1 to set</description>
            <name>ENABLE1_DATA_W1TS</name>
          </field>
        </fields>
        <name>ENABLE1_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 output enable write 1 to clear</description>
            <name>ENABLE1_DATA_W1TC</name>
          </field>
        </fields>
        <name>ENABLE1_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>{10'b0, MTDI, GPIO0, GPIO2, GPIO4, MTDO, GPIO5} </description>
            <name>STRAPPING</name>
          </field>
        </fields>
        <name>STRAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 input value</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>IN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 input value</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>IN1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 interrupt status</description>
            <name>INT</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 interrupt status write 1 to set</description>
            <name>STATUS_INT_W1TS</name>
          </field>
        </fields>
        <name>STATUS_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 interrupt status write 1 to clear</description>
            <name>STATUS_INT_W1TC</name>
          </field>
        </fields>
        <name>STATUS_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 interrupt status</description>
            <name>INT</name>
          </field>
        </fields>
        <name>STATUS1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 interrupt status write 1 to set</description>
            <name>STATUS1_INT_W1TS</name>
          </field>
        </fields>
        <name>STATUS1_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 interrupt status write 1 to clear</description>
            <name>STATUS1_INT_W1TC</name>
          </field>
        </fields>
        <name>STATUS1_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 APP CPU interrupt status</description>
            <name>APPCPU_INT</name>
          </field>
        </fields>
        <name>ACPU_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 APP CPU non-maskable interrupt status</description>
            <name>APPCPU_NMI_INT</name>
          </field>
        </fields>
        <name>ACPU_NMI_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 PRO CPU interrupt status</description>
            <name>PROCPU_INT</name>
          </field>
        </fields>
        <name>PCPU_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO0~31 PRO CPU non-maskable interrupt status</description>
            <name>PROCPU_NMI_INT</name>
          </field>
        </fields>
        <name>PCPU_NMI_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>SDIO's extent GPIO0~31 interrupt</description>
            <name>SDIO_INT</name>
          </field>
        </fields>
        <name>CPUSDIO_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 APP CPU interrupt status</description>
            <name>APPCPU_INT_H</name>
          </field>
        </fields>
        <name>ACPU_INT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 APP CPU non-maskable interrupt status</description>
            <name>APPCPU_NMI_INT_H</name>
          </field>
        </fields>
        <name>ACPU_NMI_INT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 PRO CPU interrupt status</description>
            <name>PROCPU_INT_H</name>
          </field>
        </fields>
        <name>PCPU_INT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO32~39 PRO CPU non-maskable interrupt status</description>
            <name>PROCPU_NMI_INT_H</name>
          </field>
        </fields>
        <name>PCPU_NMI_INT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SDIO's extent GPIO32~39 interrupt</description>
            <name>SDIO_INT_H</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>CPUSDIO_INT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>CALI_RTC_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CALI_START</name>
          </field>
        </fields>
        <name>cali_conf</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>CALI_VALUE_SYNC2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CALI_RDY_REAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CALI_RDY_SYNC2</name>
          </field>
        </fields>
        <name>cali_data</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN3</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN4</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN5</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN6</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN7</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN8</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN9</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN10</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN11</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN12</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN13</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN14</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN15</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN16</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN17</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN18</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN19</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN20</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN21</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN22</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN23</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN24</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN25</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN26</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN27</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN28</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN29</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN30</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN31</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN32</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN33</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN34</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN35</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN36</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN37</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN38</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>NA</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>bit: APP CPU interrupt enable  bit1: APP CPU non-maskable interrupt enable  bit3: PRO CPU interrupt enable  bit4:  PRO CPU non-maskable interrupt enable  bit5: SDIO's extent interrupt enable</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN39</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC0_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC1_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC2_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC3_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC4_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC5_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC6_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC7_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x150</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC8_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x154</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC9_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x158</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC10_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC11_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x160</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC12_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x164</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC13_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x168</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC14_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC15_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x170</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC16_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x174</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC17_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x178</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC18_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC19_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x180</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC20_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x184</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC21_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x188</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC22_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC23_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x190</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC24_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x194</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC25_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x198</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC26_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC27_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC28_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC29_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC30_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1AC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC31_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC32_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC33_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC34_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1BC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC35_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC36_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC37_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC38_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1CC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC39_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC40_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC41_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC42_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1DC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC43_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC44_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC45_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC46_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1EC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC47_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC48_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC49_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC50_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC51_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x200</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC52_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x204</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC53_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x208</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC54_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC55_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x210</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC56_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x214</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC57_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x218</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC58_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC59_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x220</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC60_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x224</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC61_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x228</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC62_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x22C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC63_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x230</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC64_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x234</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC65_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x238</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC66_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x23C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC67_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x240</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC68_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x244</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC69_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x248</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC70_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC71_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x250</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC72_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x254</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC73_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x258</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC74_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC75_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x260</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC76_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x264</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC77_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x268</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC78_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC79_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x270</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC80_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x274</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC81_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x278</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC82_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC83_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x280</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC84_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x284</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC85_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x288</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC86_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC87_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x290</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC88_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x294</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC89_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x298</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC90_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x29C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC91_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC92_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC93_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC94_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2AC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC95_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC96_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC97_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC98_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2BC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC99_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC100_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC101_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC102_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2CC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC103_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC104_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC105_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC106_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2DC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC107_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC108_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC109_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC110_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2EC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC111_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC112_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC113_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC114_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2FC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC115_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x300</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC116_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x304</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC117_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x308</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC118_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC119_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x310</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC120_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x314</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC121_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x318</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC122_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x31C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC123_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x320</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC124_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x324</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC125_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x328</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC126_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x32C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC127_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x330</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC128_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x334</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC129_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x338</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC130_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x33C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC131_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x340</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC132_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x344</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC133_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x348</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC134_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC135_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x350</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC136_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x354</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC137_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x358</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC138_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x35C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC139_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x360</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC140_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x364</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC141_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x368</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC142_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x36C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC143_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x370</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC144_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x374</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC145_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x378</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC146_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x37C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC147_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x380</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC148_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x384</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC149_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x388</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC150_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC151_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x390</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC152_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x394</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC153_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x398</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC154_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x39C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC155_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC156_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC157_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC158_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3AC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC159_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC160_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC161_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC162_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3BC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC163_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC164_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC165_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC166_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3CC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC167_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC168_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC169_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC170_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3DC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC171_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC172_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC173_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC174_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3EC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC175_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC176_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC177_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC178_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC179_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x400</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC180_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x404</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC181_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x408</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC182_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC183_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x410</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC184_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x414</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC185_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x418</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC186_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x41C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC187_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x420</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC188_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x424</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC189_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x428</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC190_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x42C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC191_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x430</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC192_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x434</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC193_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x438</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC194_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x43C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC195_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x440</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC196_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x444</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC197_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x448</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC198_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC199_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x450</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC200_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x454</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC201_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x458</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC202_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x45C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC203_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x460</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC204_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x464</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC205_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x468</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC206_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x46C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC207_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x470</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC208_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x474</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC209_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x478</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC210_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x47C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC211_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x480</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC212_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x484</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC213_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x488</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC214_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC215_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x490</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC216_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x494</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC217_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x498</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC218_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x49C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC219_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC220_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC221_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC222_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4AC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC223_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC224_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC225_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC226_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4BC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC227_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC228_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC229_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC230_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4CC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC231_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC232_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC233_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC234_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4DC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC235_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC236_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC237_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC238_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4EC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC239_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC240_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC241_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC242_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4FC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC243_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x500</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC244_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x504</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC245_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x508</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC246_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC247_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x510</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC248_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x514</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC249_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x518</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC250_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC251_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x520</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC252_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x524</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC253_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x528</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC254_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>select one of the 256 inputs</description>
            <name>IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>revert the value of the input if you want to revert  please set the value to 1</description>
            <name>IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if the slow signal bypass the io matrix or not if you want  setting the value to 1</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>FUNC255_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x530</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC0_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x534</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC1_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x538</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC2_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC3_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x540</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC4_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x544</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC5_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x548</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC6_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC7_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x550</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC8_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x554</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC9_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x558</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC10_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC11_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x560</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC12_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x564</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC13_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x568</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC14_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC15_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x570</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC16_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x574</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC17_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x578</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC18_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC19_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x580</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC20_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x584</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC21_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x588</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC22_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC23_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x590</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC24_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x594</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC25_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x598</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC26_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC27_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC28_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC29_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC30_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5AC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC31_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC32_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC33_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC34_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5BC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC35_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC36_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC37_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC38_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5CC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>select one of the 256 output to 4 GPIO</description>
            <name>OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output value  if you want to revert the output value  setting the value to 1</description>
            <name>INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>weather using the logical oen signal or not using the value setting by the register</description>
            <name>OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert the output enable value  if you want to revert the output enable value  setting the value to 1</description>
            <name>OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC39_OUT_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x2C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF44F00</baseAddress>
    <description>Sigma-Delta Modulation</description>
    <groupName>GPIO_SIGMADELTA</groupName>
    <interrupts></interrupts>
    <name>GPIO_SD</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD0_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD0_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD1_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD1_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD2_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD2_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD3_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD3_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD4_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD4_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD5_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD5_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD6_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD6_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD7_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>GPIO_SD7_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GPIO_SD_CLK_EN</name>
          </field>
        </fields>
        <name>SIGMADELTA_CG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GPIO_SPI_SWAP</name>
          </field>
        </fields>
        <name>SIGMADELTA_MISC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <name>GPIO_SD_DATE</name>
          </field>
        </fields>
        <name>SIGMADELTA_VERSION</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1506190</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x34</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF4B000</baseAddress>
    <description>Peripheral HINF</description>
    <groupName>HINF</groupName>
    <interrupts></interrupts>
    <name>HINF</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>USER_ID_FN1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DEVICE_ID_FN1</name>
          </field>
        </fields>
        <name>CFG_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x22226666</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SDIO_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SDIO_IOREADY1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HIGHSPEED_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HIGHSPEED_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SDIO_CD_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SDIO_IOREADY2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SDIO_INT_MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IOENABLE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CD_DISABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FUNC1_EPS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EMP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IOENABLE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>SDIO20_CONF0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SDIO_VER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FUNC2_EPS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>SDIO20_CONF1</name>
          </field>
        </fields>
        <name>CFG_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1110011</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>PIN_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CHIP_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SDIO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SDIO_IOREADY0</name>
          </field>
        </fields>
        <name>CFG_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CIS_CONF_W0</name>
          </field>
        </fields>
        <name>CIS_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CIS_CONF_W1</name>
          </field>
        </fields>
        <name>CIS_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CIS_CONF_W2</name>
          </field>
        </fields>
        <name>CIS_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CIS_CONF_W3</name>
          </field>
        </fields>
        <name>CIS_CONF3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CIS_CONF_W4</name>
          </field>
        </fields>
        <name>CIS_CONF4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CIS_CONF_W5</name>
          </field>
        </fields>
        <name>CIS_CONF5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CIS_CONF_W6</name>
          </field>
        </fields>
        <name>CIS_CONF6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CIS_CONF_W7</name>
          </field>
        </fields>
        <name>CIS_CONF7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>USER_ID_FN2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DEVICE_ID_FN2</name>
          </field>
        </fields>
        <name>CFG_DATA16</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x33336666</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SDIO_DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x15030200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x9C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF53000</baseAddress>
    <description>I2C (Inter-Integrated Circuit) Controller</description>
    <groupName>I2C</groupName>
    <interrupts>
      <interrupt>
        <name>I2C_EXT0</name>
        <value>0x31</value>
      </interrupt>
    </interrupts>
    <name>I2C0</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This register is used to configure the  low level width of SCL clock.</description>
            <name>SCL_LOW_PERIOD</name>
          </field>
        </fields>
        <name>SCL_LOW_PERIOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: normally ouput sda data   0: exchange the function of sda_o and sda_oe (sda_o is the original internal output sda signal sda_oe is the enable bit for the internal output sda signal)</description>
            <name>SDA_FORCE_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: normally ouput scl clock  0: exchange the function of scl_o and scl_oe (scl_o is the original internal output scl signal  scl_oe is the enable bit for the internal output scl signal)</description>
            <name>SCL_FORCE_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to sample data in SCL low level. clear this bit to sample data in SCL high level.</description>
            <name>SAMPLE_SCL_LEVEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to configure the module as i2c master  clear this bit to configure the module as i2c slave.</description>
            <name>MS_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start sending data in txfifo.</description>
            <name>TRANS_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the sending mode for  data need to be send. 1: receive data from most significant bit    0: receive data from least significant bit</description>
            <name>TX_LSB_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the storage mode for received datas. 1: receive data from most significant bit    0: receive data from least significant bit</description>
            <name>RX_LSB_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the clock gating control bit for reading or writing registers.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CTR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the value of ACK bit.</description>
            <name>ACK_REC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when in slave mode  1: master read slave  0: master write slave.</description>
            <name>SLAVE_RW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when I2C takes more than time_out_reg clocks to receive a data then this register changes to high level.</description>
            <name>TIME_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when I2C lost control of SDA line  this register changes to high level.</description>
            <name>ARB_LOST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1:I2C bus is busy transferring data. 0:I2C bus is in idle state.</description>
            <name>BUS_BUSY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when configured as i2c slave  and the address send by master is equal to slave's address  then this bit will be high level.</description>
            <name>SLAVE_ADDRESSED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register changes to high level when one byte is transferred.</description>
            <name>BYTE_TRANS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>This register represent the amount of data need to send.</description>
            <name>RXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>This register stores the amount of received data  in ram.</description>
            <name>TXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This register stores the value of state machine for i2c module.  3'h0: SCL_MAIN_IDLE  3'h1: SCL_ADDRESS_SHIFT 3'h2: SCL_ACK_ADDRESS  3'h3: SCL_RX_DATA  3'h4 SCL_TX_DATA  3'h5:SCL_SEND_ACK 3'h6:SCL_WAIT_ACK</description>
            <name>SCL_MAIN_STATE_LAST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This register stores the value of state machine to produce SCL. 3'h0: SCL_IDLE  3'h1:SCL_START   3'h2:SCL_LOW_EDGE  3'h3: SCL_LOW   3'h4:SCL_HIGH_EDGE   3'h5:SCL_HIGH  3'h6:SCL_STOP</description>
            <name>SCL_STATE_LAST</name>
          </field>
        </fields>
        <name>SR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register is used to configure the max clock number of receiving  a data.</description>
            <name>TIME_OUT</name>
          </field>
        </fields>
        <name>TO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xF</bitWidth>
            <description>when configured as i2c slave  this register is used to configure slave's address.</description>
            <name>SLAVE_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to enable slave 10bit address mode.</description>
            <name>ADDR_10BIT_EN</name>
          </field>
        </fields>
        <name>SLAVE_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This is the offset address of the last receiving data as described in nonfifo_rx_thres_register.</description>
            <name>RXFIFO_START_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This is the offset address of the first receiving data as described in nonfifo_rx_thres_register.</description>
            <name>RXFIFO_END_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This is the offset address of the first  sending data as described in nonfifo_tx_thres register.</description>
            <name>TXFIFO_START_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This is the offset address of the last  sending data as described in nonfifo_tx_thres register.</description>
            <name>TXFIFO_END_ADDR</name>
          </field>
        </fields>
        <name>RXFIFO_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>RXFIFO_FULL_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Config txfifo empty threhd value when using apb fifo access</description>
            <name>TXFIFO_EMPTY_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enble apb nonfifo access.</description>
            <name>NONFIFO_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When this bit is set to 1 then the byte after address represent the offset address of I2C Slave's ram.</description>
            <name>FIFO_ADDR_CFG_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset rx fifo when using apb fifo access.</description>
            <name>RX_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset tx fifo when using apb fifo access.</description>
            <name>TX_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>when I2C receives more than nonfifo_rx_thres data  it will produce rx_send_full_int_raw interrupt and update the current offset address of the receiving data.</description>
            <name>NONFIFO_RX_THRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>when I2C sends more than nonfifo_tx_thres data  it will produce tx_send_empty_int_raw interrupt and update the current offset address of the sending data.</description>
            <name>NONFIFO_TX_THRES</name>
          </field>
        </fields>
        <name>FIFO_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x155408B</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The register represent the byte  data read from rxfifo when use apb fifo access</description>
            <name>FIFO_RDATA</name>
          </field>
        </fields>
        <name>DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for rxfifo full when use apb fifo access.</description>
            <name>RXFIFO_FULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for txfifo empty when use apb fifo access.</description>
            <name>TXFIFO_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for receiving data overflow when use apb fifo access.</description>
            <name>RXFIFO_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for end_detect_int interrupt. when I2C deals with  the END command  it will produce end_detect_int interrupt.</description>
            <name>END_DETECT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for slave_tran_comp_int interrupt. when I2C Slave detectsthe STOP bit  it will produce slave_tran_comp_int interrupt.</description>
            <name>SLAVE_TRAN_COMP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for arbitration_lost_int interrupt.when I2C lost the usage right of I2C BUS it will produce arbitration_lost_int interrupt.</description>
            <name>ARBITRATION_LOST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for master_tra_comp_int interrupt. when I2C Master sends or receives a byte it will produce master_tran_comp_int interrupt.</description>
            <name>MASTER_TRAN_COMP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for trans_complete_int interrupt. when I2C Master finished STOP command  it will produce trans_complete_int interrupt.</description>
            <name>TRANS_COMPLETE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for time_out_int interrupt. when I2C takes a lot of time to receive a data  it will produce  time_out_int interrupt.</description>
            <name>TIME_OUT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for trans_start_int interrupt. when I2C sends the START bit it will produce trans_start_int interrupt.</description>
            <name>TRANS_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for ack_err_int interrupt. when I2C receives a wrong ACK bit  it will produce ack_err_int interrupt..</description>
            <name>ACK_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for rx_rec_full_int interrupt. when I2C receives more data  than nonfifo_rx_thres  it will produce rx_rec_full_int interrupt.</description>
            <name>RX_REC_FULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for tx_send_empty_int interrupt.when I2C sends more data than nonfifo_tx_thres  it will produce tx_send_empty_int interrupt..</description>
            <name>TX_SEND_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_full_int interrupt.</description>
            <name>RXFIFO_FULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the txfifo_empty_int interrupt.</description>
            <name>TXFIFO_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_ovf_int interrupt.</description>
            <name>RXFIFO_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the end_detect_int interrupt.</description>
            <name>END_DETECT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the slave_tran_comp_int interrupt.</description>
            <name>SLAVE_TRAN_COMP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the arbitration_lost_int interrupt.</description>
            <name>ARBITRATION_LOST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the master_tran_comp interrupt.</description>
            <name>MASTER_TRAN_COMP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the trans_complete_int interrupt.</description>
            <name>TRANS_COMPLETE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the time_out_int interrupt.</description>
            <name>TIME_OUT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the trans_start_int interrupt.</description>
            <name>TRANS_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the ack_err_int interrupt.</description>
            <name>ACK_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rx_rec_full_int interrupt.</description>
            <name>RX_REC_FULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_send_empty_int interrupt.</description>
            <name>TX_SEND_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for rxfifo_full_int interrupt.</description>
            <name>RXFIFO_FULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for txfifo_empty_int interrupt.</description>
            <name>TXFIFO_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for rxfifo_ovf_int interrupt.</description>
            <name>RXFIFO_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for end_detect_int interrupt.</description>
            <name>END_DETECT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for slave_tran_comp_int interrupt.</description>
            <name>SLAVE_TRAN_COMP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for arbitration_lost_int interrupt.</description>
            <name>ARBITRATION_LOST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for master_tran_comp_int interrupt.</description>
            <name>MASTER_TRAN_COMP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for trans_complete_int interrupt.</description>
            <name>TRANS_COMPLETE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for time_out_int interrupt.</description>
            <name>TIME_OUT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for trans_start_int interrupt.</description>
            <name>TRANS_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for ack_err_int interrupt.</description>
            <name>ACK_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for rx_rec_full_int interrupt.</description>
            <name>RX_REC_FULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for tx_send_empty_int interrupt.</description>
            <name>TX_SEND_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for rxfifo_full_int interrupt.</description>
            <name>RXFIFO_FULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for txfifo_empty_int interrupt.</description>
            <name>TXFIFO_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for rxfifo_ovf_int interrupt.</description>
            <name>RXFIFO_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for end_detect_int interrupt.</description>
            <name>END_DETECT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for slave_tran_comp_int interrupt.</description>
            <name>SLAVE_TRAN_COMP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for arbitration_lost_int interrupt.</description>
            <name>ARBITRATION_LOST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for master_tran_comp_int interrupt.</description>
            <name>MASTER_TRAN_COMP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for trans_complete_int interrupt.</description>
            <name>TRANS_COMPLETE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for time_out_int interrupt.</description>
            <name>TIME_OUT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for trans_start_int interrupt.</description>
            <name>TRANS_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for ack_err_int interrupt.</description>
            <name>ACK_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for rx_rec_full_int interrupt.</description>
            <name>RX_REC_FULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for tx_send_empty_int interrupt.</description>
            <name>TX_SEND_EMPTY_INT_ST</name>
          </field>
        </fields>
        <name>INT_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the clock num I2C used to hold the data after the negedge of SCL.</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SDA_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the clock num I2C used to sample data on SDA after the posedge of SCL</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SDA_SAMPLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This register is used to configure the clock num during SCL is low level.</description>
            <name>SCL_HIGH_PERIOD</name>
          </field>
        </fields>
        <name>SCL_HIGH_PERIOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the clock num between the negedge of SDA and negedge of SCL for start mark.</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_START_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the clock num between the posedge of SCL and the negedge of SDA for restart mark.</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_RSTART_SETUP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This register is used to configure the clock num after the STOP bit's posedge.</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_STOP_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the clock num between the posedge of SCL and the posedge of SDA.</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_STOP_SETUP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>When input SCL's pulse width is smaller than this register value  I2C ignores this pulse.</description>
            <name>SCL_FILTER_THRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the filter enable bit for SCL.</description>
            <name>SCL_FILTER_EN</name>
          </field>
        </fields>
        <name>SCL_FILTER_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>When input SCL's pulse width is smaller than this register value  I2C ignores this pulse.</description>
            <name>SDA_FILTER_THRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the filter enable bit for SDA.</description>
            <name>SDA_FILTER_EN</name>
          </field>
        </fields>
        <name>SDA_FILTER_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x16042000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields></fields>
        <name>FIFO_START_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD3</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD4</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD5</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD6</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD7</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD8</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD9</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD10</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD11</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD12</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD13</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD14</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD15</name>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x9C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF67000</baseAddress>
    <derivedFrom>I2C0</derivedFrom>
    <description>I2C (Inter-Integrated Circuit) Controller</description>
    <groupName>I2C</groupName>
    <interrupts>
      <interrupt>
        <name>I2C_EXT1</name>
        <value>0x32</value>
      </interrupt>
    </interrupts>
    <name>I2C1</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This register is used to configure the  low level width of SCL clock.</description>
            <name>SCL_LOW_PERIOD</name>
          </field>
        </fields>
        <name>SCL_LOW_PERIOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: normally ouput sda data   0: exchange the function of sda_o and sda_oe (sda_o is the original internal output sda signal sda_oe is the enable bit for the internal output sda signal)</description>
            <name>SDA_FORCE_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: normally ouput scl clock  0: exchange the function of scl_o and scl_oe (scl_o is the original internal output scl signal  scl_oe is the enable bit for the internal output scl signal)</description>
            <name>SCL_FORCE_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to sample data in SCL low level. clear this bit to sample data in SCL high level.</description>
            <name>SAMPLE_SCL_LEVEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to configure the module as i2c master  clear this bit to configure the module as i2c slave.</description>
            <name>MS_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start sending data in txfifo.</description>
            <name>TRANS_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the sending mode for  data need to be send. 1: receive data from most significant bit    0: receive data from least significant bit</description>
            <name>TX_LSB_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the storage mode for received datas. 1: receive data from most significant bit    0: receive data from least significant bit</description>
            <name>RX_LSB_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the clock gating control bit for reading or writing registers.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CTR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the value of ACK bit.</description>
            <name>ACK_REC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when in slave mode  1: master read slave  0: master write slave.</description>
            <name>SLAVE_RW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when I2C takes more than time_out_reg clocks to receive a data then this register changes to high level.</description>
            <name>TIME_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when I2C lost control of SDA line  this register changes to high level.</description>
            <name>ARB_LOST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1:I2C bus is busy transferring data. 0:I2C bus is in idle state.</description>
            <name>BUS_BUSY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when configured as i2c slave  and the address send by master is equal to slave's address  then this bit will be high level.</description>
            <name>SLAVE_ADDRESSED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register changes to high level when one byte is transferred.</description>
            <name>BYTE_TRANS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>This register represent the amount of data need to send.</description>
            <name>RXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>This register stores the amount of received data  in ram.</description>
            <name>TXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This register stores the value of state machine for i2c module.  3'h0: SCL_MAIN_IDLE  3'h1: SCL_ADDRESS_SHIFT 3'h2: SCL_ACK_ADDRESS  3'h3: SCL_RX_DATA  3'h4 SCL_TX_DATA  3'h5:SCL_SEND_ACK 3'h6:SCL_WAIT_ACK</description>
            <name>SCL_MAIN_STATE_LAST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This register stores the value of state machine to produce SCL. 3'h0: SCL_IDLE  3'h1:SCL_START   3'h2:SCL_LOW_EDGE  3'h3: SCL_LOW   3'h4:SCL_HIGH_EDGE   3'h5:SCL_HIGH  3'h6:SCL_STOP</description>
            <name>SCL_STATE_LAST</name>
          </field>
        </fields>
        <name>SR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register is used to configure the max clock number of receiving  a data.</description>
            <name>TIME_OUT</name>
          </field>
        </fields>
        <name>TO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xF</bitWidth>
            <description>when configured as i2c slave  this register is used to configure slave's address.</description>
            <name>SLAVE_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to enable slave 10bit address mode.</description>
            <name>ADDR_10BIT_EN</name>
          </field>
        </fields>
        <name>SLAVE_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This is the offset address of the last receiving data as described in nonfifo_rx_thres_register.</description>
            <name>RXFIFO_START_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This is the offset address of the first receiving data as described in nonfifo_rx_thres_register.</description>
            <name>RXFIFO_END_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This is the offset address of the first  sending data as described in nonfifo_tx_thres register.</description>
            <name>TXFIFO_START_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This is the offset address of the last  sending data as described in nonfifo_tx_thres register.</description>
            <name>TXFIFO_END_ADDR</name>
          </field>
        </fields>
        <name>RXFIFO_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>RXFIFO_FULL_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Config txfifo empty threhd value when using apb fifo access</description>
            <name>TXFIFO_EMPTY_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enble apb nonfifo access.</description>
            <name>NONFIFO_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When this bit is set to 1 then the byte after address represent the offset address of I2C Slave's ram.</description>
            <name>FIFO_ADDR_CFG_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset rx fifo when using apb fifo access.</description>
            <name>RX_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset tx fifo when using apb fifo access.</description>
            <name>TX_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>when I2C receives more than nonfifo_rx_thres data  it will produce rx_send_full_int_raw interrupt and update the current offset address of the receiving data.</description>
            <name>NONFIFO_RX_THRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>when I2C sends more than nonfifo_tx_thres data  it will produce tx_send_empty_int_raw interrupt and update the current offset address of the sending data.</description>
            <name>NONFIFO_TX_THRES</name>
          </field>
        </fields>
        <name>FIFO_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x155408B</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The register represent the byte  data read from rxfifo when use apb fifo access</description>
            <name>FIFO_RDATA</name>
          </field>
        </fields>
        <name>DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for rxfifo full when use apb fifo access.</description>
            <name>RXFIFO_FULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for txfifo empty when use apb fifo access.</description>
            <name>TXFIFO_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for receiving data overflow when use apb fifo access.</description>
            <name>RXFIFO_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for end_detect_int interrupt. when I2C deals with  the END command  it will produce end_detect_int interrupt.</description>
            <name>END_DETECT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for slave_tran_comp_int interrupt. when I2C Slave detectsthe STOP bit  it will produce slave_tran_comp_int interrupt.</description>
            <name>SLAVE_TRAN_COMP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for arbitration_lost_int interrupt.when I2C lost the usage right of I2C BUS it will produce arbitration_lost_int interrupt.</description>
            <name>ARBITRATION_LOST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for master_tra_comp_int interrupt. when I2C Master sends or receives a byte it will produce master_tran_comp_int interrupt.</description>
            <name>MASTER_TRAN_COMP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for trans_complete_int interrupt. when I2C Master finished STOP command  it will produce trans_complete_int interrupt.</description>
            <name>TRANS_COMPLETE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for time_out_int interrupt. when I2C takes a lot of time to receive a data  it will produce  time_out_int interrupt.</description>
            <name>TIME_OUT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for trans_start_int interrupt. when I2C sends the START bit it will produce trans_start_int interrupt.</description>
            <name>TRANS_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for ack_err_int interrupt. when I2C receives a wrong ACK bit  it will produce ack_err_int interrupt..</description>
            <name>ACK_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for rx_rec_full_int interrupt. when I2C receives more data  than nonfifo_rx_thres  it will produce rx_rec_full_int interrupt.</description>
            <name>RX_REC_FULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for tx_send_empty_int interrupt.when I2C sends more data than nonfifo_tx_thres  it will produce tx_send_empty_int interrupt..</description>
            <name>TX_SEND_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_full_int interrupt.</description>
            <name>RXFIFO_FULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the txfifo_empty_int interrupt.</description>
            <name>TXFIFO_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_ovf_int interrupt.</description>
            <name>RXFIFO_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the end_detect_int interrupt.</description>
            <name>END_DETECT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the slave_tran_comp_int interrupt.</description>
            <name>SLAVE_TRAN_COMP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the arbitration_lost_int interrupt.</description>
            <name>ARBITRATION_LOST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the master_tran_comp interrupt.</description>
            <name>MASTER_TRAN_COMP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the trans_complete_int interrupt.</description>
            <name>TRANS_COMPLETE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the time_out_int interrupt.</description>
            <name>TIME_OUT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the trans_start_int interrupt.</description>
            <name>TRANS_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the ack_err_int interrupt.</description>
            <name>ACK_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rx_rec_full_int interrupt.</description>
            <name>RX_REC_FULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_send_empty_int interrupt.</description>
            <name>TX_SEND_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for rxfifo_full_int interrupt.</description>
            <name>RXFIFO_FULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for txfifo_empty_int interrupt.</description>
            <name>TXFIFO_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for rxfifo_ovf_int interrupt.</description>
            <name>RXFIFO_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for end_detect_int interrupt.</description>
            <name>END_DETECT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for slave_tran_comp_int interrupt.</description>
            <name>SLAVE_TRAN_COMP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for arbitration_lost_int interrupt.</description>
            <name>ARBITRATION_LOST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for master_tran_comp_int interrupt.</description>
            <name>MASTER_TRAN_COMP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for trans_complete_int interrupt.</description>
            <name>TRANS_COMPLETE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for time_out_int interrupt.</description>
            <name>TIME_OUT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for trans_start_int interrupt.</description>
            <name>TRANS_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for ack_err_int interrupt.</description>
            <name>ACK_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for rx_rec_full_int interrupt.</description>
            <name>RX_REC_FULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for tx_send_empty_int interrupt.</description>
            <name>TX_SEND_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for rxfifo_full_int interrupt.</description>
            <name>RXFIFO_FULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for txfifo_empty_int interrupt.</description>
            <name>TXFIFO_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for rxfifo_ovf_int interrupt.</description>
            <name>RXFIFO_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for end_detect_int interrupt.</description>
            <name>END_DETECT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for slave_tran_comp_int interrupt.</description>
            <name>SLAVE_TRAN_COMP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for arbitration_lost_int interrupt.</description>
            <name>ARBITRATION_LOST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for master_tran_comp_int interrupt.</description>
            <name>MASTER_TRAN_COMP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for trans_complete_int interrupt.</description>
            <name>TRANS_COMPLETE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for time_out_int interrupt.</description>
            <name>TIME_OUT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for trans_start_int interrupt.</description>
            <name>TRANS_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for ack_err_int interrupt.</description>
            <name>ACK_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for rx_rec_full_int interrupt.</description>
            <name>RX_REC_FULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status for tx_send_empty_int interrupt.</description>
            <name>TX_SEND_EMPTY_INT_ST</name>
          </field>
        </fields>
        <name>INT_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the clock num I2C used to hold the data after the negedge of SCL.</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SDA_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the clock num I2C used to sample data on SDA after the posedge of SCL</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SDA_SAMPLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This register is used to configure the clock num during SCL is low level.</description>
            <name>SCL_HIGH_PERIOD</name>
          </field>
        </fields>
        <name>SCL_HIGH_PERIOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the clock num between the negedge of SDA and negedge of SCL for start mark.</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_START_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the clock num between the posedge of SCL and the negedge of SDA for restart mark.</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_RSTART_SETUP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This register is used to configure the clock num after the STOP bit's posedge.</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_STOP_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the clock num between the posedge of SCL and the posedge of SDA.</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_STOP_SETUP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>When input SCL's pulse width is smaller than this register value  I2C ignores this pulse.</description>
            <name>SCL_FILTER_THRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the filter enable bit for SCL.</description>
            <name>SCL_FILTER_EN</name>
          </field>
        </fields>
        <name>SCL_FILTER_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>When input SCL's pulse width is smaller than this register value  I2C ignores this pulse.</description>
            <name>SDA_FILTER_THRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the filter enable bit for SDA.</description>
            <name>SDA_FILTER_EN</name>
          </field>
        </fields>
        <name>SDA_FILTER_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x16042000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields></fields>
        <name>FIFO_START_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD3</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD4</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD5</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD6</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD7</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD8</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD9</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD10</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD11</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD12</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD13</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD14</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD15</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD3</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD4</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD5</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD6</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD7</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD8</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD9</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD10</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD11</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD12</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD13</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD14</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>This is the content of command. It consists of three part. op_code is the command  : RSTART   1: WRITE  2: READ  3: STOP . 4:END.  Byte_num represent the number of data need to be send or data need to be received. ack_check_en  ack_exp and ack value are used to control  the ack bit.</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When command is done in I2C Master mode  this bit changes to high level.</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD15</name>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xB4</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF4F000</baseAddress>
    <description>I2S (Inter-IC Sound) Controller</description>
    <groupName>I2S</groupName>
    <interrupts>
      <interrupt>
        <name>I2S0</name>
        <value>0x20</value>
      </interrupt>
    </interrupts>
    <name>I2S0</name>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_FIFO_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_FIFO_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_SLAVE_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_SLAVE_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_RIGHT_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_RIGHT_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_MSB_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_MSB_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_SHORT_SYNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_SHORT_SYNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_MONO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_MONO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_MSB_RIGHT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_MSB_RIGHT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SIG_LOOPBACK</name>
          </field>
        </fields>
        <name>CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x30300</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_TAKE_DATA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PUT_DATA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_WFULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_REMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_WFULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_REMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_TAKE_DATA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PUT_DATA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_WFULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_REMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_WFULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_REMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_TAKE_DATA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PUT_DATA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_WFULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_REMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_WFULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_REMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TAKE_DATA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PUT_DATA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_WFULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_REMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_WFULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_REMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_BCK_IN_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_WS_IN_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_BCK_IN_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_WS_IN_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_SD_IN_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_BCK_OUT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_WS_OUT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_SD_OUT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_WS_OUT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_BCK_OUT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_DSYNC_SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_DSYNC_SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DATA_ENABLE_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_BCK_IN_INV</name>
          </field>
        </fields>
        <name>TIMING</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RX_DATA_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>TX_DATA_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DSCR_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TX_FIFO_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>RX_FIFO_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_FIFO_MOD_FORCE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_FIFO_MOD_FORCE_EN</name>
          </field>
        </fields>
        <name>FIFO_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1820</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RX_EOF_NUM</name>
          </field>
        </fields>
        <name>RXEOF_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SIGLE_DATA</name>
          </field>
        </fields>
        <name>CONF_SIGLE_DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TX_CHAN_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_CHAN_MOD</name>
          </field>
        </fields>
        <name>CONF_CHAN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>OUTLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_PARK</name>
          </field>
        </fields>
        <name>OUT_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>INLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INLINK_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INLINK_PARK</name>
          </field>
        </fields>
        <name>IN_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>OUT_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>IN_SUC_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>IN_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>OUT_EOF_BFR_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_BFR_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>AHB_TESTMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>AHB_TESTADDR</name>
          </field>
        </fields>
        <name>AHB_TEST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>INLINK_DSCR</name>
          </field>
        </fields>
        <name>INLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>INLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>INLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>OUTLINK_DSCR</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>OUTLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>OUTLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AHBM_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AHBM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_AUTO_WRBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_NO_RESTART_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CHECK_OWNER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>MEM_TRANS_EN</name>
          </field>
        </fields>
        <name>LC_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>OUTFIFO_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTFIFO_PUSH</name>
          </field>
        </fields>
        <name>OUTFIFO_PUSH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>INFIFO_RDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INFIFO_POP</name>
          </field>
        </fields>
        <name>INFIFO_POP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LC_STATE0</name>
          </field>
        </fields>
        <name>LC_STATE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LC_STATE1</name>
          </field>
        </fields>
        <name>LC_STATE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>LC_FIFO_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>LC_FIFO_TIMEOUT_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LC_FIFO_TIMEOUT_ENA</name>
          </field>
        </fields>
        <name>LC_HUNG_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x810</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>CVSD_Y_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>CVSD_Y_MIN</name>
          </field>
        </fields>
        <name>CVSD_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80007FFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>CVSD_SIGMA_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>CVSD_SIGMA_MIN</name>
          </field>
        </fields>
        <name>CVSD_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA0500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CVSD_K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CVSD_J</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>CVSD_BETA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CVSD_H</name>
          </field>
        </fields>
        <name>CVSD_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x502A4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GOOD_PACK_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>N_ERR_SEG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>SHIFT_RATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>MAX_SLIDE_SAMPLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PACK_LEN_8K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>N_MIN_ERR</name>
          </field>
        </fields>
        <name>PLC_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8A80339</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>BAD_CEF_ATTEN_PARA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>BAD_CEF_ATTEN_PARA_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>BAD_OLA_WIN2_PARA_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>BAD_OLA_WIN2_PARA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SLIDE_WIN_LEN</name>
          </field>
        </fields>
        <name>PLC_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA0178A05</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CVSD_SEG_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>MIN_PERIOD</name>
          </field>
        </fields>
        <name>PLC_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x28</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ESCO_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ESCO_CHAN_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ESCO_CVSD_DEC_PACK_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>ESCO_CVSD_PACK_LEN_8K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ESCO_CVSD_INF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CVSD_DEC_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CVSD_DEC_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PLC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PLC2DMA_EN</name>
          </field>
        </fields>
        <name>ESCO_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SCO_WITH_I2S_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SCO_NO_I2S_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CVSD_ENC_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CVSD_ENC_RESET</name>
          </field>
        </fields>
        <name>SCO_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TX_PCM_CONF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PCM_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>RX_PCM_CONF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_PCM_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_STOP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_ZEROS_RM_EN</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x89</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FIFO_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FIFO_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PLC_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PLC_MEM_FORCE_PU</name>
          </field>
        </fields>
        <name>PD_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAMERA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LCD_TX_WRX2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LCD_TX_SDX2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DATA_ENABLE_TEST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DATA_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LCD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXT_ADC_START_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INTER_VALID_EN</name>
          </field>
        </fields>
        <name>CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CLKM_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>CLKM_DIV_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>CLKM_DIV_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLKA_ENA</name>
          </field>
        </fields>
        <name>CLKM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>TX_BCK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RX_BCK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>TX_BITS_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RX_BITS_MOD</name>
          </field>
        </fields>
        <name>SAMPLE_RATE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x410186</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PDM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_PDM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PCM2PDM_CONV_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PDM2PCM_CONV_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>TX_PDM_SINC_OSR2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TX_PDM_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_PDM_HP_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_PDM_LP_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_PDM_SINC_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_PDM_SIGMADELTA_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_PDM_SINC_DSR_16_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PDM_HP_BYPASS</name>
          </field>
        </fields>
        <name>PDM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1550020</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>TX_PDM_FS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>TX_PDM_FP</name>
          </field>
        </fields>
        <name>PDM_FREQ_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF01E0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_FIFO_RESET_BACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_FIFO_RESET_BACK</name>
          </field>
        </fields>
        <name>STATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>I2SDATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1604201</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xB4</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF6D000</baseAddress>
    <derivedFrom>I2S0</derivedFrom>
    <description>I2S (Inter-IC Sound) Controller</description>
    <groupName>I2S</groupName>
    <interrupts>
      <interrupt>
        <name>I2S1</name>
        <value>0x21</value>
      </interrupt>
    </interrupts>
    <name>I2S1</name>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_FIFO_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_FIFO_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_SLAVE_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_SLAVE_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_RIGHT_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_RIGHT_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_MSB_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_MSB_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_SHORT_SYNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_SHORT_SYNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_MONO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_MONO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_MSB_RIGHT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_MSB_RIGHT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SIG_LOOPBACK</name>
          </field>
        </fields>
        <name>CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x30300</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_TAKE_DATA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PUT_DATA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_WFULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_REMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_WFULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_REMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_TAKE_DATA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PUT_DATA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_WFULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_REMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_WFULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_REMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_TAKE_DATA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PUT_DATA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_WFULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_REMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_WFULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_REMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TAKE_DATA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PUT_DATA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_WFULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_REMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_WFULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_REMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_BCK_IN_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_WS_IN_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_BCK_IN_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_WS_IN_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_SD_IN_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_BCK_OUT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_WS_OUT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_SD_OUT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_WS_OUT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_BCK_OUT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_DSYNC_SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_DSYNC_SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DATA_ENABLE_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_BCK_IN_INV</name>
          </field>
        </fields>
        <name>TIMING</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RX_DATA_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>TX_DATA_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DSCR_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TX_FIFO_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>RX_FIFO_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_FIFO_MOD_FORCE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_FIFO_MOD_FORCE_EN</name>
          </field>
        </fields>
        <name>FIFO_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1820</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RX_EOF_NUM</name>
          </field>
        </fields>
        <name>RXEOF_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SIGLE_DATA</name>
          </field>
        </fields>
        <name>CONF_SIGLE_DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TX_CHAN_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RX_CHAN_MOD</name>
          </field>
        </fields>
        <name>CONF_CHAN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>OUTLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_PARK</name>
          </field>
        </fields>
        <name>OUT_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>INLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INLINK_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INLINK_PARK</name>
          </field>
        </fields>
        <name>IN_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>OUT_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>IN_SUC_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>IN_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>OUT_EOF_BFR_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_BFR_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>AHB_TESTMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>AHB_TESTADDR</name>
          </field>
        </fields>
        <name>AHB_TEST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>INLINK_DSCR</name>
          </field>
        </fields>
        <name>INLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>INLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>INLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>OUTLINK_DSCR</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>OUTLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>OUTLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AHBM_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AHBM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_AUTO_WRBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_NO_RESTART_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CHECK_OWNER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>MEM_TRANS_EN</name>
          </field>
        </fields>
        <name>LC_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>OUTFIFO_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTFIFO_PUSH</name>
          </field>
        </fields>
        <name>OUTFIFO_PUSH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>INFIFO_RDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INFIFO_POP</name>
          </field>
        </fields>
        <name>INFIFO_POP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LC_STATE0</name>
          </field>
        </fields>
        <name>LC_STATE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LC_STATE1</name>
          </field>
        </fields>
        <name>LC_STATE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>LC_FIFO_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>LC_FIFO_TIMEOUT_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LC_FIFO_TIMEOUT_ENA</name>
          </field>
        </fields>
        <name>LC_HUNG_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x810</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>CVSD_Y_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>CVSD_Y_MIN</name>
          </field>
        </fields>
        <name>CVSD_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80007FFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>CVSD_SIGMA_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>CVSD_SIGMA_MIN</name>
          </field>
        </fields>
        <name>CVSD_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA0500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CVSD_K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CVSD_J</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>CVSD_BETA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CVSD_H</name>
          </field>
        </fields>
        <name>CVSD_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x502A4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GOOD_PACK_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>N_ERR_SEG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>SHIFT_RATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>MAX_SLIDE_SAMPLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>PACK_LEN_8K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>N_MIN_ERR</name>
          </field>
        </fields>
        <name>PLC_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8A80339</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>BAD_CEF_ATTEN_PARA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>BAD_CEF_ATTEN_PARA_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>BAD_OLA_WIN2_PARA_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>BAD_OLA_WIN2_PARA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SLIDE_WIN_LEN</name>
          </field>
        </fields>
        <name>PLC_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA0178A05</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CVSD_SEG_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>MIN_PERIOD</name>
          </field>
        </fields>
        <name>PLC_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x28</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ESCO_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ESCO_CHAN_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ESCO_CVSD_DEC_PACK_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>ESCO_CVSD_PACK_LEN_8K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ESCO_CVSD_INF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CVSD_DEC_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CVSD_DEC_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PLC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PLC2DMA_EN</name>
          </field>
        </fields>
        <name>ESCO_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SCO_WITH_I2S_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SCO_NO_I2S_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CVSD_ENC_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CVSD_ENC_RESET</name>
          </field>
        </fields>
        <name>SCO_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TX_PCM_CONF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PCM_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>RX_PCM_CONF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_PCM_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_STOP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_ZEROS_RM_EN</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x89</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FIFO_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FIFO_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PLC_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PLC_MEM_FORCE_PU</name>
          </field>
        </fields>
        <name>PD_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAMERA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LCD_TX_WRX2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LCD_TX_SDX2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DATA_ENABLE_TEST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DATA_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LCD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXT_ADC_START_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>INTER_VALID_EN</name>
          </field>
        </fields>
        <name>CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CLKM_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>CLKM_DIV_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>CLKM_DIV_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLKA_ENA</name>
          </field>
        </fields>
        <name>CLKM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>TX_BCK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RX_BCK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>TX_BITS_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>RX_BITS_MOD</name>
          </field>
        </fields>
        <name>SAMPLE_RATE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x410186</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PDM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_PDM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PCM2PDM_CONV_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PDM2PCM_CONV_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>TX_PDM_SINC_OSR2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TX_PDM_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_PDM_HP_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_PDM_LP_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_PDM_SINC_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TX_PDM_SIGMADELTA_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_PDM_SINC_DSR_16_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_PDM_HP_BYPASS</name>
          </field>
        </fields>
        <name>PDM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1550020</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>TX_PDM_FS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>TX_PDM_FP</name>
          </field>
        </fields>
        <name>PDM_FREQ_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF01E0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_FIFO_RESET_BACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_FIFO_RESET_BACK</name>
          </field>
        </fields>
        <name>STATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>I2SDATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1604201</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x94</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF49000</baseAddress>
    <description>Input/Output Multiplexer</description>
    <groupName>IO_MUX</groupName>
    <interrupts></interrupts>
    <name>IO_MUX</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If you want to output clock for I2S0 to: CLK_OUT1, then set PIN_CTRL[3:0] = 0x0; CLK_OUT2, then set PIN_CTRL[3:0] = 0x0 and PIN_CTRL[7:4] = 0x0; CLK_OUT3, then set PIN_CTRL[3:0] = 0x0 and PIN_CTRL[11:8] = 0x0. If you want to output clock for I2S1 to: CLK_OUT1, then set PIN_CTRL[3:0] = 0xF; CLK_OUT2, then set PIN_CTRL[3:0] = 0xF and PIN_CTRL[7:4] = 0x0; CLK_OUT3, then set PIN_CTRL[3:0] = 0xF and PIN_CTRL[11:8] = 0x0.</description>
            <name>CLK1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If you want to output clock for I2S0 to: CLK_OUT1, then set PIN_CTRL[3:0] = 0x0; CLK_OUT2, then set PIN_CTRL[3:0] = 0x0 and PIN_CTRL[7:4] = 0x0; CLK_OUT3, then set PIN_CTRL[3:0] = 0x0 and PIN_CTRL[11:8] = 0x0. If you want to output clock for I2S1 to: CLK_OUT1, then set PIN_CTRL[3:0] = 0xF; CLK_OUT2, then set PIN_CTRL[3:0] = 0xF and PIN_CTRL[7:4] = 0x0; CLK_OUT3, then set PIN_CTRL[3:0] = 0xF and PIN_CTRL[11:8] = 0x0.</description>
            <name>CLK2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If you want to output clock for I2S0 to: CLK_OUT1, then set PIN_CTRL[3:0] = 0x0; CLK_OUT2, then set PIN_CTRL[3:0] = 0x0 and PIN_CTRL[7:4] = 0x0; CLK_OUT3, then set PIN_CTRL[3:0] = 0x0 and PIN_CTRL[11:8] = 0x0. If you want to output clock for I2S1 to: CLK_OUT1, then set PIN_CTRL[3:0] = 0xF; CLK_OUT2, then set PIN_CTRL[3:0] = 0xF and PIN_CTRL[7:4] = 0x0; CLK_OUT3, then set PIN_CTRL[3:0] = 0xF and PIN_CTRL[11:8] = 0x0.</description>
            <name>CLK3</name>
          </field>
        </fields>
        <name>PIN_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO36</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO37</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO38</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO39</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO34</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO35</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO32</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO33</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO25</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO26</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO27</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO16</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO17</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO18</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO19</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO20</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO21</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO22</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO23</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: enable output; 0: disable output.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad during sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad during sleep mode. A higher value corresponds with a higher strength.</description>
            <name>MCU_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled, 0: internal pull-down disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull-down circuitry, therefore, their FUN_WPD is always 0.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled. GPIO pins 34-39 are input-only. These pins do not feature an output driver or internal pull- up/pull- down circuitry, therefore, their FUN_WPU is always 0.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. A higher value corresponds with a higher strength. For GPIO34-39, FUN_DRV is always 0. For detailed drive strength, please see note 8 in Table ”Notes on ESP32 Pin Lists”, in ESP32 Datasheet.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select the IO_MUX function for this signal. 0 selects Function 0, 1 selects Function 1, etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <name>GPIO24</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x198</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF59000</baseAddress>
    <description>LED Control PWM (Pulse Width Modulation)</description>
    <groupName>LEDC</groupName>
    <interrupts>
      <interrupt>
        <name>LEDC</name>
        <value>0x2B</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TIMER1</name>
        <value>0x38</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TIMER2</name>
        <value>0x39</value>
      </interrupt>
    </interrupts>
    <name>LEDC</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four high speed timers  the two bits are used to select one of them for high speed channel0.  2'b00: seletc hstimer0.   2'b01: select hstimer1.  2'b10: select hstimer2.    2'b11: select hstimer3.</description>
            <name>TIMER_SEL_HSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for high speed channel0</description>
            <name>SIG_OUT_EN_HSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when high speed channel0 is off.</description>
            <name>IDLE_LV_HSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is clock gating control signal. when software config LED_PWM internal registers  it controls the register clock.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>HSCH0_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when htimerx(x=[0 3]) selected by high speed channel0 has reached reg_hpoint_hsch0[19:0]</description>
            <name>HPOINT_HSCH0</name>
          </field>
        </fields>
        <name>HSCH0_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for high speed channel0.</description>
            <name>DUTY_HSCH0</name>
          </field>
        </fields>
        <name>HSCH0_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for high speed channel0.</description>
            <name>DUTY_SCALE_HSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_hsch0 cycles for high speed channel0.</description>
            <name>DUTY_CYCLE_HSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for high speed channel0.</description>
            <name>DUTY_NUM_HSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for high speed channel0.</description>
            <name>DUTY_INC_HSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch0 reg_duty_cycle_hsch0 and reg_duty_scale_hsch0 has been configured. these register won't take effect until set reg_duty_start_hsch0. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_HSCH0</name>
          </field>
        </fields>
        <name>HSCH0_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields></fields>
        <name>HSCH0_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four high speed timers  the two bits are used to select one of them for high speed channel1.  2'b00: seletc hstimer0.   2'b01: select hstimer1.  2'b10: select hstimer2.    2'b11: select hstimer3.</description>
            <name>TIMER_SEL_HSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for high speed channel1</description>
            <name>SIG_OUT_EN_HSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when high speed channel1 is off.</description>
            <name>IDLE_LV_HSCH1</name>
          </field>
        </fields>
        <name>HSCH1_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when htimerx(x=[0 3]) selected by high speed channel1 has reached reg_hpoint_hsch1[19:0]</description>
            <name>HPOINT_HSCH1</name>
          </field>
        </fields>
        <name>HSCH1_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for high speed channel1.</description>
            <name>DUTY_HSCH1</name>
          </field>
        </fields>
        <name>HSCH1_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for high speed channel1.</description>
            <name>DUTY_SCALE_HSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_hsch1 cycles for high speed channel1.</description>
            <name>DUTY_CYCLE_HSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for high speed channel1.</description>
            <name>DUTY_NUM_HSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for high speed channel1.</description>
            <name>DUTY_INC_HSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch1 reg_duty_cycle_hsch1 and reg_duty_scale_hsch1 has been configured. these register won't take effect until set reg_duty_start_hsch1. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_HSCH1</name>
          </field>
        </fields>
        <name>HSCH1_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields></fields>
        <name>HSCH1_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four high speed timers  the two bits are used to select one of them for high speed channel2.  2'b00: seletc hstimer0.   2'b01: select hstimer1.  2'b10: select hstimer2.    2'b11: select hstimer3.</description>
            <name>TIMER_SEL_HSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for high speed channel2</description>
            <name>SIG_OUT_EN_HSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when high speed channel2 is off.</description>
            <name>IDLE_LV_HSCH2</name>
          </field>
        </fields>
        <name>HSCH2_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when htimerx(x=[0 3]) selected by high speed channel2 has reached reg_hpoint_hsch2[19:0]</description>
            <name>HPOINT_HSCH2</name>
          </field>
        </fields>
        <name>HSCH2_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for high speed channel2.</description>
            <name>DUTY_HSCH2</name>
          </field>
        </fields>
        <name>HSCH2_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for high speed channel2.</description>
            <name>DUTY_SCALE_HSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_hsch2 cycles for high speed channel2.</description>
            <name>DUTY_CYCLE_HSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for high speed channel2.</description>
            <name>DUTY_NUM_HSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for high speed channel2.</description>
            <name>DUTY_INC_HSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch2 reg_duty_cycle_hsch2 and reg_duty_scale_hsch2 has been configured. these register won't take effect until set reg_duty_start_hsch2. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_HSCH2</name>
          </field>
        </fields>
        <name>HSCH2_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields></fields>
        <name>HSCH2_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four high speed timers  the two bits are used to select one of them for high speed channel3.  2'b00: seletc hstimer0.   2'b01: select hstimer1.  2'b10: select hstimer2.    2'b11: select hstimer3.</description>
            <name>TIMER_SEL_HSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for high speed channel3</description>
            <name>SIG_OUT_EN_HSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when high speed channel3 is off.</description>
            <name>IDLE_LV_HSCH3</name>
          </field>
        </fields>
        <name>HSCH3_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when htimerx(x=[0 3]) selected by high speed channel3 has reached reg_hpoint_hsch3[19:0]</description>
            <name>HPOINT_HSCH3</name>
          </field>
        </fields>
        <name>HSCH3_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for high speed channel3.</description>
            <name>DUTY_HSCH3</name>
          </field>
        </fields>
        <name>HSCH3_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for high speed channel3.</description>
            <name>DUTY_SCALE_HSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_hsch3 cycles for high speed channel3.</description>
            <name>DUTY_CYCLE_HSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for high speed channel3.</description>
            <name>DUTY_NUM_HSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for high speed channel3.</description>
            <name>DUTY_INC_HSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch3 reg_duty_cycle_hsch3 and reg_duty_scale_hsch3 has been configured. these register won't take effect until set reg_duty_start_hsch3. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_HSCH3</name>
          </field>
        </fields>
        <name>HSCH3_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields></fields>
        <name>HSCH3_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four high speed timers  the two bits are used to select one of them for high speed channel4.  2'b00: seletc hstimer0.   2'b01: select hstimer1.  2'b10: select hstimer2.    2'b11: select hstimer3.</description>
            <name>TIMER_SEL_HSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for high speed channel4</description>
            <name>SIG_OUT_EN_HSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when high speed channel4 is off.</description>
            <name>IDLE_LV_HSCH4</name>
          </field>
        </fields>
        <name>HSCH4_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when htimerx(x=[0 3]) selected by high speed channel4 has reached reg_hpoint_hsch4[19:0]</description>
            <name>HPOINT_HSCH4</name>
          </field>
        </fields>
        <name>HSCH4_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for high speed channel4.</description>
            <name>DUTY_HSCH4</name>
          </field>
        </fields>
        <name>HSCH4_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for high speed channel4.</description>
            <name>DUTY_SCALE_HSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_hsch4 cycles for high speed channel4.</description>
            <name>DUTY_CYCLE_HSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for high speed channel1.</description>
            <name>DUTY_NUM_HSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for high speed channel4.</description>
            <name>DUTY_INC_HSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch1 reg_duty_cycle_hsch1 and reg_duty_scale_hsch1 has been configured. these register won't take effect until set reg_duty_start_hsch1. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_HSCH4</name>
          </field>
        </fields>
        <name>HSCH4_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields></fields>
        <name>HSCH4_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four high speed timers  the two bits are used to select one of them for high speed channel5.  2'b00: seletc hstimer0.   2'b01: select hstimer1.  2'b10: select hstimer2.    2'b11: select hstimer3.</description>
            <name>TIMER_SEL_HSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for high speed channel5.</description>
            <name>SIG_OUT_EN_HSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when high speed channel5 is off.</description>
            <name>IDLE_LV_HSCH5</name>
          </field>
        </fields>
        <name>HSCH5_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when htimerx(x=[0 3]) selected by high speed channel5 has reached reg_hpoint_hsch5[19:0]</description>
            <name>HPOINT_HSCH5</name>
          </field>
        </fields>
        <name>HSCH5_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for high speed channel5.</description>
            <name>DUTY_HSCH5</name>
          </field>
        </fields>
        <name>HSCH5_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for high speed channel5.</description>
            <name>DUTY_SCALE_HSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_hsch5 cycles for high speed channel5.</description>
            <name>DUTY_CYCLE_HSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for high speed channel5.</description>
            <name>DUTY_NUM_HSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for high speed channel5.</description>
            <name>DUTY_INC_HSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch5 reg_duty_cycle_hsch5 and reg_duty_scale_hsch5 has been configured. these register won't take effect until set reg_duty_start_hsch5. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_HSCH5</name>
          </field>
        </fields>
        <name>HSCH5_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields></fields>
        <name>HSCH5_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four high speed timers  the two bits are used to select one of them for high speed channel6.  2'b00: seletc hstimer0.   2'b01: select hstimer1.  2'b10: select hstimer2.    2'b11: select hstimer3.</description>
            <name>TIMER_SEL_HSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for high speed channel6</description>
            <name>SIG_OUT_EN_HSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when high speed channel6 is off.</description>
            <name>IDLE_LV_HSCH6</name>
          </field>
        </fields>
        <name>HSCH6_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when htimerx(x=[0 3]) selected by high speed channel6 has reached reg_hpoint_hsch6[19:0]</description>
            <name>HPOINT_HSCH6</name>
          </field>
        </fields>
        <name>HSCH6_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for high speed channel6.</description>
            <name>DUTY_HSCH6</name>
          </field>
        </fields>
        <name>HSCH6_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for high speed channel6.</description>
            <name>DUTY_SCALE_HSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_hsch6 cycles for high speed channel6.</description>
            <name>DUTY_CYCLE_HSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for high speed channel6.</description>
            <name>DUTY_NUM_HSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for high speed channel6.</description>
            <name>DUTY_INC_HSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch1 reg_duty_cycle_hsch1 and reg_duty_scale_hsch1 has been configured. these register won't take effect until set reg_duty_start_hsch1. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_HSCH6</name>
          </field>
        </fields>
        <name>HSCH6_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields></fields>
        <name>HSCH6_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four high speed timers  the two bits are used to select one of them for high speed channel7.  2'b00: seletc hstimer0.   2'b01: select hstimer1.  2'b10: select hstimer2.    2'b11: select hstimer3.</description>
            <name>TIMER_SEL_HSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for high speed channel7.</description>
            <name>SIG_OUT_EN_HSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when high speed channel7 is off.</description>
            <name>IDLE_LV_HSCH7</name>
          </field>
        </fields>
        <name>HSCH7_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when htimerx(x=[0 3]) selected by high speed channel7 has reached reg_hpoint_hsch7[19:0]</description>
            <name>HPOINT_HSCH7</name>
          </field>
        </fields>
        <name>HSCH7_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for high speed channel7.</description>
            <name>DUTY_HSCH7</name>
          </field>
        </fields>
        <name>HSCH7_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for high speed channel7.</description>
            <name>DUTY_SCALE_HSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_hsch7 cycles for high speed channel7.</description>
            <name>DUTY_CYCLE_HSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for high speed channel6.</description>
            <name>DUTY_NUM_HSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for high speed channel6.</description>
            <name>DUTY_INC_HSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch1 reg_duty_cycle_hsch1 and reg_duty_scale_hsch1 has been configured. these register won't take effect until set reg_duty_start_hsch1. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_HSCH7</name>
          </field>
        </fields>
        <name>HSCH7_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields></fields>
        <name>HSCH7_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four low speed timers  the two bits are used to select one of them for low speed channel0.  2'b00: seletc lstimer0.   2'b01: select lstimer1.  2'b10: select lstimer2.    2'b11: select lstimer3.</description>
            <name>TIMER_SEL_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for low speed channel0.</description>
            <name>SIG_OUT_EN_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when low speed channel0 is off.</description>
            <name>IDLE_LV_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to update register LEDC_LSCH0_HPOINT and LEDC_LSCH0_DUTY for low speed channel0.</description>
            <name>PARA_UP_LSCH0</name>
          </field>
        </fields>
        <name>LSCH0_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when lstimerx(x=[0 3]) selected by low speed channel0 has reached reg_hpoint_lsch0[19:0]</description>
            <name>HPOINT_LSCH0</name>
          </field>
        </fields>
        <name>LSCH0_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for low speed channel0.</description>
            <name>DUTY_LSCH0</name>
          </field>
        </fields>
        <name>LSCH0_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for low speed channel0.</description>
            <name>DUTY_SCALE_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_lsch0 cycles for low speed channel0.</description>
            <name>DUTY_CYCLE_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for low speed channel6.</description>
            <name>DUTY_NUM_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for low speed channel6.</description>
            <name>DUTY_INC_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch1 reg_duty_cycle_hsch1 and reg_duty_scale_hsch1 has been configured. these register won't take effect until set reg_duty_start_hsch1. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_LSCH0</name>
          </field>
        </fields>
        <name>LSCH0_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields></fields>
        <name>LSCH0_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four low speed timers  the two bits are used to select one of them for low speed channel1.  2'b00: seletc lstimer0.   2'b01: select lstimer1.  2'b10: select lstimer2.    2'b11: select lstimer3.</description>
            <name>TIMER_SEL_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for low speed channel1.</description>
            <name>SIG_OUT_EN_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when low speed channel1 is off.</description>
            <name>IDLE_LV_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to update register LEDC_LSCH1_HPOINT and LEDC_LSCH1_DUTY for low speed channel1.</description>
            <name>PARA_UP_LSCH1</name>
          </field>
        </fields>
        <name>LSCH1_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when lstimerx(x=[0 3]) selected by low speed channel1 has reached reg_hpoint_lsch1[19:0]</description>
            <name>HPOINT_LSCH1</name>
          </field>
        </fields>
        <name>LSCH1_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for low speed channel1.</description>
            <name>DUTY_LSCH1</name>
          </field>
        </fields>
        <name>LSCH1_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for low speed channel1.</description>
            <name>DUTY_SCALE_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_lsch1 cycles for low speed channel1.</description>
            <name>DUTY_CYCLE_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for low speed channel1.</description>
            <name>DUTY_NUM_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for low speed channel1.</description>
            <name>DUTY_INC_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch1 reg_duty_cycle_hsch1 and reg_duty_scale_hsch1 has been configured. these register won't take effect until set reg_duty_start_hsch1. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_LSCH1</name>
          </field>
        </fields>
        <name>LSCH1_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields></fields>
        <name>LSCH1_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four low speed timers  the two bits are used to select one of them for low speed channel2.  2'b00: seletc lstimer0.   2'b01: select lstimer1.  2'b10: select lstimer2.    2'b11: select lstimer3.</description>
            <name>TIMER_SEL_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for low speed channel2.</description>
            <name>SIG_OUT_EN_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when low speed channel2 is off.</description>
            <name>IDLE_LV_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to update register LEDC_LSCH2_HPOINT and LEDC_LSCH2_DUTY for low speed channel2.</description>
            <name>PARA_UP_LSCH2</name>
          </field>
        </fields>
        <name>LSCH2_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when lstimerx(x=[0 3]) selected by low speed channel2 has reached reg_hpoint_lsch2[19:0]</description>
            <name>HPOINT_LSCH2</name>
          </field>
        </fields>
        <name>LSCH2_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for low speed channel2.</description>
            <name>DUTY_LSCH2</name>
          </field>
        </fields>
        <name>LSCH2_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for low speed channel2.</description>
            <name>DUTY_SCALE_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_lsch2 cycles for low speed channel2.</description>
            <name>DUTY_CYCLE_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for low speed channel2.</description>
            <name>DUTY_NUM_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for low speed channel2.</description>
            <name>DUTY_INC_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch2 reg_duty_cycle_hsch2 and reg_duty_scale_hsch2 has been configured. these register won't take effect until set reg_duty_start_hsch2. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_LSCH2</name>
          </field>
        </fields>
        <name>LSCH2_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields></fields>
        <name>LSCH2_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four low speed timers  the two bits are used to select one of them for low speed channel3.  2'b00: seletc lstimer0.   2'b01: select lstimer1.  2'b10: select lstimer2.    2'b11: select lstimer3.</description>
            <name>TIMER_SEL_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for low speed channel3.</description>
            <name>SIG_OUT_EN_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when low speed channel3 is off.</description>
            <name>IDLE_LV_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to update register LEDC_LSCH3_HPOINT and LEDC_LSCH3_DUTY for low speed channel3.</description>
            <name>PARA_UP_LSCH3</name>
          </field>
        </fields>
        <name>LSCH3_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when lstimerx(x=[0 3]) selected by low speed channel3 has reached reg_hpoint_lsch3[19:0]</description>
            <name>HPOINT_LSCH3</name>
          </field>
        </fields>
        <name>LSCH3_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for low speed channel3.</description>
            <name>DUTY_LSCH3</name>
          </field>
        </fields>
        <name>LSCH3_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for low speed channel3.</description>
            <name>DUTY_SCALE_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_lsch3 cycles for low speed channel3.</description>
            <name>DUTY_CYCLE_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for low speed channel3.</description>
            <name>DUTY_NUM_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for low speed channel3.</description>
            <name>DUTY_INC_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch3 reg_duty_cycle_hsch3 and reg_duty_scale_hsch3 has been configured. these register won't take effect until set reg_duty_start_hsch3. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_LSCH3</name>
          </field>
        </fields>
        <name>LSCH3_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields></fields>
        <name>LSCH3_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four low speed timers  the two bits are used to select one of them for low speed channel4.  2'b00: seletc lstimer0.   2'b01: select lstimer1.  2'b10: select lstimer2.    2'b11: select lstimer3.</description>
            <name>TIMER_SEL_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for low speed channel4.</description>
            <name>SIG_OUT_EN_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when low speed channel4 is off.</description>
            <name>IDLE_LV_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to update register LEDC_LSCH4_HPOINT and LEDC_LSCH4_DUTY for low speed channel4.</description>
            <name>PARA_UP_LSCH4</name>
          </field>
        </fields>
        <name>LSCH4_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when lstimerx(x=[0 3]) selected by low speed channel4 has reached reg_hpoint_lsch4[19:0]</description>
            <name>HPOINT_LSCH4</name>
          </field>
        </fields>
        <name>LSCH4_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for low speed channel4.</description>
            <name>DUTY_LSCH4</name>
          </field>
        </fields>
        <name>LSCH4_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for low speed channel4.</description>
            <name>DUTY_SCALE_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_lsch4 cycles for low speed channel4.</description>
            <name>DUTY_CYCLE_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for low speed channel4.</description>
            <name>DUTY_NUM_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for low speed channel4.</description>
            <name>DUTY_INC_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch4  reg_duty_cycle_hsch4 and reg_duty_scale_hsch4 has been configured. these register won't take effect until set reg_duty_start_hsch4. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_LSCH4</name>
          </field>
        </fields>
        <name>LSCH4_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields></fields>
        <name>LSCH4_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four low speed timers  the two bits are used to select one of them for low speed channel5.  2'b00: seletc lstimer0.   2'b01: select lstimer1.  2'b10: select lstimer2.    2'b11: select lstimer3.</description>
            <name>TIMER_SEL_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for low speed channel5.</description>
            <name>SIG_OUT_EN_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when low speed channel5 is off.</description>
            <name>IDLE_LV_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to update register LEDC_LSCH5_HPOINT and LEDC_LSCH5_DUTY for low speed channel5.</description>
            <name>PARA_UP_LSCH5</name>
          </field>
        </fields>
        <name>LSCH5_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when lstimerx(x=[0 3]) selected by low speed channel5 has reached reg_hpoint_lsch5[19:0]</description>
            <name>HPOINT_LSCH5</name>
          </field>
        </fields>
        <name>LSCH5_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for low speed channel5.</description>
            <name>DUTY_LSCH5</name>
          </field>
        </fields>
        <name>LSCH5_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for low speed channel5.</description>
            <name>DUTY_SCALE_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_lsch5 cycles for low speed channel4.</description>
            <name>DUTY_CYCLE_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for low speed channel5.</description>
            <name>DUTY_NUM_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for low speed channel5.</description>
            <name>DUTY_INC_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch4  reg_duty_cycle_hsch4 and reg_duty_scale_hsch4 has been configured. these register won't take effect until set reg_duty_start_hsch4. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_LSCH5</name>
          </field>
        </fields>
        <name>LSCH5_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields></fields>
        <name>LSCH5_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four low speed timers  the two bits are used to select one of them for low speed channel6.  2'b00: seletc lstimer0.   2'b01: select lstimer1.  2'b10: select lstimer2.    2'b11: select lstimer3.</description>
            <name>TIMER_SEL_LSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for low speed channel6.</description>
            <name>SIG_OUT_EN_LSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when low speed channel6 is off.</description>
            <name>IDLE_LV_LSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to update register LEDC_LSCH6_HPOINT and LEDC_LSCH6_DUTY for low speed channel6.</description>
            <name>PARA_UP_LSCH6</name>
          </field>
        </fields>
        <name>LSCH6_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when lstimerx(x=[0 3]) selected by low speed channel6 has reached reg_hpoint_lsch6[19:0]</description>
            <name>HPOINT_LSCH6</name>
          </field>
        </fields>
        <name>LSCH6_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for low speed channel6.</description>
            <name>DUTY_LSCH6</name>
          </field>
        </fields>
        <name>LSCH6_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for low speed channel6.</description>
            <name>DUTY_SCALE_LSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_lsch6 cycles for low speed channel6.</description>
            <name>DUTY_CYCLE_LSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for low speed channel6.</description>
            <name>DUTY_NUM_LSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for low speed channel6.</description>
            <name>DUTY_INC_LSCH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch6  reg_duty_cycle_hsch6 and reg_duty_scale_hsch6 has been configured. these register won't take effect until set reg_duty_start_hsch6. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_LSCH6</name>
          </field>
        </fields>
        <name>LSCH6_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <fields></fields>
        <name>LSCH6_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>There are four low speed timers  the two bits are used to select one of them for low speed channel7.  2'b00: seletc lstimer0.   2'b01: select lstimer1.  2'b10: select lstimer2.    2'b11: select lstimer3.</description>
            <name>TIMER_SEL_LSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for low speed channel7.</description>
            <name>SIG_OUT_EN_LSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to control the output value when low speed channel7 is off.</description>
            <name>IDLE_LV_LSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to update register LEDC_LSCH7_HPOINT and LEDC_LSCH7_DUTY for low speed channel7.</description>
            <name>PARA_UP_LSCH7</name>
          </field>
        </fields>
        <name>LSCH7_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The output value changes to high when lstimerx(x=[0 3]) selected by low speed channel7 has reached reg_hpoint_lsch7[19:0]</description>
            <name>HPOINT_LSCH7</name>
          </field>
        </fields>
        <name>LSCH7_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>This register represents the current duty of the output signal for low speed channel7.</description>
            <name>DUTY_LSCH7</name>
          </field>
        </fields>
        <name>LSCH7_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register controls the increase or decrease step scale for low speed channel7.</description>
            <name>DUTY_SCALE_LSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to increase or decrease the duty every reg_duty_cycle_lsch7 cycles for low speed channel7.</description>
            <name>DUTY_CYCLE_LSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to control the num of increased or decreased times for low speed channel4.</description>
            <name>DUTY_NUM_LSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to increase the duty of output signal or decrease the duty of output signal for low speed channel4.</description>
            <name>DUTY_INC_LSCH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When reg_duty_num_hsch4  reg_duty_cycle_hsch4 and reg_duty_scale_hsch4 has been configured. these register won't take effect until set reg_duty_start_hsch4. this bit is automatically cleared by hardware.</description>
            <name>DUTY_START_LSCH7</name>
          </field>
        </fields>
        <name>LSCH7_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <fields></fields>
        <name>LSCH7_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This register controls the range of the counter in high speed timer0. the counter range is [0 2**reg_hstimer0_lim] the max bit width for counter is 20.</description>
            <name>HSTIMER0_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register is used to configure parameter for divider in high speed timer0 the least significant eight bits represent the decimal part.</description>
            <name>DIV_NUM_HSTIMER0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to pause the counter in high speed timer0</description>
            <name>HSTIMER0_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset high speed timer0 the counter will be 0 after reset.</description>
            <name>HSTIMER0_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to choose apb_clk or ref_tick for high speed timer0. 1'b1:apb_clk  0:ref_tick</description>
            <name>TICK_SEL_HSTIMER0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HSTIMER0_LIM</name>
          </field>
        </fields>
        <name>HSTIMER0_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>software can read this register to get the current counter value in high speed timer0</description>
            <name>HSTIMER0_CNT</name>
          </field>
        </fields>
        <name>HSTIMER0_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This register controls the range of the counter in high speed timer1. the counter range is [0 2**reg_hstimer1_lim] the max bit width for counter is 20.</description>
            <name>HSTIMER1_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register is used to configure parameter for divider in high speed timer1 the least significant eight bits represent the decimal part.</description>
            <name>DIV_NUM_HSTIMER1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to pause the counter in high speed timer1</description>
            <name>HSTIMER1_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset high speed timer1 the counter will be 0 after reset.</description>
            <name>HSTIMER1_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to choose apb_clk or ref_tick for high speed timer1. 1'b1:apb_clk  0:ref_tick</description>
            <name>TICK_SEL_HSTIMER1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HSTIMER1_LIM</name>
          </field>
        </fields>
        <name>HSTIMER1_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>software can read this register to get the current counter value in high speed timer1.</description>
            <name>HSTIMER1_CNT</name>
          </field>
        </fields>
        <name>HSTIMER1_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x150</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This register controls the range of the counter in high speed timer2. the counter range is [0 2**reg_hstimer2_lim] the max bit width for counter is 20.</description>
            <name>HSTIMER2_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register is used to configure parameter for divider in high speed timer2 the least significant eight bits represent the decimal part.</description>
            <name>DIV_NUM_HSTIMER2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to pause the counter in high speed timer2</description>
            <name>HSTIMER2_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset high speed timer2 the counter will be 0 after reset.</description>
            <name>HSTIMER2_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to choose apb_clk or ref_tick for high speed timer2. 1'b1:apb_clk  0:ref_tick</description>
            <name>TICK_SEL_HSTIMER2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HSTIMER2_LIM</name>
          </field>
        </fields>
        <name>HSTIMER2_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x154</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>software can read this register to get the current counter value in high speed timer2</description>
            <name>HSTIMER2_CNT</name>
          </field>
        </fields>
        <name>HSTIMER2_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x158</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This register controls the range of the counter in high speed timer3. the counter range is [0 2**reg_hstimer3_lim] the max bit width for counter is 20.</description>
            <name>HSTIMER3_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register is used to configure parameter for divider in high speed timer3 the least significant eight bits represent the decimal part.</description>
            <name>DIV_NUM_HSTIMER3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to pause the counter in high speed timer3</description>
            <name>HSTIMER3_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset high speed timer3 the counter will be 0 after reset.</description>
            <name>HSTIMER3_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to choose apb_clk or ref_tick for high speed timer3. 1'b1:apb_clk  0:ref_tick</description>
            <name>TICK_SEL_HSTIMER3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HSTIMER3_LIM</name>
          </field>
        </fields>
        <name>HSTIMER3_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>software can read this register to get the current counter value in high speed timer3</description>
            <name>HSTIMER3_CNT</name>
          </field>
        </fields>
        <name>HSTIMER3_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x160</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This register controls the range of the counter in low speed timer0. the counter range is [0 2**reg_lstimer0_lim] the max bit width for counter is 20.</description>
            <name>LSTIMER0_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register is used to configure parameter for divider in low speed timer0 the least significant eight bits represent the decimal part.</description>
            <name>DIV_NUM_LSTIMER0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to pause the counter in low speed timer0.</description>
            <name>LSTIMER0_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset low speed timer0 the counter will be 0 after reset.</description>
            <name>LSTIMER0_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to choose slow_clk or ref_tick for low speed timer0. 1'b1:slow_clk  0:ref_tick</description>
            <name>TICK_SEL_LSTIMER0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit  to update  reg_div_num_lstime0 and  reg_lstimer0_lim.</description>
            <name>LSTIMER0_PARA_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>LSTIMER0_LIM</name>
          </field>
        </fields>
        <name>LSTIMER0_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x164</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>software can read this register to get the current counter value in low speed timer0.</description>
            <name>LSTIMER0_CNT</name>
          </field>
        </fields>
        <name>LSTIMER0_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x168</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This register controls the range of the counter in low speed timer1. the counter range is [0 2**reg_lstimer1_lim] the max bit width for counter is 20.</description>
            <name>LSTIMER1_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register is used to configure parameter for divider in low speed timer1 the least significant eight bits represent the decimal part.</description>
            <name>DIV_NUM_LSTIMER1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to pause the counter in low speed timer1.</description>
            <name>LSTIMER1_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset low speed timer1 the counter will be 0 after reset.</description>
            <name>LSTIMER1_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to choose slow_clk or ref_tick for low speed timer1. 1'b1:slow_clk  0:ref_tick</description>
            <name>TICK_SEL_LSTIMER1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit  to update  reg_div_num_lstime1 and  reg_lstimer1_lim.</description>
            <name>LSTIMER1_PARA_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>LSTIMER1_LIM</name>
          </field>
        </fields>
        <name>LSTIMER1_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>software can read this register to get the current counter value in low speed timer1.</description>
            <name>LSTIMER1_CNT</name>
          </field>
        </fields>
        <name>LSTIMER1_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x170</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This register controls the range of the counter in low speed timer2. the counter range is [0 2**reg_lstimer2_lim] the max bit width for counter is 20.</description>
            <name>LSTIMER2_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register is used to configure parameter for divider in low speed timer2 the least significant eight bits represent the decimal part.</description>
            <name>DIV_NUM_LSTIMER2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to pause the counter in low speed timer2.</description>
            <name>LSTIMER2_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset low speed timer2 the counter will be 0 after reset.</description>
            <name>LSTIMER2_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to choose slow_clk or ref_tick for low speed timer2. 1'b1:slow_clk  0:ref_tick</description>
            <name>TICK_SEL_LSTIMER2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit  to update  reg_div_num_lstime2 and  reg_lstimer2_lim.</description>
            <name>LSTIMER2_PARA_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>LSTIMER2_LIM</name>
          </field>
        </fields>
        <name>LSTIMER2_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x174</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>software can read this register to get the current counter value in low speed timer2.</description>
            <name>LSTIMER2_CNT</name>
          </field>
        </fields>
        <name>LSTIMER2_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x178</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>This register controls the range of the counter in low speed timer3. the counter range is [0 2**reg_lstimer3_lim] the max bit width for counter is 20.</description>
            <name>LSTIMER3_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register is used to configure parameter for divider in low speed timer3 the least significant eight bits represent the decimal part.</description>
            <name>DIV_NUM_LSTIMER3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to pause the counter in low speed timer3.</description>
            <name>LSTIMER3_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset low speed timer3 the counter will be 0 after reset.</description>
            <name>LSTIMER3_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to choose slow_clk or ref_tick for low speed timer3. 1'b1:slow_clk  0:ref_tick</description>
            <name>TICK_SEL_LSTIMER3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit  to update  reg_div_num_lstime3 and  reg_lstimer3_lim.</description>
            <name>LSTIMER3_PARA_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>LSTIMER3_LIM</name>
          </field>
        </fields>
        <name>LSTIMER3_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>software can read this register to get the current counter value in low speed timer3.</description>
            <name>LSTIMER3_CNT</name>
          </field>
        </fields>
        <name>LSTIMER3_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x180</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel0  counter overflow.</description>
            <name>HSTIMER0_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel1  counter overflow.</description>
            <name>HSTIMER1_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel2  counter overflow.</description>
            <name>HSTIMER2_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel3  counter overflow.</description>
            <name>HSTIMER3_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel0  counter overflow.</description>
            <name>LSTIMER0_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel1  counter overflow.</description>
            <name>LSTIMER1_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel2  counter overflow.</description>
            <name>LSTIMER2_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel3  counter overflow.</description>
            <name>LSTIMER3_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel 0 duty change done.</description>
            <name>DUTY_CHNG_END_HSCH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel 1 duty change done.</description>
            <name>DUTY_CHNG_END_HSCH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel 2 duty change done.</description>
            <name>DUTY_CHNG_END_HSCH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel 3 duty change done.</description>
            <name>DUTY_CHNG_END_HSCH3_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel 4 duty change done.</description>
            <name>DUTY_CHNG_END_HSCH4_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel 5 duty change done.</description>
            <name>DUTY_CHNG_END_HSCH5_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel 6 duty change done.</description>
            <name>DUTY_CHNG_END_HSCH6_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for high speed channel 7 duty change done.</description>
            <name>DUTY_CHNG_END_HSCH7_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel 0 duty change done.</description>
            <name>DUTY_CHNG_END_LSCH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel 1 duty change done.</description>
            <name>DUTY_CHNG_END_LSCH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel 2 duty change done.</description>
            <name>DUTY_CHNG_END_LSCH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel 3 duty change done.</description>
            <name>DUTY_CHNG_END_LSCH3_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel 4 duty change done.</description>
            <name>DUTY_CHNG_END_LSCH4_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel 5 duty change done.</description>
            <name>DUTY_CHNG_END_LSCH5_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel 6 duty change done.</description>
            <name>DUTY_CHNG_END_LSCH6_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for low speed channel 7 duty change done.</description>
            <name>DUTY_CHNG_END_LSCH7_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x184</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel0  counter overflow event.</description>
            <name>HSTIMER0_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel1  counter overflow event.</description>
            <name>HSTIMER1_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel2  counter overflow event.</description>
            <name>HSTIMER2_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel3  counter overflow event.</description>
            <name>HSTIMER3_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel0  counter overflow event.</description>
            <name>LSTIMER0_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel1  counter overflow event.</description>
            <name>LSTIMER1_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel2  counter overflow event.</description>
            <name>LSTIMER2_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel3  counter overflow event.</description>
            <name>LSTIMER3_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel 0 duty change done event.</description>
            <name>DUTY_CHNG_END_HSCH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel 1 duty change done event.</description>
            <name>DUTY_CHNG_END_HSCH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel 2 duty change done event.</description>
            <name>DUTY_CHNG_END_HSCH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel 3 duty change done event.</description>
            <name>DUTY_CHNG_END_HSCH3_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel 4 duty change done event.</description>
            <name>DUTY_CHNG_END_HSCH4_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel 5 duty change done event.</description>
            <name>DUTY_CHNG_END_HSCH5_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel 6 duty change done event.</description>
            <name>DUTY_CHNG_END_HSCH6_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for high speed channel 7 duty change done event.</description>
            <name>DUTY_CHNG_END_HSCH7_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel 0 duty change done event.</description>
            <name>DUTY_CHNG_END_LSCH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel 1 duty change done event.</description>
            <name>DUTY_CHNG_END_LSCH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel 2 duty change done event.</description>
            <name>DUTY_CHNG_END_LSCH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel 3 duty change done event.</description>
            <name>DUTY_CHNG_END_LSCH3_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel 4 duty change done event.</description>
            <name>DUTY_CHNG_END_LSCH4_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel 5 duty change done event.</description>
            <name>DUTY_CHNG_END_LSCH5_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel 6 duty change done event.</description>
            <name>DUTY_CHNG_END_LSCH6_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt status bit for low speed channel 7 duty change done event</description>
            <name>DUTY_CHNG_END_LSCH7_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x188</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel0  counter overflow interrupt.</description>
            <name>HSTIMER0_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel1  counter overflow interrupt.</description>
            <name>HSTIMER1_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel2  counter overflow interrupt.</description>
            <name>HSTIMER2_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel3  counter overflow interrupt.</description>
            <name>HSTIMER3_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel0  counter overflow interrupt.</description>
            <name>LSTIMER0_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel1  counter overflow interrupt.</description>
            <name>LSTIMER1_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel2  counter overflow interrupt.</description>
            <name>LSTIMER2_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel3  counter overflow interrupt.</description>
            <name>LSTIMER3_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel 0 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel 1 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel 2 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel 3 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel 4 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel 5 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel 6 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH6_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for high speed channel 7 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH7_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel 0 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel 1 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel 2 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel 3 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel 4 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel 5 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel 6 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH6_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for low speed channel 7 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH7_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel0  counter overflow interrupt.</description>
            <name>HSTIMER0_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel1  counter overflow interrupt.</description>
            <name>HSTIMER1_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel2  counter overflow interrupt.</description>
            <name>HSTIMER2_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel3  counter overflow interrupt.</description>
            <name>HSTIMER3_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel0  counter overflow interrupt.</description>
            <name>LSTIMER0_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel1  counter overflow interrupt.</description>
            <name>LSTIMER1_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel2  counter overflow interrupt.</description>
            <name>LSTIMER2_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel3  counter overflow interrupt.</description>
            <name>LSTIMER3_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel 0 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel 1 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel 2 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel 3 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH3_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel 4 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH4_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel 5 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH5_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel 6 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH6_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  high speed channel 7 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_HSCH7_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel 0 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel 1 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel 2 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel 3 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH3_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel 4 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH4_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel 5 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH5_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel 6 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH6_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this  bit to clear  low speed channel 7 duty change done interrupt.</description>
            <name>DUTY_CHNG_END_LSCH7_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x190</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to set the frequency of slow_clk. 1'b1:80mhz  1'b0:8mhz</description>
            <name>APB_CLK_SEL</name>
          </field>
        </fields>
        <name>CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register represents the version .</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x16031700</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x128</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF5E000</baseAddress>
    <description>Motor Control PWM</description>
    <groupName>MCPWM</groupName>
    <interrupts>
      <interrupt>
        <name>PWM0</name>
        <value>0x27</value>
      </interrupt>
    </interrupts>
    <name>PWM0</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CLK_PRESCALE</name>
          </field>
        </fields>
        <name>CLK_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER0_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_MOD</name>
          </field>
        </fields>
        <name>TIMER0_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER0_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER0_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER1_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_MOD</name>
          </field>
        </fields>
        <name>TIMER1_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER1_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER2_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_MOD</name>
          </field>
        </fields>
        <name>TIMER2_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER2_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER2_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER0_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER1_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER2_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI0_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI1_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI2_INVERT</name>
          </field>
        </fields>
        <name>TIMER_SYNCI_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR0_TIMERSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR1_TIMERSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR2_TIMERSEL</name>
          </field>
        </fields>
        <name>OPERATOR_TIMERSEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN0_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN0_A</name>
          </field>
        </fields>
        <name>GEN0_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN0_B</name>
          </field>
        </fields>
        <name>GEN0_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN0_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN0_T1_SEL</name>
          </field>
        </fields>
        <name>GEN0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN0_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN0_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN0_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN0_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT0_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT0_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_CLK_SEL</name>
          </field>
        </fields>
        <name>DT0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT0_FED</name>
          </field>
        </fields>
        <name>DT0_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT0_RED</name>
          </field>
        </fields>
        <name>DT0_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER0_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER0_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_OST_U</name>
          </field>
        </fields>
        <name>FH0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_FORCE_OST</name>
          </field>
        </fields>
        <name>FH0_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_ON</name>
          </field>
        </fields>
        <name>FH0_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN1_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN1_A</name>
          </field>
        </fields>
        <name>GEN1_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN1_B</name>
          </field>
        </fields>
        <name>GEN1_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN1_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN1_T1_SEL</name>
          </field>
        </fields>
        <name>GEN1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN1_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN1_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN1_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN1_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT1_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT1_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_CLK_SEL</name>
          </field>
        </fields>
        <name>DT1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT1_FED</name>
          </field>
        </fields>
        <name>DT1_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT1_RED</name>
          </field>
        </fields>
        <name>DT1_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER1_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER1_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_OST_U</name>
          </field>
        </fields>
        <name>FH1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_FORCE_OST</name>
          </field>
        </fields>
        <name>FH1_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_ON</name>
          </field>
        </fields>
        <name>FH1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN2_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN2_A</name>
          </field>
        </fields>
        <name>GEN2_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN2_B</name>
          </field>
        </fields>
        <name>GEN2_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN2_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN2_T1_SEL</name>
          </field>
        </fields>
        <name>GEN2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN2_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN2_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN2_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN2_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT2_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT2_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_CLK_SEL</name>
          </field>
        </fields>
        <name>DT2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT2_FED</name>
          </field>
        </fields>
        <name>DT2_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT2_RED</name>
          </field>
        </fields>
        <name>DT2_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER2_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER2_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_OST_U</name>
          </field>
        </fields>
        <name>FH2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_FORCE_OST</name>
          </field>
        </fields>
        <name>FH2_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_ON</name>
          </field>
        </fields>
        <name>FH2_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F0_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F1_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F2_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F2</name>
          </field>
        </fields>
        <name>FAULT_DETECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_TIMER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CAP_SYNCI_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_SYNC_SW</name>
          </field>
        </fields>
        <name>CAP_TIMER_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP_TIMER_PHASE</name>
          </field>
        </fields>
        <name>CAP_TIMER_PHASE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP0_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_SW</name>
          </field>
        </fields>
        <name>CAP_CH0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP1_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_SW</name>
          </field>
        </fields>
        <name>CAP_CH1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP2_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_SW</name>
          </field>
        </fields>
        <name>CAP_CH2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP0_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP1_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP2_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_EDGE</name>
          </field>
        </fields>
        <name>CAP_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GLOBAL_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GLOBAL_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_FORCE_UP</name>
          </field>
        </fields>
        <name>UPDATE_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x55</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EN</name>
          </field>
        </fields>
        <name>CLK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>VERSION</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2107230</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x128</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF6C000</baseAddress>
    <derivedFrom>PWM0</derivedFrom>
    <description>Motor Control PWM</description>
    <groupName>MCPWM</groupName>
    <interrupts>
      <interrupt>
        <name>PWM1</name>
        <value>0x28</value>
      </interrupt>
    </interrupts>
    <name>PWM1</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CLK_PRESCALE</name>
          </field>
        </fields>
        <name>CLK_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER0_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_MOD</name>
          </field>
        </fields>
        <name>TIMER0_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER0_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER0_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER1_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_MOD</name>
          </field>
        </fields>
        <name>TIMER1_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER1_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER2_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_MOD</name>
          </field>
        </fields>
        <name>TIMER2_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER2_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER2_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER0_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER1_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER2_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI0_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI1_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI2_INVERT</name>
          </field>
        </fields>
        <name>TIMER_SYNCI_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR0_TIMERSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR1_TIMERSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR2_TIMERSEL</name>
          </field>
        </fields>
        <name>OPERATOR_TIMERSEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN0_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN0_A</name>
          </field>
        </fields>
        <name>GEN0_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN0_B</name>
          </field>
        </fields>
        <name>GEN0_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN0_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN0_T1_SEL</name>
          </field>
        </fields>
        <name>GEN0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN0_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN0_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN0_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN0_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT0_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT0_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_CLK_SEL</name>
          </field>
        </fields>
        <name>DT0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT0_FED</name>
          </field>
        </fields>
        <name>DT0_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT0_RED</name>
          </field>
        </fields>
        <name>DT0_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER0_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER0_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_OST_U</name>
          </field>
        </fields>
        <name>FH0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_FORCE_OST</name>
          </field>
        </fields>
        <name>FH0_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_ON</name>
          </field>
        </fields>
        <name>FH0_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN1_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN1_A</name>
          </field>
        </fields>
        <name>GEN1_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN1_B</name>
          </field>
        </fields>
        <name>GEN1_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN1_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN1_T1_SEL</name>
          </field>
        </fields>
        <name>GEN1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN1_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN1_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN1_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN1_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT1_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT1_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_CLK_SEL</name>
          </field>
        </fields>
        <name>DT1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT1_FED</name>
          </field>
        </fields>
        <name>DT1_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT1_RED</name>
          </field>
        </fields>
        <name>DT1_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER1_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER1_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_OST_U</name>
          </field>
        </fields>
        <name>FH1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_FORCE_OST</name>
          </field>
        </fields>
        <name>FH1_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_ON</name>
          </field>
        </fields>
        <name>FH1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN2_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN2_A</name>
          </field>
        </fields>
        <name>GEN2_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN2_B</name>
          </field>
        </fields>
        <name>GEN2_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN2_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN2_T1_SEL</name>
          </field>
        </fields>
        <name>GEN2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN2_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN2_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN2_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN2_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT2_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT2_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_CLK_SEL</name>
          </field>
        </fields>
        <name>DT2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT2_FED</name>
          </field>
        </fields>
        <name>DT2_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT2_RED</name>
          </field>
        </fields>
        <name>DT2_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER2_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER2_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_OST_U</name>
          </field>
        </fields>
        <name>FH2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_FORCE_OST</name>
          </field>
        </fields>
        <name>FH2_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_ON</name>
          </field>
        </fields>
        <name>FH2_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F0_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F1_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F2_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F2</name>
          </field>
        </fields>
        <name>FAULT_DETECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_TIMER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CAP_SYNCI_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_SYNC_SW</name>
          </field>
        </fields>
        <name>CAP_TIMER_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP_TIMER_PHASE</name>
          </field>
        </fields>
        <name>CAP_TIMER_PHASE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP0_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_SW</name>
          </field>
        </fields>
        <name>CAP_CH0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP1_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_SW</name>
          </field>
        </fields>
        <name>CAP_CH1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP2_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_SW</name>
          </field>
        </fields>
        <name>CAP_CH2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP0_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP1_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP2_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_EDGE</name>
          </field>
        </fields>
        <name>CAP_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GLOBAL_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GLOBAL_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_FORCE_UP</name>
          </field>
        </fields>
        <name>UPDATE_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x55</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EN</name>
          </field>
        </fields>
        <name>CLK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>VERSION</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2107230</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x128</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF6F000</baseAddress>
    <derivedFrom>PWM0</derivedFrom>
    <description>Motor Control PWM</description>
    <groupName>MCPWM</groupName>
    <interrupts>
      <interrupt>
        <name>PWM2</name>
        <value>0x29</value>
      </interrupt>
    </interrupts>
    <name>PWM2</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CLK_PRESCALE</name>
          </field>
        </fields>
        <name>CLK_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER0_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_MOD</name>
          </field>
        </fields>
        <name>TIMER0_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER0_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER0_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER1_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_MOD</name>
          </field>
        </fields>
        <name>TIMER1_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER1_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER2_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_MOD</name>
          </field>
        </fields>
        <name>TIMER2_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER2_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER2_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER0_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER1_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER2_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI0_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI1_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI2_INVERT</name>
          </field>
        </fields>
        <name>TIMER_SYNCI_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR0_TIMERSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR1_TIMERSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR2_TIMERSEL</name>
          </field>
        </fields>
        <name>OPERATOR_TIMERSEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN0_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN0_A</name>
          </field>
        </fields>
        <name>GEN0_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN0_B</name>
          </field>
        </fields>
        <name>GEN0_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN0_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN0_T1_SEL</name>
          </field>
        </fields>
        <name>GEN0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN0_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN0_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN0_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN0_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT0_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT0_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_CLK_SEL</name>
          </field>
        </fields>
        <name>DT0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT0_FED</name>
          </field>
        </fields>
        <name>DT0_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT0_RED</name>
          </field>
        </fields>
        <name>DT0_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER0_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER0_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_OST_U</name>
          </field>
        </fields>
        <name>FH0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_FORCE_OST</name>
          </field>
        </fields>
        <name>FH0_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_ON</name>
          </field>
        </fields>
        <name>FH0_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN1_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN1_A</name>
          </field>
        </fields>
        <name>GEN1_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN1_B</name>
          </field>
        </fields>
        <name>GEN1_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN1_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN1_T1_SEL</name>
          </field>
        </fields>
        <name>GEN1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN1_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN1_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN1_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN1_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT1_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT1_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_CLK_SEL</name>
          </field>
        </fields>
        <name>DT1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT1_FED</name>
          </field>
        </fields>
        <name>DT1_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT1_RED</name>
          </field>
        </fields>
        <name>DT1_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER1_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER1_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_OST_U</name>
          </field>
        </fields>
        <name>FH1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_FORCE_OST</name>
          </field>
        </fields>
        <name>FH1_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_ON</name>
          </field>
        </fields>
        <name>FH1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN2_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN2_A</name>
          </field>
        </fields>
        <name>GEN2_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN2_B</name>
          </field>
        </fields>
        <name>GEN2_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN2_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN2_T1_SEL</name>
          </field>
        </fields>
        <name>GEN2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN2_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN2_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN2_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN2_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT2_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT2_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_CLK_SEL</name>
          </field>
        </fields>
        <name>DT2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT2_FED</name>
          </field>
        </fields>
        <name>DT2_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT2_RED</name>
          </field>
        </fields>
        <name>DT2_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER2_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER2_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_OST_U</name>
          </field>
        </fields>
        <name>FH2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_FORCE_OST</name>
          </field>
        </fields>
        <name>FH2_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_ON</name>
          </field>
        </fields>
        <name>FH2_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F0_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F1_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F2_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F2</name>
          </field>
        </fields>
        <name>FAULT_DETECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_TIMER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CAP_SYNCI_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_SYNC_SW</name>
          </field>
        </fields>
        <name>CAP_TIMER_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP_TIMER_PHASE</name>
          </field>
        </fields>
        <name>CAP_TIMER_PHASE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP0_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_SW</name>
          </field>
        </fields>
        <name>CAP_CH0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP1_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_SW</name>
          </field>
        </fields>
        <name>CAP_CH1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP2_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_SW</name>
          </field>
        </fields>
        <name>CAP_CH2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP0_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP1_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP2_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_EDGE</name>
          </field>
        </fields>
        <name>CAP_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GLOBAL_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GLOBAL_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_FORCE_UP</name>
          </field>
        </fields>
        <name>UPDATE_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x55</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EN</name>
          </field>
        </fields>
        <name>CLK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>VERSION</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2107230</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x128</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF70000</baseAddress>
    <derivedFrom>PWM0</derivedFrom>
    <description>Motor Control PWM</description>
    <groupName>MCPWM</groupName>
    <interrupts>
      <interrupt>
        <name>PWM3</name>
        <value>0x2A</value>
      </interrupt>
    </interrupts>
    <name>PWM3</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CLK_PRESCALE</name>
          </field>
        </fields>
        <name>CLK_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER0_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_MOD</name>
          </field>
        </fields>
        <name>TIMER0_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER0_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER0_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER0_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER0_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER1_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_MOD</name>
          </field>
        </fields>
        <name>TIMER1_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER1_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER1_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER1_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>TIMER2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_PERIOD_UPMETHOD</name>
          </field>
        </fields>
        <name>TIMER2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER2_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_MOD</name>
          </field>
        </fields>
        <name>TIMER2_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>TIMER2_SYNCO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_PHASE_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER2_SYNC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TIMER2_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_DIRECTION</name>
          </field>
        </fields>
        <name>TIMER2_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER0_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER1_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>TIMER2_SYNCISEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI0_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI1_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EXTERNAL_SYNCI2_INVERT</name>
          </field>
        </fields>
        <name>TIMER_SYNCI_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR0_TIMERSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR1_TIMERSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>OPERATOR2_TIMERSEL</name>
          </field>
        </fields>
        <name>OPERATOR_TIMERSEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN0_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN0_A</name>
          </field>
        </fields>
        <name>GEN0_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN0_B</name>
          </field>
        </fields>
        <name>GEN0_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN0_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN0_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN0_T1_SEL</name>
          </field>
        </fields>
        <name>GEN0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN0_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN0_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN0_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN0_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN0_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN0_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT0_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT0_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT0_CLK_SEL</name>
          </field>
        </fields>
        <name>DT0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT0_FED</name>
          </field>
        </fields>
        <name>DT0_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT0_RED</name>
          </field>
        </fields>
        <name>DT0_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER0_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER0_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER0_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_B_OST_U</name>
          </field>
        </fields>
        <name>FH0_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH0_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_FORCE_OST</name>
          </field>
        </fields>
        <name>FH0_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_ON</name>
          </field>
        </fields>
        <name>FH0_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN1_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN1_A</name>
          </field>
        </fields>
        <name>GEN1_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN1_B</name>
          </field>
        </fields>
        <name>GEN1_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN1_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN1_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN1_T1_SEL</name>
          </field>
        </fields>
        <name>GEN1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN1_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN1_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN1_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN1_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN1_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN1_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT1_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT1_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT1_CLK_SEL</name>
          </field>
        </fields>
        <name>DT1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT1_FED</name>
          </field>
        </fields>
        <name>DT1_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT1_RED</name>
          </field>
        </fields>
        <name>DT1_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER1_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER1_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER1_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_B_OST_U</name>
          </field>
        </fields>
        <name>FH1_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH1_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_FORCE_OST</name>
          </field>
        </fields>
        <name>FH1_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_ON</name>
          </field>
        </fields>
        <name>FH1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_A_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_B_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_A_SHDW_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_B_SHDW_FULL</name>
          </field>
        </fields>
        <name>GEN2_STMP_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN2_A</name>
          </field>
        </fields>
        <name>GEN2_TSTMP_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>GEN2_B</name>
          </field>
        </fields>
        <name>GEN2_TSTMP_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>GEN2_CFG_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN2_T0_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>GEN2_T1_SEL</name>
          </field>
        </fields>
        <name>GEN2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>GEN2_CNTUFORCE_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_A_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_B_CNTUFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_A_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_A_NCIFORCE_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GEN2_B_NCIFORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>GEN2_B_NCIFORCE_MODE</name>
          </field>
        </fields>
        <name>GEN2_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN2_A</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>UT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEZ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DTEB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>DT1</name>
          </field>
        </fields>
        <name>GEN2_B</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT2_FED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>DT2_RED_UPMETHOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_DEB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_A_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_B_OUTSWAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_RED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_FED_INSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_RED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_FED_OUTINVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_A_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_B_OUTBYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DT2_CLK_SEL</name>
          </field>
        </fields>
        <name>DT2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT2_FED</name>
          </field>
        </fields>
        <name>DT2_FED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>DT2_RED</name>
          </field>
        </fields>
        <name>DT2_RED_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CARRIER2_DUTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>CARRIER2_OSHTWTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_OUT_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CARRIER2_IN_INVERT</name>
          </field>
        </fields>
        <name>CARRIER2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_SW_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F2_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F1_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F0_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_SW_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F2_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F1_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_F0_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_A_OST_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_CBC_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_CBC_U</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_OST_D</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_B_OST_U</name>
          </field>
        </fields>
        <name>FH2_CFG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CLR_OST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FH2_CBCPULSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_FORCE_CBC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_FORCE_OST</name>
          </field>
        </fields>
        <name>FH2_CFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_ON</name>
          </field>
        </fields>
        <name>FH2_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F0_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F1_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>F2_POLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EVENT_F2</name>
          </field>
        </fields>
        <name>FAULT_DETECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_TIMER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_SYNCI_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CAP_SYNCI_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP_SYNC_SW</name>
          </field>
        </fields>
        <name>CAP_TIMER_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP_TIMER_PHASE</name>
          </field>
        </fields>
        <name>CAP_TIMER_PHASE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP0_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP0_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_SW</name>
          </field>
        </fields>
        <name>CAP_CH0_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP1_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP1_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_SW</name>
          </field>
        </fields>
        <name>CAP_CH1_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>CAP2_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CAP2_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_IN_INVERT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_SW</name>
          </field>
        </fields>
        <name>CAP_CH2_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP0_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP1_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CAP2_VALUE</name>
          </field>
        </fields>
        <name>CAP_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_EDGE</name>
          </field>
        </fields>
        <name>CAP_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GLOBAL_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>GLOBAL_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_FORCE_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_UP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_FORCE_UP</name>
          </field>
        </fields>
        <name>UPDATE_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x55</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_STOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEZ_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER0_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER1_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIMER2_TEP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT0_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT1_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FAULT2_CLR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP0_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP1_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OP2_TEB_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_CBC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH0_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH1_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FH2_OST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CAP2_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>EN</name>
          </field>
        </fields>
        <name>CLK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>VERSION</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2107230</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x4</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF5CC00</baseAddress>
    <description>Peripheral NRX</description>
    <groupName>NRX</groupName>
    <interrupts></interrupts>
    <name>NRX</name>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>WiFi RX control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DEMAP_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DEMAP_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>VIT_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>VIT_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_ROT_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_ROT_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CHAN_EST_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CHAN_EST_FORCE_PU</name>
          </field>
        </fields>
        <name>NRXPD_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xB8</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF57000</baseAddress>
    <description>Pulse Count Controller</description>
    <groupName>PCNT</groupName>
    <interrupts>
      <interrupt>
        <name>PCNT</name>
        <value>0x30</value>
      </interrupt>
    </interrupts>
    <name>PCNT</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to filter pluse whose width is smaller than this value for unit0.</description>
            <name>FILTER_THRES_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for filtering input signals for unit0.</description>
            <name>FILTER_EN_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit0's count with 0 value.</description>
            <name>THR_ZERO_EN_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing unit0's count with thr_h_lim value.</description>
            <name>THR_H_LIM_EN_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit0's count with thr_l_lim  value.</description>
            <name>THR_L_LIM_EN_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit0's count with  thres0 value.</description>
            <name>THR_THRES0_EN_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing  unit0's count with thres1 value .</description>
            <name>THR_THRES1_EN_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input negedge signal for unit0. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH0_NEG_MODE_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input posedge signal for unit0. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH0_POS_MODE_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's high control signal for unit0. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_HCTRL_MODE_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's low control signal for unit0. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_LCTRL_MODE_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input negedge signal for unit0. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH1_NEG_MODE_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input posedge signal for unit0. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH1_POS_MODE_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's high control signal for unit0. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_HCTRL_MODE_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's low control signal for unit0. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_LCTRL_MODE_U0</name>
          </field>
        </fields>
        <name>U0_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thres0 value for unit0.</description>
            <name>CNT_THRES0_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure  thres1 value for unit0.</description>
            <name>CNT_THRES1_U0</name>
          </field>
        </fields>
        <name>U0_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thr_h_lim value for unit0.</description>
            <name>CNT_H_LIM_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to confiugre thr_l_lim value for unit0.</description>
            <name>CNT_L_LIM_U0</name>
          </field>
        </fields>
        <name>U0_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to filter pluse whose width is smaller than this value for unit1.</description>
            <name>FILTER_THRES_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for filtering input signals for unit1.</description>
            <name>FILTER_EN_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit1's count with 0 value.</description>
            <name>THR_ZERO_EN_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing unit1's count with thr_h_lim value.</description>
            <name>THR_H_LIM_EN_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit1's count with thr_l_lim  value.</description>
            <name>THR_L_LIM_EN_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit1's count with  thres0 value.</description>
            <name>THR_THRES0_EN_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing  unit1's count with thres1 value .</description>
            <name>THR_THRES1_EN_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input negedge signal for unit1. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH0_NEG_MODE_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input posedge signal for unit1. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH0_POS_MODE_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's high control signal for unit1. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_HCTRL_MODE_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's low control signal for unit1. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_LCTRL_MODE_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input negedge signal for unit1. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH1_NEG_MODE_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input posedge signal for unit1. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH1_POS_MODE_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's high control signal for unit1. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_HCTRL_MODE_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's low control signal for unit1. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_LCTRL_MODE_U1</name>
          </field>
        </fields>
        <name>U1_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thres0 value for unit1.</description>
            <name>CNT_THRES0_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure  thres1 value for unit1.</description>
            <name>CNT_THRES1_U1</name>
          </field>
        </fields>
        <name>U1_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thr_h_lim value for unit1.</description>
            <name>CNT_H_LIM_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to confiugre thr_l_lim value for unit1.</description>
            <name>CNT_L_LIM_U1</name>
          </field>
        </fields>
        <name>U1_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to filter pluse whose width is smaller than this value for unit2.</description>
            <name>FILTER_THRES_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for filtering input signals for unit2.</description>
            <name>FILTER_EN_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit2's count with 0 value.</description>
            <name>THR_ZERO_EN_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing unit2's count with thr_h_lim value.</description>
            <name>THR_H_LIM_EN_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit2's count with thr_l_lim  value.</description>
            <name>THR_L_LIM_EN_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit2's count with  thres0 value.</description>
            <name>THR_THRES0_EN_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing  unit2's count with thres1 value .</description>
            <name>THR_THRES1_EN_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input negedge signal for unit2. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH0_NEG_MODE_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input posedge signal for unit2. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH0_POS_MODE_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's high control signal for unit2. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_HCTRL_MODE_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's low control signal for unit2. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_LCTRL_MODE_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input negedge signal for unit2. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH1_NEG_MODE_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input posedge signal for unit2. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH1_POS_MODE_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's high control signal for unit2. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_HCTRL_MODE_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's low control signal for unit2. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_LCTRL_MODE_U2</name>
          </field>
        </fields>
        <name>U2_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thres0 value for unit2.</description>
            <name>CNT_THRES0_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure  thres1 value for unit2.</description>
            <name>CNT_THRES1_U2</name>
          </field>
        </fields>
        <name>U2_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thr_h_lim value for unit2.</description>
            <name>CNT_H_LIM_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to confiugre thr_l_lim value for unit2.</description>
            <name>CNT_L_LIM_U2</name>
          </field>
        </fields>
        <name>U2_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to filter pluse whose width is smaller than this value for unit3.</description>
            <name>FILTER_THRES_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for filtering input signals for unit3.</description>
            <name>FILTER_EN_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit3's count with 0 value.</description>
            <name>THR_ZERO_EN_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing unit3's count with thr_h_lim value.</description>
            <name>THR_H_LIM_EN_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit3's count with thr_l_lim  value.</description>
            <name>THR_L_LIM_EN_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit3's count with  thres0 value.</description>
            <name>THR_THRES0_EN_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing  unit3's count with thres1 value .</description>
            <name>THR_THRES1_EN_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input negedge signal for unit3. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH0_NEG_MODE_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input posedge signal for unit3. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH0_POS_MODE_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's high control signal for unit3. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_HCTRL_MODE_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's low control signal for unit3. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_LCTRL_MODE_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input negedge signal for unit3. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH1_NEG_MODE_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input posedge signal for unit3. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH1_POS_MODE_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's high control signal for unit3. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_HCTRL_MODE_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's low control signal for unit3. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_LCTRL_MODE_U3</name>
          </field>
        </fields>
        <name>U3_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thres0 value for unit3.</description>
            <name>CNT_THRES0_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure  thres1 value for unit3.</description>
            <name>CNT_THRES1_U3</name>
          </field>
        </fields>
        <name>U3_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thr_h_lim value for unit3.</description>
            <name>CNT_H_LIM_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to confiugre thr_l_lim value for unit3.</description>
            <name>CNT_L_LIM_U3</name>
          </field>
        </fields>
        <name>U3_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to filter pluse whose width is smaller than this value for unit4.</description>
            <name>FILTER_THRES_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for filtering input signals for unit4.</description>
            <name>FILTER_EN_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit4's count with 0 value.</description>
            <name>THR_ZERO_EN_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing unit4's count with thr_h_lim value.</description>
            <name>THR_H_LIM_EN_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit4's count with thr_l_lim  value.</description>
            <name>THR_L_LIM_EN_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit4's count with  thres0 value.</description>
            <name>THR_THRES0_EN_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing  unit4's count with thres1 value .</description>
            <name>THR_THRES1_EN_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input negedge signal for unit4. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH0_NEG_MODE_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input posedge signal for unit4. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH0_POS_MODE_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's high control signal for unit4. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_HCTRL_MODE_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's low control signal for unit4. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_LCTRL_MODE_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input negedge signal for unit4. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH1_NEG_MODE_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input posedge signal for unit4. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH1_POS_MODE_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's high control signal for unit4. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_HCTRL_MODE_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's low control signal for unit4. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_LCTRL_MODE_U4</name>
          </field>
        </fields>
        <name>U4_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thres0 value for unit4.</description>
            <name>CNT_THRES0_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure  thres1 value for unit4.</description>
            <name>CNT_THRES1_U4</name>
          </field>
        </fields>
        <name>U4_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thr_h_lim value for unit4.</description>
            <name>CNT_H_LIM_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to confiugre thr_l_lim value for unit4.</description>
            <name>CNT_L_LIM_U4</name>
          </field>
        </fields>
        <name>U4_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to filter pluse whose width is smaller than this value for unit5.</description>
            <name>FILTER_THRES_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for filtering input signals for unit5.</description>
            <name>FILTER_EN_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit5's count with 0 value.</description>
            <name>THR_ZERO_EN_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing unit5's count with thr_h_lim value.</description>
            <name>THR_H_LIM_EN_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit5's count with thr_l_lim  value.</description>
            <name>THR_L_LIM_EN_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit5's count with  thres0 value.</description>
            <name>THR_THRES0_EN_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing  unit5's count with thres1 value .</description>
            <name>THR_THRES1_EN_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input negedge signal for unit5. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH0_NEG_MODE_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input posedge signal for unit5. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH0_POS_MODE_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's high control signal for unit5. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_HCTRL_MODE_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's low control signal for unit5. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_LCTRL_MODE_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input negedge signal for unit5. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH1_NEG_MODE_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input posedge signal for unit5. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH1_POS_MODE_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's high control signal for unit5. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_HCTRL_MODE_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's low control signal for unit5. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_LCTRL_MODE_U5</name>
          </field>
        </fields>
        <name>U5_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thres0 value for unit5.</description>
            <name>CNT_THRES0_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure  thres1 value for unit5.</description>
            <name>CNT_THRES1_U5</name>
          </field>
        </fields>
        <name>U5_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thr_h_lim value for unit5.</description>
            <name>CNT_H_LIM_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to confiugre thr_l_lim value for unit5.</description>
            <name>CNT_L_LIM_U5</name>
          </field>
        </fields>
        <name>U5_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to filter pluse whose width is smaller than this value for unit6.</description>
            <name>FILTER_THRES_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for filtering input signals for unit6.</description>
            <name>FILTER_EN_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit6's count with 0 value.</description>
            <name>THR_ZERO_EN_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing unit6's count with thr_h_lim value.</description>
            <name>THR_H_LIM_EN_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit6's count with thr_l_lim  value.</description>
            <name>THR_L_LIM_EN_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit6's count with  thres0 value.</description>
            <name>THR_THRES0_EN_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing  unit6's count with thres1 value .</description>
            <name>THR_THRES1_EN_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input negedge signal for unit6. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH0_NEG_MODE_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input posedge signal for unit6. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH0_POS_MODE_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's high control signal for unit6. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_HCTRL_MODE_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's low control signal for unit6. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_LCTRL_MODE_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input negedge signal for unit6. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH1_NEG_MODE_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input posedge signal for unit6. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH1_POS_MODE_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's high control signal for unit6. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_HCTRL_MODE_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's low control signal for unit6. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_LCTRL_MODE_U6</name>
          </field>
        </fields>
        <name>U6_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thres0 value for unit6.</description>
            <name>CNT_THRES0_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure  thres1 value for unit6.</description>
            <name>CNT_THRES1_U6</name>
          </field>
        </fields>
        <name>U6_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thr_h_lim value for unit6.</description>
            <name>CNT_H_LIM_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to confiugre thr_l_lim value for unit6.</description>
            <name>CNT_L_LIM_U6</name>
          </field>
        </fields>
        <name>U6_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to filter pluse whose width is smaller than this value for unit7.</description>
            <name>FILTER_THRES_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for filtering input signals for unit7.</description>
            <name>FILTER_EN_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit7's count with 0 value.</description>
            <name>THR_ZERO_EN_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing unit7's count with thr_h_lim value.</description>
            <name>THR_H_LIM_EN_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit7's count with thr_l_lim  value.</description>
            <name>THR_L_LIM_EN_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for comparing unit7's count with  thres0 value.</description>
            <name>THR_THRES0_EN_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for  comparing  unit7's count with thres1 value .</description>
            <name>THR_THRES1_EN_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input negedge signal for unit7. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH0_NEG_MODE_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's input posedge signal for unit7. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH0_POS_MODE_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's high control signal for unit7. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_HCTRL_MODE_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel0's low control signal for unit7. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH0_LCTRL_MODE_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input negedge signal for unit7. 2'd1: increase at the negedge of input signal    2'd2:decrease at the negedge of input signal    others:forbidden</description>
            <name>CH1_NEG_MODE_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's input posedge signal for unit7. 2'd1: increase at the posedge of input signal    2'd2:decrease at the posedge of input signal    others:forbidden</description>
            <name>CH1_POS_MODE_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's high control signal for unit7. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_HCTRL_MODE_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to control the mode of channel1's low control signal for unit7. 2'd0:increase when control signal is low   2'd1: decrease when control signal is high   others:forbidden</description>
            <name>CH1_LCTRL_MODE_U7</name>
          </field>
        </fields>
        <name>U7_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thres0 value for unit7.</description>
            <name>CNT_THRES0_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure  thres1 value for unit7.</description>
            <name>CNT_THRES1_U7</name>
          </field>
        </fields>
        <name>U7_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure thr_h_lim value for unit7.</description>
            <name>CNT_H_LIM_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to confiugre thr_l_lim value for unit7.</description>
            <name>CNT_L_LIM_U7</name>
          </field>
        </fields>
        <name>U7_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register stores the current pulse count value for unit0.</description>
            <name>PLUS_CNT_U0</name>
          </field>
        </fields>
        <name>U0_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register stores the current pulse count value for unit1.</description>
            <name>PLUS_CNT_U1</name>
          </field>
        </fields>
        <name>U1_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register stores the current pulse count value for unit2.</description>
            <name>PLUS_CNT_U2</name>
          </field>
        </fields>
        <name>U2_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register stores the current pulse count value for unit3.</description>
            <name>PLUS_CNT_U3</name>
          </field>
        </fields>
        <name>U3_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register stores the current pulse count value for unit4.</description>
            <name>PLUS_CNT_U4</name>
          </field>
        </fields>
        <name>U4_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register stores the current pulse count value for unit5.</description>
            <name>PLUS_CNT_U5</name>
          </field>
        </fields>
        <name>U5_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register stores the current pulse count value for unit6.</description>
            <name>PLUS_CNT_U6</name>
          </field>
        </fields>
        <name>U6_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register stores the current pulse count value for unit7.</description>
            <name>PLUS_CNT_U7</name>
          </field>
        </fields>
        <name>U7_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the interrupt raw bit for channel0 event.</description>
            <name>CNT_THR_EVENT_U0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the interrupt raw bit for channel1 event.</description>
            <name>CNT_THR_EVENT_U1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the interrupt raw bit for channel2 event.</description>
            <name>CNT_THR_EVENT_U2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the interrupt raw bit for channel3 event.</description>
            <name>CNT_THR_EVENT_U3_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the interrupt raw bit for channel4 event.</description>
            <name>CNT_THR_EVENT_U4_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the interrupt raw bit for channel5 event.</description>
            <name>CNT_THR_EVENT_U5_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the interrupt raw bit for channel6 event.</description>
            <name>CNT_THR_EVENT_U6_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the interrupt raw bit for channel7 event.</description>
            <name>CNT_THR_EVENT_U7_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt status bit for channel0 event.</description>
            <name>CNT_THR_EVENT_U0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt status bit for channel1 event.</description>
            <name>CNT_THR_EVENT_U1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt status bit for channel2 event.</description>
            <name>CNT_THR_EVENT_U2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt status bit for channel3 event.</description>
            <name>CNT_THR_EVENT_U3_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt status bit for channel4 event.</description>
            <name>CNT_THR_EVENT_U4_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt status bit for channel5 event.</description>
            <name>CNT_THR_EVENT_U5_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt status bit for channel6 event.</description>
            <name>CNT_THR_EVENT_U6_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt status bit for channel7 event.</description>
            <name>CNT_THR_EVENT_U7_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt enable bit for channel0 event.</description>
            <name>CNT_THR_EVENT_U0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt enable bit for channel1 event.</description>
            <name>CNT_THR_EVENT_U1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt enable bit for channel2 event.</description>
            <name>CNT_THR_EVENT_U2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt enable bit for channel3 event.</description>
            <name>CNT_THR_EVENT_U3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt enable bit for channel4 event.</description>
            <name>CNT_THR_EVENT_U4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt enable bit for channel5 event.</description>
            <name>CNT_THR_EVENT_U5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt enable bit for channel6 event.</description>
            <name>CNT_THR_EVENT_U6_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the  interrupt enable bit for channel7 event.</description>
            <name>CNT_THR_EVENT_U7_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear channel0 event interrupt.</description>
            <name>CNT_THR_EVENT_U0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear channel1 event interrupt.</description>
            <name>CNT_THR_EVENT_U1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear channel2 event interrupt.</description>
            <name>CNT_THR_EVENT_U2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear channel3 event interrupt.</description>
            <name>CNT_THR_EVENT_U3_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear channel4 event interrupt.</description>
            <name>CNT_THR_EVENT_U4_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear channel5 event interrupt.</description>
            <name>CNT_THR_EVENT_U5_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear channel6 event interrupt.</description>
            <name>CNT_THR_EVENT_U6_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear channel7 event interrupt.</description>
            <name>CNT_THR_EVENT_U7_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CORE_STATUS_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>STATUS_CNT_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>STATUS_THRES1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>STATUS_THRES0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>STATUS_L_LIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>STATUS_H_LIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>STATUS_ZERO</name>
          </field>
        </fields>
        <name>U0_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CORE_STATUS_U1</name>
          </field>
        </fields>
        <name>U1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CORE_STATUS_U2</name>
          </field>
        </fields>
        <name>U2_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CORE_STATUS_U3</name>
          </field>
        </fields>
        <name>U3_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CORE_STATUS_U4</name>
          </field>
        </fields>
        <name>U4_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CORE_STATUS_U5</name>
          </field>
        </fields>
        <name>U5_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CORE_STATUS_U6</name>
          </field>
        </fields>
        <name>U6_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CORE_STATUS_U7</name>
          </field>
        </fields>
        <name>U7_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear unit0's counter.</description>
            <name>PLUS_CNT_RST_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pause unit0's counter.</description>
            <name>CNT_PAUSE_U0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear unit1's counter.</description>
            <name>PLUS_CNT_RST_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pause unit1's counter.</description>
            <name>CNT_PAUSE_U1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear unit2's counter.</description>
            <name>PLUS_CNT_RST_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pause unit2's counter.</description>
            <name>CNT_PAUSE_U2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear unit3's counter.</description>
            <name>PLUS_CNT_RST_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pause unit3's counter.</description>
            <name>CNT_PAUSE_U3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear unit4's counter.</description>
            <name>PLUS_CNT_RST_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pause unit4's counter.</description>
            <name>CNT_PAUSE_U4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear unit5's counter.</description>
            <name>PLUS_CNT_RST_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pause unit5's counter.</description>
            <name>CNT_PAUSE_U5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear unit6's counter.</description>
            <name>PLUS_CNT_RST_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pause unit6's counter.</description>
            <name>CNT_PAUSE_U6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear unit7's counter.</description>
            <name>PLUS_CNT_RST_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pause unit7's counter.</description>
            <name>CNT_PAUSE_U7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5555</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x14122600</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xF8</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF56000</baseAddress>
    <description>Remote Control Peripheral</description>
    <groupName>RMT</groupName>
    <interrupts>
      <interrupt>
        <name>RMT</name>
        <value>0x2F</value>
      </interrupt>
    </interrupts>
    <name>RMT</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields></fields>
        <name>CH0DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields></fields>
        <name>CH1DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields></fields>
        <name>CH2DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields></fields>
        <name>CH3DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields></fields>
        <name>CH4DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields></fields>
        <name>CH5DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields></fields>
        <name>CH6DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields></fields>
        <name>CH7DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the  frequency divider's factor in channel0.</description>
            <name>DIV_CNT_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In receive mode when no edge is detected on the input signal for longer than reg_idle_thres_ch0 then the receive process is done.</description>
            <name>IDLE_THRES_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the the amount of memory blocks allocated to channel0.</description>
            <name>MEM_SIZE_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the carrier modulation enable control bit for channel0.</description>
            <name>CARRIER_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to configure the way carrier wave is modulated for  channel0.1'b1:transmit on low output level  1'b0:transmit  on high output level.</description>
            <name>CARRIER_OUT_LV_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reduce power consumed by mem. 1:mem is in low power state.</description>
            <name>MEM_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit  is used  to control clock.when software config RMT internal registers  it controls the register clock.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CH0CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x31100002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start sending data for channel0.</description>
            <name>TX_START_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale receving data for channel0.</description>
            <name>RX_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset write ram address for channel0 by receiver access.</description>
            <name>MEM_WR_RST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset read ram address for channel0 by transmitter access.</description>
            <name>MEM_RD_RST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset W/R ram address for channel0 by apb fifo access</description>
            <name>APB_MEM_RST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the mark of channel0's ram usage right.1'b1：receiver uses the ram  0：transmitter uses the ram</description>
            <name>MEM_OWNER_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to continue sending  from the first data to the last data in channel0 again and again.</description>
            <name>TX_CONTI_MODE_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the receive filter enable bit for channel0.</description>
            <name>RX_FILTER_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>in receive mode  channel0 ignore input pulse when the pulse width is smaller then this value.</description>
            <name>RX_FILTER_THRES_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset divider in channel0.</description>
            <name>REF_CNT_RST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to select base clock. 1'b1:clk_apb  1'b0:clk_ref</description>
            <name>REF_ALWAYS_ON_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit configures the output signal's level for channel0 in IDLE state.</description>
            <name>IDLE_OUT_LV_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for channel0 in IDLE state.</description>
            <name>IDLE_OUT_EN_CH0</name>
          </field>
        </fields>
        <name>CH0CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the  frequency divider's factor in channel1.</description>
            <name>DIV_CNT_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure the the amount of memory blocks allocated to channel1.</description>
            <name>IDLE_THRES_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the the amount of memory blocks allocated to channel1.</description>
            <name>MEM_SIZE_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the carrier modulation enable control bit for channel1.</description>
            <name>CARRIER_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to configure the way carrier wave is modulated for  channel1.1'b1:transmit on low output level  1'b0:transmit  on high output level.</description>
            <name>CARRIER_OUT_LV_CH1</name>
          </field>
        </fields>
        <name>CH1CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x31100002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start sending data for channel1.</description>
            <name>TX_START_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale receving data for channel1.</description>
            <name>RX_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset write ram address for channel1 by receiver access.</description>
            <name>MEM_WR_RST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset read ram address for channel1 by transmitter access.</description>
            <name>MEM_RD_RST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset W/R ram address for channel1 by apb fifo access</description>
            <name>APB_MEM_RST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the mark of channel1's ram usage right.1'b1：receiver uses the ram  0：transmitter uses the ram</description>
            <name>MEM_OWNER_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to continue sending  from the first data to the last data in channel1 again and again.</description>
            <name>TX_CONTI_MODE_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the receive filter enable bit for channel1.</description>
            <name>RX_FILTER_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>in receive mode  channel1 ignore input pulse when the pulse width is smaller then this value.</description>
            <name>RX_FILTER_THRES_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset divider in channel1.</description>
            <name>REF_CNT_RST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to select base clock. 1'b1:clk_apb  1'b0:clk_ref</description>
            <name>REF_ALWAYS_ON_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit configures the output signal's level for channel1 in IDLE state.</description>
            <name>IDLE_OUT_LV_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for channel1 in IDLE state.</description>
            <name>IDLE_OUT_EN_CH1</name>
          </field>
        </fields>
        <name>CH1CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the  frequency divider's factor in channel2.</description>
            <name>DIV_CNT_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In receive mode when the counter's value is bigger than reg_idle_thres_ch2 then the receive process is done.</description>
            <name>IDLE_THRES_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the the amount of memory blocks allocated to channel2.</description>
            <name>MEM_SIZE_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the carrier modulation enable control bit for channel2.</description>
            <name>CARRIER_EN_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to configure carrier wave's position for channel2.1'b1:add on low level  1'b0:add  on high level.</description>
            <name>CARRIER_OUT_LV_CH2</name>
          </field>
        </fields>
        <name>CH2CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x31100002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start sending data for channel2.</description>
            <name>TX_START_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale receving data for channel2.</description>
            <name>RX_EN_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset write ram address for channel2 by receiver access.</description>
            <name>MEM_WR_RST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset read ram address for channel2 by transmitter access.</description>
            <name>MEM_RD_RST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset W/R ram address for channel2 by apb fifo access</description>
            <name>APB_MEM_RST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the mark of channel2's ram usage right.1'b1：receiver uses the ram  0：transmitter uses the ram</description>
            <name>MEM_OWNER_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to continue sending  from the first data to the last data in channel2.</description>
            <name>TX_CONTI_MODE_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the receive filter enable bit for channel2.</description>
            <name>RX_FILTER_EN_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>in receive mode  channel2 ignore input pulse when the pulse width is smaller then this value.</description>
            <name>RX_FILTER_THRES_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset divider in channel2.</description>
            <name>REF_CNT_RST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to select base clock. 1'b1:clk_apb  1'b0:clk_ref</description>
            <name>REF_ALWAYS_ON_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit configures the output signal's level for channel2 in IDLE state.</description>
            <name>IDLE_OUT_LV_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for channel2 in IDLE state.</description>
            <name>IDLE_OUT_EN_CH2</name>
          </field>
        </fields>
        <name>CH2CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the  frequency divider's factor in channel3.</description>
            <name>DIV_CNT_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In receive mode when the counter's value is bigger than reg_idle_thres_ch3 then the receive process is done.</description>
            <name>IDLE_THRES_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the the amount of memory blocks allocated to channel3.</description>
            <name>MEM_SIZE_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the carrier modulation enable control bit for channel3.</description>
            <name>CARRIER_EN_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to configure carrier wave's position for channel3.1'b1:add on low level  1'b0:add  on high level.</description>
            <name>CARRIER_OUT_LV_CH3</name>
          </field>
        </fields>
        <name>CH3CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x31100002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start sending data for channel3.</description>
            <name>TX_START_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale receving data for channel3.</description>
            <name>RX_EN_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset write ram address for channel3 by receiver access.</description>
            <name>MEM_WR_RST_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset read ram address for channel3 by transmitter access.</description>
            <name>MEM_RD_RST_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset W/R ram address for channel3 by apb fifo access</description>
            <name>APB_MEM_RST_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the mark of channel3's ram usage right.1'b1：receiver uses the ram  0：transmitter uses the ram</description>
            <name>MEM_OWNER_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to continue sending  from the first data to the last data in channel3.</description>
            <name>TX_CONTI_MODE_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the receive filter enable bit for channel3.</description>
            <name>RX_FILTER_EN_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>in receive mode  channel3 ignore input pulse when the pulse width is smaller then this value.</description>
            <name>RX_FILTER_THRES_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset divider in channel3.</description>
            <name>REF_CNT_RST_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to select base clock. 1'b1:clk_apb  1'b0:clk_ref</description>
            <name>REF_ALWAYS_ON_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit configures the output signal's level for channel3 in IDLE state.</description>
            <name>IDLE_OUT_LV_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for channel3 in IDLE state.</description>
            <name>IDLE_OUT_EN_CH3</name>
          </field>
        </fields>
        <name>CH3CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the  frequency divider's factor in channel4.</description>
            <name>DIV_CNT_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In receive mode when the counter's value is bigger than reg_idle_thres_ch4 then the receive process is done.</description>
            <name>IDLE_THRES_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the the amount of memory blocks allocated to channel4.</description>
            <name>MEM_SIZE_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the carrier modulation enable control bit for channel4.</description>
            <name>CARRIER_EN_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to configure carrier wave's position for channel4.1'b1:add on low level  1'b0:add  on high level.</description>
            <name>CARRIER_OUT_LV_CH4</name>
          </field>
        </fields>
        <name>CH4CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x31100002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start sending data for channel4.</description>
            <name>TX_START_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale receving data for channel4.</description>
            <name>RX_EN_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset write ram address for channel4 by receiver access.</description>
            <name>MEM_WR_RST_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset read ram address for channel4 by transmitter access.</description>
            <name>MEM_RD_RST_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset W/R ram address for channel4 by apb fifo access</description>
            <name>APB_MEM_RST_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the mark of channel4's ram usage right.1'b1：receiver uses the ram  0：transmitter uses the ram</description>
            <name>MEM_OWNER_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to continue sending  from the first data to the last data in channel4.</description>
            <name>TX_CONTI_MODE_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the receive filter enable bit for channel4.</description>
            <name>RX_FILTER_EN_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>in receive mode  channel4 ignore input pulse when the pulse width is smaller then this value.</description>
            <name>RX_FILTER_THRES_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset divider in channel4.</description>
            <name>REF_CNT_RST_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to select base clock. 1'b1:clk_apb  1'b0:clk_ref</description>
            <name>REF_ALWAYS_ON_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit configures the output signal's level for channel4 in IDLE state.</description>
            <name>IDLE_OUT_LV_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for channel4 in IDLE state.</description>
            <name>IDLE_OUT_EN_CH4</name>
          </field>
        </fields>
        <name>CH4CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the  frequency divider's factor in channel5.</description>
            <name>DIV_CNT_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In receive mode when the counter's value is bigger than reg_idle_thres_ch5 then the receive process is done.</description>
            <name>IDLE_THRES_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the the amount of memory blocks allocated to channel5.</description>
            <name>MEM_SIZE_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the carrier modulation enable control bit for channel5.</description>
            <name>CARRIER_EN_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to configure carrier wave's position for channel5.1'b1:add on low level  1'b0:add  on high level.</description>
            <name>CARRIER_OUT_LV_CH5</name>
          </field>
        </fields>
        <name>CH5CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x31100002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start sending data for channel5.</description>
            <name>TX_START_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale receving data for channel5.</description>
            <name>RX_EN_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset write ram address for channel5 by receiver access.</description>
            <name>MEM_WR_RST_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset read ram address for channel5 by transmitter access.</description>
            <name>MEM_RD_RST_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset W/R ram address for channel5 by apb fifo access</description>
            <name>APB_MEM_RST_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the mark of channel5's ram usage right.1'b1：receiver uses the ram  0：transmitter uses the ram</description>
            <name>MEM_OWNER_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to continue sending  from the first data to the last data in channel5.</description>
            <name>TX_CONTI_MODE_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the receive filter enable bit for channel5.</description>
            <name>RX_FILTER_EN_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>in receive mode  channel5 ignore input pulse when the pulse width is smaller then this value.</description>
            <name>RX_FILTER_THRES_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset divider in channel5.</description>
            <name>REF_CNT_RST_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to select base clock. 1'b1:clk_apb  1'b0:clk_ref</description>
            <name>REF_ALWAYS_ON_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit configures the output signal's level for channel5 in IDLE state.</description>
            <name>IDLE_OUT_LV_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for channel5 in IDLE state.</description>
            <name>IDLE_OUT_EN_CH5</name>
          </field>
        </fields>
        <name>CH5CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the  frequency divider's factor in channel6.</description>
            <name>DIV_CNT_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In receive mode when the counter's value is bigger than reg_idle_thres_ch6 then the receive process is done.</description>
            <name>IDLE_THRES_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the the amount of memory blocks allocated to channel6.</description>
            <name>MEM_SIZE_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the carrier modulation enable control bit for channel6.</description>
            <name>CARRIER_EN_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to configure carrier wave's position for channel6.1'b1:add on low level  1'b0:add  on high level.</description>
            <name>CARRIER_OUT_LV_CH6</name>
          </field>
        </fields>
        <name>CH6CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x31100002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start sending data for channel6.</description>
            <name>TX_START_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale receving data for channel6.</description>
            <name>RX_EN_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset write ram address for channel6 by receiver access.</description>
            <name>MEM_WR_RST_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset read ram address for channel6 by transmitter access.</description>
            <name>MEM_RD_RST_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset W/R ram address for channel6 by apb fifo access</description>
            <name>APB_MEM_RST_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the mark of channel6's ram usage right.1'b1：receiver uses the ram  0：transmitter uses the ram</description>
            <name>MEM_OWNER_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to continue sending  from the first data to the last data in channel6.</description>
            <name>TX_CONTI_MODE_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the receive filter enable bit for channel6.</description>
            <name>RX_FILTER_EN_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>in receive mode  channel6 ignore input pulse when the pulse width is smaller then this value.</description>
            <name>RX_FILTER_THRES_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset divider in channel6.</description>
            <name>REF_CNT_RST_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to select base clock. 1'b1:clk_apb  1'b0:clk_ref</description>
            <name>REF_ALWAYS_ON_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit configures the output signal's level for channel6 in IDLE state.</description>
            <name>IDLE_OUT_LV_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for channel6 in IDLE state.</description>
            <name>IDLE_OUT_EN_CH6</name>
          </field>
        </fields>
        <name>CH6CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the  frequency divider's factor in channel7.</description>
            <name>DIV_CNT_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In receive mode when the counter's value is bigger than reg_idle_thres_ch7 then the receive process is done.</description>
            <name>IDLE_THRES_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the the amount of memory blocks allocated to channel7.</description>
            <name>MEM_SIZE_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the carrier modulation enable control bit for channel7.</description>
            <name>CARRIER_EN_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to configure carrier wave's position for channel7.1'b1:add on low level  1'b0:add  on high level.</description>
            <name>CARRIER_OUT_LV_CH7</name>
          </field>
        </fields>
        <name>CH7CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x31100002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start sending data for channel7.</description>
            <name>TX_START_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale receving data for channel7.</description>
            <name>RX_EN_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset write ram address for channel7 by receiver access.</description>
            <name>MEM_WR_RST_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset read ram address for channel7 by transmitter access.</description>
            <name>MEM_RD_RST_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset W/R ram address for channel7 by apb fifo access</description>
            <name>APB_MEM_RST_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the mark of channel7's ram usage right.1'b1：receiver uses the ram  0：transmitter uses the ram</description>
            <name>MEM_OWNER_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to continue sending  from the first data to the last data in channel7.</description>
            <name>TX_CONTI_MODE_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the receive filter enable bit for channel7.</description>
            <name>RX_FILTER_EN_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>in receive mode  channel7 ignore input pulse when the pulse width is smaller then this value.</description>
            <name>RX_FILTER_THRES_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset divider in channel7.</description>
            <name>REF_CNT_RST_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to select base clock. 1'b1:clk_apb  1'b0:clk_ref</description>
            <name>REF_ALWAYS_ON_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit configures the output signal's level for channel7 in IDLE state.</description>
            <name>IDLE_OUT_LV_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the output enable control bit for channel6 in IDLE state.</description>
            <name>IDLE_OUT_EN_CH7</name>
          </field>
        </fields>
        <name>CH7CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The status for channel0</description>
            <name>STATUS_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory read address of channel0.</description>
            <name>MEM_WADDR_EX_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory write address of channel0.</description>
            <name>MEM_RADDR_EX_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The channel0 state machine status register.3'h0 : idle, 3'h1 : send, 3'h2 : read memory, 3'h3 : receive, 3'h4 : wait.</description>
            <name>STATE_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When channel0 is configured for receive mode, this bit will turn to high level if rmt_mem_owner register is not set to 1.</description>
            <name>MEM_OWNER_ERR_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory full status bit for channel0 turns to high level when mem_waddr_ex is greater than or equal to the configuration range.</description>
            <name>MEM_FULL_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory empty status bit for channel0. in acyclic mode, this bit turns to high level when mem_raddr_ex is greater than or equal to the configured range.</description>
            <name>MEM_EMPTY_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb write memory status bit for channel0 turns to high level when the apb write address exceeds the configuration range.</description>
            <name>APB_MEM_WR_ERR_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb read memory status bit for channel0 turns to high level when the apb read address exceeds the configuration range.</description>
            <name>APB_MEM_RD_ERR_CH0</name>
          </field>
        </fields>
        <name>CH0STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The status for channel1</description>
            <name>STATUS_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory read address of channel1.</description>
            <name>MEM_WADDR_EX_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory write address of channel1.</description>
            <name>MEM_RADDR_EX_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The channel1 state machine status register.3'h0 : idle, 3'h1 : send, 3'h2 : read memory, 3'h3 : receive, 3'h4 : wait.</description>
            <name>STATE_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When channel1 is configured for receive mode, this bit will turn to high level if rmt_mem_owner register is not set to 1.</description>
            <name>MEM_OWNER_ERR_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory full status bit for channel1 turns to high level when mem_waddr_ex is greater than or equal to the configuration range.</description>
            <name>MEM_FULL_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory empty status bit for channel1. in acyclic mode, this bit turns to high level when mem_raddr_ex is greater than or equal to the configured range.</description>
            <name>MEM_EMPTY_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb write memory status bit for channel1 turns to high level when the apb write address exceeds the configuration range.</description>
            <name>APB_MEM_WR_ERR_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb read memory status bit for channel1 turns to high level when the apb read address exceeds the configuration range.</description>
            <name>APB_MEM_RD_ERR_CH1</name>
          </field>
        </fields>
        <name>CH1STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The status for channel2</description>
            <name>STATUS_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory read address of channel2.</description>
            <name>MEM_WADDR_EX_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory write address of channel2.</description>
            <name>MEM_RADDR_EX_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The channel2 state machine status register.3'h0 : idle, 3'h1 : send, 3'h2 : read memory, 3'h3 : receive, 3'h4 : wait.</description>
            <name>STATE_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When channel2 is configured for receive mode, this bit will turn to high level if rmt_mem_owner register is not set to 1.</description>
            <name>MEM_OWNER_ERR_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory full status bit for channel2 turns to high level when mem_waddr_ex is greater than or equal to the configuration range.</description>
            <name>MEM_FULL_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory empty status bit for channel2. in acyclic mode, this bit turns to high level when mem_raddr_ex is greater than or equal to the configured range.</description>
            <name>MEM_EMPTY_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb write memory status bit for channel2 turns to high level when the apb write address exceeds the configuration range.</description>
            <name>APB_MEM_WR_ERR_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb read memory status bit for channel2 turns to high level when the apb read address exceeds the configuration range.</description>
            <name>APB_MEM_RD_ERR_CH2</name>
          </field>
        </fields>
        <name>CH2STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The status for channel3</description>
            <name>STATUS_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory read address of channel3.</description>
            <name>MEM_WADDR_EX_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory write address of channel3.</description>
            <name>MEM_RADDR_EX_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The channel3 state machine status register.3'h0 : idle, 3'h1 : send, 3'h2 : read memory, 3'h3 : receive, 3'h4 : wait.</description>
            <name>STATE_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When channel3 is configured for receive mode, this bit will turn to high level if rmt_mem_owner register is not set to 1.</description>
            <name>MEM_OWNER_ERR_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory full status bit for channel3 turns to high level when mem_waddr_ex is greater than or equal to the configuration range.</description>
            <name>MEM_FULL_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory empty status bit for channel3. in acyclic mode, this bit turns to high level when mem_raddr_ex is greater than or equal to the configured range.</description>
            <name>MEM_EMPTY_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb write memory status bit for channel3 turns to high level when the apb write address exceeds the configuration range.</description>
            <name>APB_MEM_WR_ERR_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb read memory status bit for channel3 turns to high level when the apb read address exceeds the configuration range.</description>
            <name>APB_MEM_RD_ERR_CH3</name>
          </field>
        </fields>
        <name>CH3STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The status for channel4</description>
            <name>STATUS_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory read address of channel4.</description>
            <name>MEM_WADDR_EX_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory write address of channel4.</description>
            <name>MEM_RADDR_EX_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The channel4 state machine status register.3'h0 : idle, 3'h1 : send, 3'h2 : read memory, 3'h3 : receive, 3'h4 : wait.</description>
            <name>STATE_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When channel4 is configured for receive mode, this bit will turn to high level if rmt_mem_owner register is not set to 1.</description>
            <name>MEM_OWNER_ERR_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory full status bit for channel4 turns to high level when mem_waddr_ex is greater than or equal to the configuration range.</description>
            <name>MEM_FULL_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory empty status bit for channel4. in acyclic mode, this bit turns to high level when mem_raddr_ex is greater than or equal to the configured range.</description>
            <name>MEM_EMPTY_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb write memory status bit for channel4 turns to high level when the apb write address exceeds the configuration range.</description>
            <name>APB_MEM_WR_ERR_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb read memory status bit for channel4 turns to high level when the apb read address exceeds the configuration range.</description>
            <name>APB_MEM_RD_ERR_CH4</name>
          </field>
        </fields>
        <name>CH4STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The status for channel5</description>
            <name>STATUS_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory read address of channel5.</description>
            <name>MEM_WADDR_EX_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory write address of channel5.</description>
            <name>MEM_RADDR_EX_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The channel5 state machine status register.3'h0 : idle, 3'h1 : send, 3'h2 : read memory, 3'h3 : receive, 3'h4 : wait.</description>
            <name>STATE_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When channel5 is configured for receive mode, this bit will turn to high level if rmt_mem_owner register is not set to 1.</description>
            <name>MEM_OWNER_ERR_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory full status bit for channel5 turns to high level when mem_waddr_ex is greater than or equal to the configuration range.</description>
            <name>MEM_FULL_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory empty status bit for channel5. in acyclic mode, this bit turns to high level when mem_raddr_ex is greater than or equal to the configured range.</description>
            <name>MEM_EMPTY_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb write memory status bit for channel5 turns to high level when the apb write address exceeds the configuration range.</description>
            <name>APB_MEM_WR_ERR_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb read memory status bit for channel5 turns to high level when the apb read address exceeds the configuration range.</description>
            <name>APB_MEM_RD_ERR_CH5</name>
          </field>
        </fields>
        <name>CH5STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The status for channel6</description>
            <name>STATUS_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory read address of channel6.</description>
            <name>MEM_WADDR_EX_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory write address of channel6.</description>
            <name>MEM_RADDR_EX_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The channel6 state machine status register.3'h0 : idle, 3'h1 : send, 3'h2 : read memory, 3'h3 : receive, 3'h4 : wait.</description>
            <name>STATE_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When channel6 is configured for receive mode, this bit will turn to high level if rmt_mem_owner register is not set to 1.</description>
            <name>MEM_OWNER_ERR_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory full status bit for channel6 turns to high level when mem_waddr_ex is greater than or equal to the configuration range.</description>
            <name>MEM_FULL_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory empty status bit for channel6. in acyclic mode, this bit turns to high level when mem_raddr_ex is greater than or equal to the configured range.</description>
            <name>MEM_EMPTY_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb write memory status bit for channel6 turns to high level when the apb write address exceeds the configuration range.</description>
            <name>APB_MEM_WR_ERR_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb read memory status bit for channel6 turns to high level when the apb read address exceeds the configuration range.</description>
            <name>APB_MEM_RD_ERR_CH6</name>
          </field>
        </fields>
        <name>CH6STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The status for channel7</description>
            <name>STATUS_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory read address of channel7.</description>
            <name>MEM_WADDR_EX_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The current memory write address of channel7.</description>
            <name>MEM_RADDR_EX_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The channel7 state machine status register.3'h0 : idle, 3'h1 : send, 3'h2 : read memory, 3'h3 : receive, 3'h4 : wait.</description>
            <name>STATE_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When channel7 is configured for receive mode, this bit will turn to high level if rmt_mem_owner register is not set to 1.</description>
            <name>MEM_OWNER_ERR_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory full status bit for channel7 turns to high level when mem_waddr_ex is greater than or equal to the configuration range.</description>
            <name>MEM_FULL_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The memory empty status bit for channel7. in acyclic mode, this bit turns to high level when mem_raddr_ex is greater than or equal to the configured range.</description>
            <name>MEM_EMPTY_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb write memory status bit for channel7 turns to high level when the apb write address exceeds the configuration range.</description>
            <name>APB_MEM_WR_ERR_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The apb read memory status bit for channel7 turns to high level when the apb read address exceeds the configuration range.</description>
            <name>APB_MEM_RD_ERR_CH7</name>
          </field>
        </fields>
        <name>CH7STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The ram relative address in channel0 by apb fifo access</description>
            <name>APB_MEM_ADDR_CH0</name>
          </field>
        </fields>
        <name>CH0ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The ram relative address in channel1 by apb fifo access</description>
            <name>APB_MEM_ADDR_CH1</name>
          </field>
        </fields>
        <name>CH1ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The ram relative address in channel2 by apb fifo access</description>
            <name>APB_MEM_ADDR_CH2</name>
          </field>
        </fields>
        <name>CH2ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The ram relative address in channel3 by apb fifo access</description>
            <name>APB_MEM_ADDR_CH3</name>
          </field>
        </fields>
        <name>CH3ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The ram relative address in channel4 by apb fifo access</description>
            <name>APB_MEM_ADDR_CH4</name>
          </field>
        </fields>
        <name>CH4ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The ram relative address in channel5 by apb fifo access</description>
            <name>APB_MEM_ADDR_CH5</name>
          </field>
        </fields>
        <name>CH5ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The ram relative address in channel6 by apb fifo access</description>
            <name>APB_MEM_ADDR_CH6</name>
          </field>
        </fields>
        <name>CH6ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The ram relative address in channel7 by apb fifo access</description>
            <name>APB_MEM_ADDR_CH7</name>
          </field>
        </fields>
        <name>CH7ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 0 turns to high level when the transmit process is done.</description>
            <name>CH0_TX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 0 turns to high level when the receive process is done.</description>
            <name>CH0_RX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 0 turns to high level when channle 0 detects some errors.</description>
            <name>CH0_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 1 turns to high level when the transmit process is done.</description>
            <name>CH1_TX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 1 turns to high level when the receive process is done.</description>
            <name>CH1_RX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 1 turns to high level when channle 1 detects some errors.</description>
            <name>CH1_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 2 turns to high level when the transmit process is done.</description>
            <name>CH2_TX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 2 turns to high level when the receive process is done.</description>
            <name>CH2_RX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 2 turns to high level when channle 2 detects some errors.</description>
            <name>CH2_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 3 turns to high level when the transmit process is done.</description>
            <name>CH3_TX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 3 turns to high level when the receive process is done.</description>
            <name>CH3_RX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 3 turns to high level when channle 3 detects some errors.</description>
            <name>CH3_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 4 turns to high level when the transmit process is done.</description>
            <name>CH4_TX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 4 turns to high level when the receive process is done.</description>
            <name>CH4_RX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 4 turns to high level when channle 4 detects some errors.</description>
            <name>CH4_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 5 turns to high level when the transmit process is done.</description>
            <name>CH5_TX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 5 turns to high level when the receive process is done.</description>
            <name>CH5_RX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 5 turns to high level when channle 5 detects some errors.</description>
            <name>CH5_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 6 turns to high level when the transmit process is done.</description>
            <name>CH6_TX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 6 turns to high level when the receive process is done.</description>
            <name>CH6_RX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 6 turns to high level when channle 6 detects some errors.</description>
            <name>CH6_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 7 turns to high level when the transmit process is done.</description>
            <name>CH7_TX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 7 turns to high level when the receive process is done.</description>
            <name>CH7_RX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 7 turns to high level when channle 7 detects some errors.</description>
            <name>CH7_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 0 turns to high level when transmitter in channle0  have send datas more than  reg_rmt_tx_lim_ch0  after detecting this interrupt  software can updata the old datas with new datas.</description>
            <name>CH0_TX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 1 turns to high level when transmitter in channle1  have send datas more than  reg_rmt_tx_lim_ch1  after detecting this interrupt  software can updata the old datas with new datas.</description>
            <name>CH1_TX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 2 turns to high level when transmitter in channle2  have send datas more than  reg_rmt_tx_lim_ch2  after detecting this interrupt  software can updata the old datas with new datas.</description>
            <name>CH2_TX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 3 turns to high level when transmitter in channle3  have send datas more than  reg_rmt_tx_lim_ch3  after detecting this interrupt  software can updata the old datas with new datas.</description>
            <name>CH3_TX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 4 turns to high level when transmitter in channle4  have send datas more than  reg_rmt_tx_lim_ch4  after detecting this interrupt  software can updata the old datas with new datas.</description>
            <name>CH4_TX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 5 turns to high level when transmitter in channle5  have send datas more than  reg_rmt_tx_lim_ch5  after detecting this interrupt  software can updata the old datas with new datas.</description>
            <name>CH5_TX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel 6 turns to high level when transmitter in channle6  have send datas more than  reg_rmt_tx_lim_ch6  after detecting this interrupt  software can updata the old datas with new datas.</description>
            <name>CH6_TX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for channel7 turns to high level when transmitter in channle 7  have send datas more than  reg_rmt_tx_lim_ch7  after detecting this interrupt  software can updata the old datas with new datas.</description>
            <name>CH7_TX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 0's mt_ch0_tx_end_int_raw when mt_ch0_tx_end_int_ena is set to 0.</description>
            <name>CH0_TX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 0's rmt_ch0_rx_end_int_raw when  rmt_ch0_rx_end_int_ena is set to 0.</description>
            <name>CH0_RX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 0's rmt_ch0_err_int_raw when  rmt_ch0_err_int_ena is set to 0.</description>
            <name>CH0_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 1's mt_ch1_tx_end_int_raw when mt_ch1_tx_end_int_ena is set to 1.</description>
            <name>CH1_TX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 1's rmt_ch1_rx_end_int_raw when  rmt_ch1_rx_end_int_ena is set to 1.</description>
            <name>CH1_RX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 1's rmt_ch1_err_int_raw when  rmt_ch1_err_int_ena is set to 1.</description>
            <name>CH1_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 2's mt_ch2_tx_end_int_raw when mt_ch2_tx_end_int_ena is set to 1.</description>
            <name>CH2_TX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 2's rmt_ch2_rx_end_int_raw when  rmt_ch2_rx_end_int_ena is set to 1.</description>
            <name>CH2_RX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 2's rmt_ch2_err_int_raw when  rmt_ch2_err_int_ena is set to 1.</description>
            <name>CH2_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 3's mt_ch3_tx_end_int_raw when mt_ch3_tx_end_int_ena is set to 1.</description>
            <name>CH3_TX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 3's rmt_ch3_rx_end_int_raw when  rmt_ch3_rx_end_int_ena is set to 1.</description>
            <name>CH3_RX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 3's rmt_ch3_err_int_raw when  rmt_ch3_err_int_ena is set to 1.</description>
            <name>CH3_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 4's mt_ch4_tx_end_int_raw when mt_ch4_tx_end_int_ena is set to 1.</description>
            <name>CH4_TX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 4's rmt_ch4_rx_end_int_raw when  rmt_ch4_rx_end_int_ena is set to 1.</description>
            <name>CH4_RX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 4's rmt_ch4_err_int_raw when  rmt_ch4_err_int_ena is set to 1.</description>
            <name>CH4_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 5's mt_ch5_tx_end_int_raw when mt_ch5_tx_end_int_ena is set to 1.</description>
            <name>CH5_TX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 5's rmt_ch5_rx_end_int_raw when  rmt_ch5_rx_end_int_ena is set to 1.</description>
            <name>CH5_RX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 5's rmt_ch5_err_int_raw when  rmt_ch5_err_int_ena is set to 1.</description>
            <name>CH5_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 6's mt_ch6_tx_end_int_raw when mt_ch6_tx_end_int_ena is set to 1.</description>
            <name>CH6_TX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 6's rmt_ch6_rx_end_int_raw when  rmt_ch6_rx_end_int_ena is set to 1.</description>
            <name>CH6_RX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 6's rmt_ch6_err_int_raw when  rmt_ch6_err_int_ena is set to 1.</description>
            <name>CH6_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 7's mt_ch7_tx_end_int_raw when mt_ch7_tx_end_int_ena is set to 1.</description>
            <name>CH7_TX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 7's rmt_ch7_rx_end_int_raw when  rmt_ch7_rx_end_int_ena is set to 1.</description>
            <name>CH7_RX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt  state bit for channel 7's rmt_ch7_err_int_raw when  rmt_ch7_err_int_ena is set to 1.</description>
            <name>CH7_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt state bit  for channel 0's rmt_ch0_tx_thr_event_int_raw when mt_ch0_tx_thr_event_int_ena is set to 1.</description>
            <name>CH0_TX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt state bit  for channel 1's rmt_ch1_tx_thr_event_int_raw when mt_ch1_tx_thr_event_int_ena is set to 1.</description>
            <name>CH1_TX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt state bit  for channel 2's rmt_ch2_tx_thr_event_int_raw when mt_ch2_tx_thr_event_int_ena is set to 1.</description>
            <name>CH2_TX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt state bit  for channel 3's rmt_ch3_tx_thr_event_int_raw when mt_ch3_tx_thr_event_int_ena is set to 1.</description>
            <name>CH3_TX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt state bit  for channel 4's rmt_ch4_tx_thr_event_int_raw when mt_ch4_tx_thr_event_int_ena is set to 1.</description>
            <name>CH4_TX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt state bit  for channel 5's rmt_ch5_tx_thr_event_int_raw when mt_ch5_tx_thr_event_int_ena is set to 1.</description>
            <name>CH5_TX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt state bit  for channel 6's rmt_ch6_tx_thr_event_int_raw when mt_ch6_tx_thr_event_int_ena is set to 1.</description>
            <name>CH6_TX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt state bit  for channel 7's rmt_ch7_tx_thr_event_int_raw when mt_ch7_tx_thr_event_int_ena is set to 1.</description>
            <name>CH7_TX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch0_tx_end_int_st.</description>
            <name>CH0_TX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch0_rx_end_int_st.</description>
            <name>CH0_RX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch0_err_int_st.</description>
            <name>CH0_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch1_tx_end_int_st.</description>
            <name>CH1_TX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch1_rx_end_int_st.</description>
            <name>CH1_RX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch1_err_int_st.</description>
            <name>CH1_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch2_tx_end_int_st.</description>
            <name>CH2_TX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch2_rx_end_int_st.</description>
            <name>CH2_RX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch2_err_int_st.</description>
            <name>CH2_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch3_tx_end_int_st.</description>
            <name>CH3_TX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch3_rx_end_int_st.</description>
            <name>CH3_RX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch3_err_int_st.</description>
            <name>CH3_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch4_tx_end_int_st.</description>
            <name>CH4_TX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch4_rx_end_int_st.</description>
            <name>CH4_RX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch4_err_int_st.</description>
            <name>CH4_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch5_tx_end_int_st.</description>
            <name>CH5_TX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch5_rx_end_int_st.</description>
            <name>CH5_RX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch5_err_int_st.</description>
            <name>CH5_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch6_tx_end_int_st.</description>
            <name>CH6_TX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch6_rx_end_int_st.</description>
            <name>CH6_RX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch6_err_int_st.</description>
            <name>CH6_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch7_tx_end_int_st.</description>
            <name>CH7_TX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch7_rx_end_int_st.</description>
            <name>CH7_RX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch7_err_int_st.</description>
            <name>CH7_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch0_tx_thr_event_int_st.</description>
            <name>CH0_TX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch1_tx_thr_event_int_st.</description>
            <name>CH1_TX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch2_tx_thr_event_int_st.</description>
            <name>CH2_TX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch3_tx_thr_event_int_st.</description>
            <name>CH3_TX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch4_tx_thr_event_int_st.</description>
            <name>CH4_TX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch5_tx_thr_event_int_st.</description>
            <name>CH5_TX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch6_tx_thr_event_int_st.</description>
            <name>CH6_TX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable rmt_ch7_tx_thr_event_int_st.</description>
            <name>CH7_TX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch0_rx_end_int_raw..</description>
            <name>CH0_TX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch0_tx_end_int_raw.</description>
            <name>CH0_RX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch0_err_int_raw.</description>
            <name>CH0_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch1_rx_end_int_raw..</description>
            <name>CH1_TX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch1_tx_end_int_raw.</description>
            <name>CH1_RX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch1_err_int_raw.</description>
            <name>CH1_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch2_rx_end_int_raw..</description>
            <name>CH2_TX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch2_tx_end_int_raw.</description>
            <name>CH2_RX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch2_err_int_raw.</description>
            <name>CH2_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch3_rx_end_int_raw..</description>
            <name>CH3_TX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch3_tx_end_int_raw.</description>
            <name>CH3_RX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch3_err_int_raw.</description>
            <name>CH3_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch4_rx_end_int_raw..</description>
            <name>CH4_TX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch4_tx_end_int_raw.</description>
            <name>CH4_RX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch4_err_int_raw.</description>
            <name>CH4_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch5_rx_end_int_raw..</description>
            <name>CH5_TX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch5_tx_end_int_raw.</description>
            <name>CH5_RX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch5_err_int_raw.</description>
            <name>CH5_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch6_rx_end_int_raw..</description>
            <name>CH6_TX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch6_tx_end_int_raw.</description>
            <name>CH6_RX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch6_err_int_raw.</description>
            <name>CH6_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch7_rx_end_int_raw..</description>
            <name>CH7_TX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rmt_ch7_tx_end_int_raw.</description>
            <name>CH7_RX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch7_err_int_raw.</description>
            <name>CH7_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch0_tx_thr_event_int_raw interrupt.</description>
            <name>CH0_TX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch1_tx_thr_event_int_raw interrupt.</description>
            <name>CH1_TX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch2_tx_thr_event_int_raw interrupt.</description>
            <name>CH2_TX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch3_tx_thr_event_int_raw interrupt.</description>
            <name>CH3_TX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch4_tx_thr_event_int_raw interrupt.</description>
            <name>CH4_TX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch5_tx_thr_event_int_raw interrupt.</description>
            <name>CH5_TX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch6_tx_thr_event_int_raw interrupt.</description>
            <name>CH6_TX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the  rmt_ch7_tx_thr_event_int_raw interrupt.</description>
            <name>CH7_TX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's low level value for channel0.</description>
            <name>CARRIER_LOW_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's high level value for channel0.</description>
            <name>CARRIER_HIGH_CH0</name>
          </field>
        </fields>
        <name>CH0CARRIER_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's low level value for channel1.</description>
            <name>CARRIER_LOW_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's high level value for channel1.</description>
            <name>CARRIER_HIGH_CH1</name>
          </field>
        </fields>
        <name>CH1CARRIER_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's low level value for channel2.</description>
            <name>CARRIER_LOW_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's high level value for channel2.</description>
            <name>CARRIER_HIGH_CH2</name>
          </field>
        </fields>
        <name>CH2CARRIER_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's low level value for channel3.</description>
            <name>CARRIER_LOW_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's high level value for channel3.</description>
            <name>CARRIER_HIGH_CH3</name>
          </field>
        </fields>
        <name>CH3CARRIER_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's low level value for channel4.</description>
            <name>CARRIER_LOW_CH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's high level value for channel4.</description>
            <name>CARRIER_HIGH_CH4</name>
          </field>
        </fields>
        <name>CH4CARRIER_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's low level value for channel5.</description>
            <name>CARRIER_LOW_CH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's high level value for channel5.</description>
            <name>CARRIER_HIGH_CH5</name>
          </field>
        </fields>
        <name>CH5CARRIER_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's low level value for channel6.</description>
            <name>CARRIER_LOW_CH6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's high level value for channel6.</description>
            <name>CARRIER_HIGH_CH6</name>
          </field>
        </fields>
        <name>CH6CARRIER_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's low level value for channel7.</description>
            <name>CARRIER_LOW_CH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure carrier wave's high level value for channel7.</description>
            <name>CARRIER_HIGH_CH7</name>
          </field>
        </fields>
        <name>CH7CARRIER_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When channel0 sends more than reg_rmt_tx_lim_ch0 datas then channel0 produce the relative interrupt.</description>
            <name>TX_LIM_CH0</name>
          </field>
        </fields>
        <name>CH0_TX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When channel1 sends more than reg_rmt_tx_lim_ch1 datas then channel1 produce the relative interrupt.</description>
            <name>TX_LIM_CH1</name>
          </field>
        </fields>
        <name>CH1_TX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When channel2 sends more than reg_rmt_tx_lim_ch2 datas then channel2 produce the relative interrupt.</description>
            <name>TX_LIM_CH2</name>
          </field>
        </fields>
        <name>CH2_TX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When channel3 sends more than reg_rmt_tx_lim_ch3 datas then channel3 produce the relative interrupt.</description>
            <name>TX_LIM_CH3</name>
          </field>
        </fields>
        <name>CH3_TX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When channel4 sends more than reg_rmt_tx_lim_ch4 datas then channel4 produce the relative interrupt.</description>
            <name>TX_LIM_CH4</name>
          </field>
        </fields>
        <name>CH4_TX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When channel5 sends more than reg_rmt_tx_lim_ch5 datas then channel5 produce the relative interrupt.</description>
            <name>TX_LIM_CH5</name>
          </field>
        </fields>
        <name>CH5_TX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When channel6 sends more than reg_rmt_tx_lim_ch6 datas then channel6 produce the relative interrupt.</description>
            <name>TX_LIM_CH6</name>
          </field>
        </fields>
        <name>CH6_TX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When channel7 sends more than reg_rmt_tx_lim_ch7 datas then channel7 produce the relative interrupt.</description>
            <name>TX_LIM_CH7</name>
          </field>
        </fields>
        <name>CH7_TX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable apb fifo access</description>
            <name>APB_FIFO_MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when datas need to be send is more than channel's mem can store  then set this bit to enable reusage of mem this bit is used together with reg_rmt_tx_lim_chn.</description>
            <name>MEM_TX_WRAP_EN</name>
          </field>
        </fields>
        <name>APB_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This is the version register.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x16022600</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x1C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF02000</baseAddress>
    <description>RSA (Rivest Shamir Adleman) Accelerator</description>
    <groupName>RSA</groupName>
    <interrupts>
      <interrupt>
        <name>RSA</name>
        <value>0x33</value>
      </interrupt>
    </interrupts>
    <name>RSA</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register contains M’.</description>
            <name>M_PRIME</name>
          </field>
        </fields>
        <name>M_PRIME</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register contains the mode of modular exponentiation.</description>
            <name>MODEXP_MODE</name>
          </field>
        </fields>
        <name>MODEXP_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to start modular exponentiation.</description>
            <name>MODEXP_START</name>
          </field>
        </fields>
        <name>MODEXP_START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register contains the mode of modular multiplication and multiplication.</description>
            <name>MULT_MODE</name>
          </field>
        </fields>
        <name>MULT_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to start modular multiplication or multiplication.</description>
            <name>MULT_START</name>
          </field>
        </fields>
        <name>MULT_START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RSA interrupt status register. Will read 1 once an operation has completed.</description>
            <name>INTERRUPT</name>
          </field>
        </fields>
        <name>INTERRUPT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit will read 1 once the memory initialization is completed.</description>
            <name>CLEAN</name>
          </field>
        </fields>
        <name>CLEAN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xDC</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF48000</baseAddress>
    <description>Real-Time Clock Control</description>
    <groupName>RTC_CNTL</groupName>
    <interrupts>
      <interrupt>
        <name>RTC_CORE</name>
        <value>0x2E</value>
      </interrupt>
    </interrupts>
    <name>RTC_CNTL</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>{reg_sw_stall_appcpu_c1[5:0]   reg_sw_stall_appcpu_c0[1:0]} == 0x86 will stall APP CPU</description>
            <name>SW_STALL_APPCPU_C0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>{reg_sw_stall_procpu_c1[5:0]   reg_sw_stall_procpu_c0[1:0]} == 0x86 will stall PRO CPU</description>
            <name>SW_STALL_PROCPU_C0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU SW reset</description>
            <name>SW_APPCPU_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU SW reset</description>
            <name>SW_PROCPU_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_I2C force power down</description>
            <name>BB_I2C_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_I2C force power up</description>
            <name>BB_I2C_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_PLL _I2C force power down</description>
            <name>BBPLL_I2C_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_PLL_I2C force power up</description>
            <name>BBPLL_I2C_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_PLL force power down</description>
            <name>BBPLL_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_PLL force power up</description>
            <name>BBPLL_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>crystall force power down</description>
            <name>XTL_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>crystall force power up</description>
            <name>XTL_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BIAS_SLEEP follow CK8M</description>
            <name>BIAS_SLEEP_FOLW_8M</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BIAS_SLEEP force sleep</description>
            <name>BIAS_FORCE_SLEEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BIAS_SLEEP force no sleep</description>
            <name>BIAS_FORCE_NOSLEEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BIAS_I2C follow CK8M</description>
            <name>BIAS_I2C_FOLW_8M</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BIAS_I2C force power down</description>
            <name>BIAS_I2C_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BIAS_I2C force power up</description>
            <name>BIAS_I2C_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BIAS_CORE follow CK8M</description>
            <name>BIAS_CORE_FOLW_8M</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BIAS_CORE force power down</description>
            <name>BIAS_CORE_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BIAS_CORE force power up</description>
            <name>BIAS_CORE_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>XTL_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PLL_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ANALOG_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>XTL_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PLL_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ANALOG_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital wrap force reset in deep sleep</description>
            <name>DG_WRAP_FORCE_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital core force no reset in deep sleep</description>
            <name>DG_WRAP_FORCE_NORST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SW system reset</description>
            <name>SW_SYS_RST</name>
          </field>
        </fields>
        <name>OPTIONS0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1C492000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>RTC sleep timer low 32 bits</description>
            <name>SLP_VAL_LO</name>
          </field>
        </fields>
        <name>SLP_TIMER0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>RTC sleep timer high 16 bits</description>
            <name>SLP_VAL_HI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timer alarm enable bit</description>
            <name>MAIN_TIMER_ALARM_EN</name>
          </field>
        </fields>
        <name>SLP_TIMER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>To indicate the register is updated</description>
            <name>TIME_VALID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set 1: to update register with RTC timer</description>
            <name>TIME_UPDATE</name>
          </field>
        </fields>
        <name>TIME_UPDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>RTC timer low 32 bits</description>
            <name>TIME_LO</name>
          </field>
        </fields>
        <name>TIME0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>RTC timer high 16 bits</description>
            <name>TIME_HI</name>
          </field>
        </fields>
        <name>TIME1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch controller force wake up</description>
            <name>TOUCH_WAKEUP_FORCE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ULP-coprocessor force wake up</description>
            <name>ULP_CP_WAKEUP_FORCE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: APB to RTC using bridge   0: APB to RTC using sync</description>
            <name>APB2RTC_BRIDGE_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch timer enable bit</description>
            <name>TOUCH_SLP_TIMER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ULP-coprocessor timer enable bit</description>
            <name>ULP_CP_SLP_TIMER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SDIO active indication</description>
            <name>SDIO_ACTIVE_IND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep wakeup bit</description>
            <name>SLP_WAKEUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep reject bit</description>
            <name>SLP_REJECT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep enable bit</description>
            <name>SLEEP_EN</name>
          </field>
        </fields>
        <name>STATE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x300000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CPU stall enable bit</description>
            <name>CPU_STALL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>CPU stall wait cycles in fast_clk_rtc</description>
            <name>CPU_STALL_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>CK8M wait cycles in slow_clk_rtc</description>
            <name>CK8M_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>XTAL wait cycles in slow_clk_rtc</description>
            <name>XTL_BUF_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>PLL wait cycles in slow_clk_rtc</description>
            <name>PLL_BUF_WAIT</name>
          </field>
        </fields>
        <name>TIMER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x28140403</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>wait cycles in slow_clk_rtc before ULP-coprocessor / touch controller start to work</description>
            <name>ULPCP_TOUCH_START_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>minimal cycles in slow_clk_rtc for CK8M in power down state</description>
            <name>MIN_TIME_CK8M_OFF</name>
          </field>
        </fields>
        <name>TIMER2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1080000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>WIFI_WAIT_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>WIFI_POWERUP_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>ROM_RAM_WAIT_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>ROM_RAM_POWERUP_TIMER</name>
          </field>
        </fields>
        <name>TIMER3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x14160A08</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>WAIT_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>POWERUP_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>DG_WRAP_WAIT_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>DG_WRAP_POWERUP_TIMER</name>
          </field>
        </fields>
        <name>TIMER4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10200A08</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>ULP_CP_SUBTIMER_PREDIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>minimal sleep cycles in slow_clk_rtc</description>
            <name>MIN_SLP_VAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>RTCMEM_WAIT_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x7</bitWidth>
            <name>RTCMEM_POWERUP_TIMER</name>
          </field>
        </fields>
        <name>TIMER5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x12148001</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PLLA force power down</description>
            <name>PLLA_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PLLA force power up</description>
            <name>PLLA_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start BBPLL calibration during sleep</description>
            <name>BBPLL_CAL_SLP_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: PVTMON power up   otherwise power down</description>
            <name>PVTMON_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: TXRF_I2C power up   otherwise power down</description>
            <name>TXRF_I2C_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: RFRX_PBUS power up   otherwise power down</description>
            <name>RFRX_PBUS_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: CKGEN_I2C power up   otherwise power down</description>
            <name>CKGEN_I2C_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: PLL_I2C power up   otherwise power down</description>
            <name>PLL_I2C_PU</name>
          </field>
        </fields>
        <name>ANA_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>reset cause of PRO CPU</description>
            <name>RESET_CAUSE_PROCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>reset cause of APP CPU</description>
            <name>RESET_CAUSE_APPCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU state vector sel</description>
            <name>APPCPU_STAT_VECTOR_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU state vector sel</description>
            <name>PROCPU_STAT_VECTOR_SEL</name>
          </field>
        </fields>
        <name>RESET_STATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>wakeup cause</description>
            <name>WAKEUP_CAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>wakeup enable bitmap</description>
            <name>WAKEUP_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable filter for gpio wakeup event</description>
            <name>GPIO_WAKEUP_FILTER</name>
          </field>
        </fields>
        <name>WAKEUP_STATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable sleep wakeup interrupt</description>
            <name>SLP_WAKEUP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable sleep reject interrupt</description>
            <name>SLP_REJECT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable SDIO idle interrupt</description>
            <name>SDIO_IDLE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable RTC WDT interrupt</description>
            <name>WDT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable RTC time valid interrupt</description>
            <name>TIME_VALID_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable ULP-coprocessor interrupt</description>
            <name>ULP_CP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable touch interrupt</description>
            <name>TOUCH_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable brown out interrupt</description>
            <name>BROWN_OUT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable RTC main timer interrupt</description>
            <name>MAIN_TIMER_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep wakeup interrupt raw</description>
            <name>SLP_WAKEUP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep reject interrupt raw</description>
            <name>SLP_REJECT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SDIO idle interrupt raw</description>
            <name>SDIO_IDLE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC WDT interrupt raw</description>
            <name>WDT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC time valid interrupt raw</description>
            <name>TIME_VALID_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ULP-coprocessor interrupt raw</description>
            <name>ULP_CP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch interrupt raw</description>
            <name>TOUCH_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>brown out interrupt raw</description>
            <name>BROWN_OUT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC main timer interrupt raw</description>
            <name>MAIN_TIMER_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep wakeup interrupt state</description>
            <name>SLP_WAKEUP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep reject interrupt state</description>
            <name>SLP_REJECT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SDIO idle interrupt state</description>
            <name>SDIO_IDLE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC WDT interrupt state</description>
            <name>WDT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC time valid interrupt state</description>
            <name>TIME_VALID_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ULP-coprocessor interrupt state</description>
            <name>SAR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch interrupt state</description>
            <name>TOUCH_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>brown out interrupt state</description>
            <name>BROWN_OUT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC main timer interrupt state</description>
            <name>MAIN_TIMER_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear sleep wakeup interrupt state</description>
            <name>SLP_WAKEUP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear sleep reject interrupt state</description>
            <name>SLP_REJECT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear SDIO idle interrupt state</description>
            <name>SDIO_IDLE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear RTC WDT interrupt state</description>
            <name>WDT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear RTC time valid interrupt state</description>
            <name>TIME_VALID_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear ULP-coprocessor interrupt state</description>
            <name>SAR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear touch interrupt state</description>
            <name>TOUCH_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear brown out interrupt state</description>
            <name>BROWN_OUT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear RTC main timer interrupt state</description>
            <name>MAIN_TIMER_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>32-bit general purpose retention register</description>
            <name>SCRATCH0</name>
          </field>
        </fields>
        <name>STORE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>32-bit general purpose retention register</description>
            <name>SCRATCH1</name>
          </field>
        </fields>
        <name>STORE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>32-bit general purpose retention register</description>
            <name>SCRATCH2</name>
          </field>
        </fields>
        <name>STORE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>32-bit general purpose retention register</description>
            <name>SCRATCH3</name>
          </field>
        </fields>
        <name>STORE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: power down XTAL at high level  1: power down XTAL at low level</description>
            <name>XTL_EXT_CTR_LV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable control XTAL by external pads</description>
            <name>XTL_EXT_CTR_EN</name>
          </field>
        </fields>
        <name>EXT_XTL_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: external wakeup at low level  1: external wakeup at high level</description>
            <name>EXT_WAKEUP0_LV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: external wakeup at low level  1: external wakeup at high level</description>
            <name>EXT_WAKEUP1_LV</name>
          </field>
        </fields>
        <name>EXT_WAKEUP_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable GPIO reject</description>
            <name>GPIO_REJECT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable SDIO reject</description>
            <name>SDIO_REJECT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable reject for light sleep</description>
            <name>LIGHT_SLP_REJECT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable reject for deep sleep</description>
            <name>DEEP_SLP_REJECT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>sleep reject cause</description>
            <name>REJECT_CAUSE</name>
          </field>
        </fields>
        <name>SLP_REJECT_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CPU sel option</description>
            <name>CPUSEL_CONF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>CPU period sel</description>
            <name>CPUPERIOD_SEL</name>
          </field>
        </fields>
        <name>CPU_PERIOD_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>SDIO_ACT_DNUM</name>
          </field>
        </fields>
        <name>SDIO_ACT_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>CK8M_D256_OUT divider. 00: div128  01: div256  10: div512  11: div1024.</description>
            <name>CK8M_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>disable CK8M and CK8M_D256_OUT</description>
            <name>ENB_CK8M</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: CK8M_D256_OUT is actually CK8M  0: CK8M_D256_OUT is CK8M divided by 256</description>
            <name>ENB_CK8M_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable CK_XTAL_32K for digital core (no relationship with RTC core)</description>
            <name>DIG_XTAL32K_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable CK8M_D256_OUT for digital core (no relationship with RTC core)</description>
            <name>DIG_CLK8M_D256_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable CK8M for digital core (no relationship with RTC core)</description>
            <name>DIG_CLK8M_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CK8M_DFREQ_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>divider = reg_ck8m_div_sel + 1</description>
            <name>CK8M_DIV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>XTAL force no gating during sleep</description>
            <name>XTAL_FORCE_NOGATING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CK8M force no gating during sleep</description>
            <name>CK8M_FORCE_NOGATING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>CK8M_DFREQ</description>
            <name>CK8M_DFREQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CK8M force power down</description>
            <name>CK8M_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CK8M force power up</description>
            <name>CK8M_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SOC clock sel. 0: XTAL  1: PLL  2: CK8M  3: APLL</description>
            <name>SOC_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>fast_clk_rtc sel. 0: XTAL div 4  1: CK8M</description>
            <name>FAST_CLK_RTC_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>slow_clk_rtc sel. 0: SLOW_CK  1: CK_XTAL_32K  2: CK8M_D256_OUT</description>
            <name>ANA_CLK_RTC_SEL</name>
          </field>
        </fields>
        <name>CLK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2210</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>power down SDIO_REG in sleep. Only active when reg_sdio_force = 0</description>
            <name>SDIO_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: use SW option to control SDIO_REG  0: use state machine</description>
            <name>SDIO_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SW option for SDIO_TIEH. Only active when reg_sdio_force = 1</description>
            <name>SDIO_TIEH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read only register for REG1P8_READY</description>
            <name>REG1P8_READY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SW option for DREFL_SDIO. Only active when reg_sdio_force = 1</description>
            <name>DREFL_SDIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SW option for DREFM_SDIO. Only active when reg_sdio_force = 1</description>
            <name>DREFM_SDIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SW option for DREFH_SDIO. Only active when reg_sdio_force = 1</description>
            <name>DREFH_SDIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SW option for XPD_SDIO_REG. Only active when reg_sdio_force = 1</description>
            <name>XPD_SDIO</name>
          </field>
        </fields>
        <name>SDIO_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2A00000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>DBG_ATTEN</description>
            <name>DBG_ATTEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ENB_SCK_XTAL</description>
            <name>ENB_SCK_XTAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>INC_HEARTBEAT_REFRESH</description>
            <name>INC_HEARTBEAT_REFRESH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>DEC_HEARTBEAT_PERIOD</description>
            <name>DEC_HEARTBEAT_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>INC_HEARTBEAT_PERIOD</description>
            <name>INC_HEARTBEAT_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>DEC_HEARTBEAT_WIDTH</description>
            <name>DEC_HEARTBEAT_WIDTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RST_BIAS_I2C</description>
            <name>RST_BIAS_I2C</name>
          </field>
        </fields>
        <name>BIAS_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>N/A</description>
            <name>SCK_DCAP_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>DIG_REG_DBIAS during sleep</description>
            <name>DIG_DBIAS_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>DIG_REG_DBIAS during wakeup</description>
            <name>DIG_DBIAS_WAK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SCK_DCAP</description>
            <name>SCK_DCAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>RTC_DBIAS during sleep</description>
            <name>DBIAS_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>RTC_DBIAS during wakeup</description>
            <name>DBIAS_WAK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC_DBOOST force power down</description>
            <name>DBOOST_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC_DBOOST force power up</description>
            <name>DBOOST_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC_REG force power down (for RTC_REG power down means decrease the voltage to 0.8v or lower )</description>
            <name>FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC_REG force power up</description>
            <name>FORCE_PU</name>
          </field>
        </fields>
        <name>REG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x29002400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Fast RTC memory force no ISO</description>
            <name>FASTMEM_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Fast RTC memory force ISO</description>
            <name>FASTMEM_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC memory force no ISO</description>
            <name>SLOWMEM_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC memory force ISO</description>
            <name>SLOWMEM_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc_peri force ISO</description>
            <name>FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc_peri force no ISO</description>
            <name>FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Fast RTC memory PD following CPU  0: fast RTC memory PD following RTC state machine</description>
            <name>FASTMEM_FOLW_CPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Fast RTC memory force PD</description>
            <name>FASTMEM_FORCE_LPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Fast RTC memory force no PD</description>
            <name>FASTMEM_FORCE_LPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: RTC memory  PD following CPU  0: RTC memory PD following RTC state machine</description>
            <name>SLOWMEM_FOLW_CPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC memory force PD</description>
            <name>SLOWMEM_FORCE_LPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC memory force no PD</description>
            <name>SLOWMEM_FORCE_LPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Fast RTC memory force power down</description>
            <name>FASTMEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Fast RTC memory force power up</description>
            <name>FASTMEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down fast RTC memory in sleep</description>
            <name>FASTMEM_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC memory force power down</description>
            <name>SLOWMEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC memory force power up</description>
            <name>SLOWMEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down RTC memory in sleep</description>
            <name>SLOWMEM_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc_peri force power down</description>
            <name>FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc_peri force power up</description>
            <name>FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down rtc_peri in sleep</description>
            <name>PD_EN</name>
          </field>
        </fields>
        <name>PWC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x12925</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>memories in digital core force PD in sleep</description>
            <name>LSLP_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>memories in digital core force no PD in sleep</description>
            <name>LSLP_MEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ROM force power down</description>
            <name>ROM0_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ROM force power up</description>
            <name>ROM0_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 0 force power down</description>
            <name>INTER_RAM0_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 0 force power up</description>
            <name>INTER_RAM0_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 1 force power down</description>
            <name>INTER_RAM1_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 1 force power up</description>
            <name>INTER_RAM1_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 2 force power down</description>
            <name>INTER_RAM2_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 2 force power up</description>
            <name>INTER_RAM2_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 3 force power down</description>
            <name>INTER_RAM3_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 3 force power up</description>
            <name>INTER_RAM3_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 4 force power down</description>
            <name>INTER_RAM4_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 4 force power up</description>
            <name>INTER_RAM4_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wifi force power down</description>
            <name>WIFI_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wifi force power up</description>
            <name>WIFI_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital core force power down</description>
            <name>DG_WRAP_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital core force power up</description>
            <name>DG_WRAP_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down ROM in sleep</description>
            <name>ROM0_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down internal SRAM 0 in sleep</description>
            <name>INTER_RAM0_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down internal SRAM 1 in sleep</description>
            <name>INTER_RAM1_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down internal SRAM 2 in sleep</description>
            <name>INTER_RAM2_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down internal SRAM 3 in sleep</description>
            <name>INTER_RAM3_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down internal SRAM 4 in sleep</description>
            <name>INTER_RAM4_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down wifi in sleep</description>
            <name>WIFI_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down digital core in sleep</description>
            <name>DG_WRAP_PD_EN</name>
          </field>
        </fields>
        <name>DIG_PWC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x155550</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FORCE_OFF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read only register to indicate digital pad auto-hold status</description>
            <name>DG_PAD_AUTOHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wtite only register to clear digital pad auto-hold</description>
            <name>CLR_DG_PAD_AUTOHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital pad enable auto-hold</description>
            <name>DG_PAD_AUTOHOLD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital pad force no ISO</description>
            <name>DG_PAD_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital pad force ISO</description>
            <name>DG_PAD_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital pad force un-hold</description>
            <name>DG_PAD_FORCE_UNHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital pad force hold</description>
            <name>DG_PAD_FORCE_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ROM force ISO</description>
            <name>ROM0_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ROM force no ISO</description>
            <name>ROM0_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 0 force ISO</description>
            <name>INTER_RAM0_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 0 force no ISO</description>
            <name>INTER_RAM0_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 1 force ISO</description>
            <name>INTER_RAM1_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 1 force no ISO</description>
            <name>INTER_RAM1_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 2 force ISO</description>
            <name>INTER_RAM2_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 2 force no ISO</description>
            <name>INTER_RAM2_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 3 force ISO</description>
            <name>INTER_RAM3_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 3 force no ISO</description>
            <name>INTER_RAM3_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 4 force ISO</description>
            <name>INTER_RAM4_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal SRAM 4 force no ISO</description>
            <name>INTER_RAM4_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wifi force ISO</description>
            <name>WIFI_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wifi force no ISO</description>
            <name>WIFI_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital core force ISO</description>
            <name>DG_WRAP_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital core force no ISO</description>
            <name>DG_WRAP_FORCE_NOISO</name>
          </field>
        </fields>
        <name>DIG_ISO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xAAAA5000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>pause WDT in sleep</description>
            <name>WDT_PAUSE_IN_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable WDT reset APP CPU</description>
            <name>WDT_APPCPU_RESET_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable WDT reset PRO CPU</description>
            <name>WDT_PROCPU_RESET_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable WDT in flash boot</description>
            <name>WDT_FLASHBOOT_MOD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>system reset counter length</description>
            <name>WDT_SYS_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>CPU reset counter length</description>
            <name>WDT_CPU_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>N/A</description>
            <name>WDT_LEVEL_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>N/A</description>
            <name>WDT_EDGE_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>1: interrupt stage en  2: CPU reset stage en  3: system reset stage en  4: RTC reset stage en</description>
            <name>WDT_STG3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>1: interrupt stage en  2: CPU reset stage en  3: system reset stage en  4: RTC reset stage en</description>
            <name>WDT_STG2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>1: interrupt stage en  2: CPU reset stage en  3: system reset stage en  4: RTC reset stage en</description>
            <name>WDT_STG1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>1: interrupt stage en  2: CPU reset stage en  3: system reset stage en  4: RTC reset stage en</description>
            <name>WDT_STG0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable RTC WDT</description>
            <name>WDT_EN</name>
          </field>
        </fields>
        <name>WDTCONFIG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4C80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>WDT_STG0_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1F400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>WDT_STG1_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x13880</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>WDT_STG2_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>WDT_STG3_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>WDT_FEED</name>
          </field>
        </fields>
        <name>WDTFEED</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>WDT_WKEY</name>
          </field>
        </fields>
        <name>WDTWPROTECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x50D83AA1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ENT_RTC</description>
            <name>ENT_RTC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>DTEST_RTC</description>
            <name>DTEST_RTC</name>
          </field>
        </fields>
        <name>TEST_MUX</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>{reg_sw_stall_appcpu_c1[5:0]   reg_sw_stall_appcpu_c0[1:0]} == 0x86 will stall APP CPU</description>
            <name>SW_STALL_APPCPU_C1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>{reg_sw_stall_procpu_c1[5:0]   reg_sw_stall_procpu_c0[1:0]} == 0x86 will stall PRO CPU</description>
            <name>SW_STALL_PROCPU_C1</name>
          </field>
        </fields>
        <name>SW_CPU_STALL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>32-bit general purpose retention register</description>
            <name>SCRATCH4</name>
          </field>
        </fields>
        <name>STORE4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>32-bit general purpose retention register</description>
            <name>SCRATCH5</name>
          </field>
        </fields>
        <name>STORE5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>32-bit general purpose retention register</description>
            <name>SCRATCH6</name>
          </field>
        </fields>
        <name>STORE6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>32-bit general purpose retention register</description>
            <name>SCRATCH7</name>
          </field>
        </fields>
        <name>STORE7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LOW_POWER_DIAG0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1 if RTC controller is ready to execute WAKE instruction, 0 otherwise </description>
            <name>RDY_FOR_WAKEUP</name>
          </field>
        </fields>
        <name>LOW_POWER_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LOW_POWER_DIAG1</name>
          </field>
        </fields>
        <name>DIAG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ADC1_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ADC2_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PDAC1_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>PDAC2_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SENSE1_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SENSE2_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SENSE3_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SENSE4_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TOUCH_PAD0_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TOUCH_PAD1_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TOUCH_PAD2_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TOUCH_PAD3_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TOUCH_PAD4_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TOUCH_PAD5_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TOUCH_PAD6_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TOUCH_PAD7_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>X32P_HOLD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>X32N_HOLD_FORCE</name>
          </field>
        </fields>
        <name>HOLD_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>Bitmap to select RTC pads for ext wakeup1</description>
            <name>SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear ext wakeup1 status</description>
            <name>STATUS_CLR</name>
          </field>
        </fields>
        <name>EXT_WAKEUP1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>ext wakeup1 status</description>
            <name>EXT_WAKEUP1_STATUS</name>
          </field>
        </fields>
        <name>EXT_WAKEUP1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>RTC_MEM_PID_CONF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RTC_MEM_CRC_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>RTC_MEM_CRC_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable close flash when brown out happens</description>
            <name>CLOSE_FLASH_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down RF when brown out happens</description>
            <name>PD_RF_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>brown out reset wait cycles</description>
            <name>RST_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>RTC_MEM_CRC_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable brown out reset</description>
            <name>RST_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>brown out threshold</description>
            <name>DBROWN_OUT_THRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable brown out</description>
            <name>ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>brown out detect</description>
            <name>DET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RTC_MEM_CRC_FINISH</name>
          </field>
        </fields>
        <name>BROWN_OUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x13FF0000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <name>CNTL_DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1604280</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xCC</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF48400</baseAddress>
    <description>Peripheral RTCIO</description>
    <groupName>RTC_GPIO</groupName>
    <interrupts></interrupts>
    <name>RTCIO</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>GPIO0~17 output value</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>OUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>GPIO0~17 output value write 1 to set</description>
            <name>OUT_DATA_W1TS</name>
          </field>
        </fields>
        <name>OUT_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>GPIO0~17 output value write 1 to clear</description>
            <name>OUT_DATA_W1TC</name>
          </field>
        </fields>
        <name>OUT_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>GPIO0~17 output enable</description>
            <name>ENABLE</name>
          </field>
        </fields>
        <name>ENABLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>GPIO0~17 output enable write 1 to set</description>
            <name>ENABLE_W1TS</name>
          </field>
        </fields>
        <name>ENABLE_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>GPIO0~17 output enable write 1 to clear</description>
            <name>ENABLE_W1TC</name>
          </field>
        </fields>
        <name>ENABLE_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>GPIO0~17 interrupt status</description>
            <name>INT</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>GPIO0~17 interrupt status write 1 to set</description>
            <name>STATUS_INT_W1TS</name>
          </field>
        </fields>
        <name>STATUS_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>GPIO0~17 interrupt status write 1 to clear</description>
            <name>STATUS_INT_W1TC</name>
          </field>
        </fields>
        <name>STATUS_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>GPIO0~17 input value</description>
            <name>NEXT</name>
          </field>
        </fields>
        <name>IN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>DEBUG_SEL0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>DEBUG_SEL1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>DEBUG_SEL2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>DEBUG_SEL3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>DEBUG_SEL4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DEBUG_12M_NO_GATING</name>
          </field>
        </fields>
        <name>RTC_DEBUG_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>select the digital pad hold value.</description>
            <name>DIG_PAD_HOLD</name>
          </field>
        </fields>
        <name>DIG_PAD_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reverse phase of hall sensor</description>
            <name>HALL_PHASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Power on hall sensor and connect to VP and VN</description>
            <name>XPD_HALL</name>
          </field>
        </fields>
        <name>HALL_SENS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>SENSE4_FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SENSE4_SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SENSE4_SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>SENSE4_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>SENSE3_FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SENSE3_SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SENSE3_SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>SENSE3_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>SENSE2_FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SENSE2_SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SENSE2_SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>SENSE2_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>SENSE1_FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SENSE1_SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SENSE1_SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>SENSE1_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>SENSE4_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>SENSE3_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>SENSE2_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>SENSE1_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>SENSE4_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>SENSE3_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>SENSE2_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>SENSE1_HOLD</name>
          </field>
        </fields>
        <name>SENSOR_PADS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>ADC2_FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>ADC2_SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>ADC2_SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>ADC2_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>ADC1_FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>ADC1_SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>ADC1_SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>ADC1_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>ADC2_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>ADC1_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>ADC2_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>ADC1_HOLD</name>
          </field>
        </fields>
        <name>ADC_PAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Power on DAC1. Usually  we need to tristate PDAC1 if we power on the DAC  i.e. IE=0  OE=0  RDE=0  RUE=0</description>
            <name>PDAC1_DAC_XPD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>PDAC1_FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>PDAC1_SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>PDAC1_SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>PDAC1_SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>PDAC1_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>PDAC1_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Power on DAC1. Usually  we need to tristate PDAC1 if we power on the DAC  i.e. IE=0  OE=0  RDE=0  RUE=0</description>
            <name>PDAC1_XPD_DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>PAD DAC1 control code.</description>
            <name>PDAC1_DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>PDAC1_RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>PDAC1_RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>PDAC1_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>PDAC1_DRV</name>
          </field>
        </fields>
        <name>PAD_DAC1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Power on DAC2. Usually  we need to tristate PDAC2 if we power on the DAC  i.e. IE=0  OE=0  RDE=0  RUE=0</description>
            <name>PDAC2_DAC_XPD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>PDAC2_FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>PDAC2_SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>PDAC2_SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>PDAC2_SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>PDAC2_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>PDAC2_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Power on DAC2. Usually  we need to tristate PDAC1 if we power on the DAC  i.e. IE=0  OE=0  RDE=0  RUE=0</description>
            <name>PDAC2_XPD_DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>PAD DAC2 control code.</description>
            <name>PDAC2_DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>PDAC2_RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>PDAC2_RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>PDAC2_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>PDAC2_DRV</name>
          </field>
        </fields>
        <name>PAD_DAC2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>32K XTAL self-bias reference control.</description>
            <name>DBIAS_XTAL_32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>32K XTAL resistor bias control.</description>
            <name>DRES_XTAL_32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>X32P_FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>X32P_SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>X32P_SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>X32P_SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>X32P_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>X32N_FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>X32N_SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>X32N_SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>X32N_SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>X32N_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>X32P_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>X32N_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Power up 32kHz crystal oscillator</description>
            <name>XPD_XTAL_32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>32K XTAL bias current DAC.</description>
            <name>DAC_XTAL_32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>X32P_RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>X32P_RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>X32P_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>X32P_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>X32N_RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>X32N_RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>X32N_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>X32N_DRV</name>
          </field>
        </fields>
        <name>XTAL_32K_PAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x84100010</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>touch sensor bias current. Should have option to tie with BIAS_SLEEP(When BIAS_SLEEP  this setting is available</description>
            <name>TOUCH_DCUR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>touch sensor saw wave voltage range.</description>
            <name>TOUCH_DRANGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>touch sensor saw wave bottom voltage.</description>
            <name>TOUCH_DREFL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>touch sensor saw wave top voltage.</description>
            <name>TOUCH_DREFH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor bias power on.</description>
            <name>TOUCH_XPD_BIAS</name>
          </field>
        </fields>
        <name>TOUCH_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x66000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>connect the rtc pad input to digital pad input Ó0Ó is availbale GPIO4</description>
            <name>TO_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor power on.</description>
            <name>XPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>default touch sensor tie option. 0: tie low  1: tie high.</description>
            <name>TIE_OPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start touch sensor.</description>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>touch sensor slope control. 3-bit for each touch panel  default 100.</description>
            <name>DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>HOLD</name>
          </field>
        </fields>
        <name>TOUCH_PAD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x52000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>connect the rtc pad input to digital pad input Ó0Ó is availbale.GPIO0</description>
            <name>TO_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor power on.</description>
            <name>XPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>default touch sensor tie option. 0: tie low  1: tie high.</description>
            <name>TIE_OPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start touch sensor.</description>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>touch sensor slope control. 3-bit for each touch panel  default 100.</description>
            <name>DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOLD</name>
          </field>
        </fields>
        <name>TOUCH_PAD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4A000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>connect the rtc pad input to digital pad input Ó0Ó is availbale.GPIO2</description>
            <name>TO_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor power on.</description>
            <name>XPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>default touch sensor tie option. 0: tie low  1: tie high.</description>
            <name>TIE_OPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start touch sensor.</description>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>touch sensor slope control. 3-bit for each touch panel  default 100.</description>
            <name>DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>HOLD</name>
          </field>
        </fields>
        <name>TOUCH_PAD2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x52000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>connect the rtc pad input to digital pad input Ó0Ó is availbale.MTDO</description>
            <name>TO_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor power on.</description>
            <name>XPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>default touch sensor tie option. 0: tie low  1: tie high.</description>
            <name>TIE_OPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start touch sensor.</description>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>touch sensor slope control. 3-bit for each touch panel  default 100.</description>
            <name>DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>HOLD</name>
          </field>
        </fields>
        <name>TOUCH_PAD3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4A000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>connect the rtc pad input to digital pad input Ó0Ó is availbale.MTCK</description>
            <name>TO_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor power on.</description>
            <name>XPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>default touch sensor tie option. 0: tie low  1: tie high.</description>
            <name>TIE_OPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start touch sensor.</description>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>touch sensor slope control. 3-bit for each touch panel  default 100.</description>
            <name>DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>HOLD</name>
          </field>
        </fields>
        <name>TOUCH_PAD4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x52000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>connect the rtc pad input to digital pad input Ó0Ó is availbale.MTDI</description>
            <name>TO_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor power on.</description>
            <name>XPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>default touch sensor tie option. 0: tie low  1: tie high.</description>
            <name>TIE_OPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start touch sensor.</description>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>touch sensor slope control. 3-bit for each touch panel  default 100.</description>
            <name>DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>HOLD</name>
          </field>
        </fields>
        <name>TOUCH_PAD5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x52000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>connect the rtc pad input to digital pad input Ó0Ó is availbale.MTMS</description>
            <name>TO_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor power on.</description>
            <name>XPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>default touch sensor tie option. 0: tie low  1: tie high.</description>
            <name>TIE_OPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start touch sensor.</description>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>touch sensor slope control. 3-bit for each touch panel  default 100.</description>
            <name>DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>HOLD</name>
          </field>
        </fields>
        <name>TOUCH_PAD6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4A000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>connect the rtc pad input to digital pad input Ó0Ó is availbale.GPIO27</description>
            <name>TO_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output enable of the pad in sleep status</description>
            <name>SLP_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the input enable of the pad in sleep status</description>
            <name>SLP_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the sleep status selection signal of the pad</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the functional selection signal of the pad</description>
            <name>FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ò1Ó select the digital function  Ó0Óslection the rtc function</description>
            <name>MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor power on.</description>
            <name>XPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>default touch sensor tie option. 0: tie low  1: tie high.</description>
            <name>TIE_OPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start touch sensor.</description>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>touch sensor slope control. 3-bit for each touch panel  default 100.</description>
            <name>DAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull up enable of the pad</description>
            <name>RUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the pull down enable of the pad</description>
            <name>RDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the driver strength of the pad</description>
            <name>DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>hold the current value of the output when setting the hold to Ò1Ó</description>
            <name>HOLD</name>
          </field>
        </fields>
        <name>TOUCH_PAD7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x42000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>connect the rtc pad input to digital pad input Ó0Ó is availbale</description>
            <name>TO_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor power on.</description>
            <name>XPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>default touch sensor tie option. 0: tie low  1: tie high.</description>
            <name>TIE_OPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start touch sensor.</description>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>touch sensor slope control. 3-bit for each touch panel  default 100.</description>
            <name>DAC</name>
          </field>
        </fields>
        <name>TOUCH_PAD8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>connect the rtc pad input to digital pad input Ó0Ó is availbale</description>
            <name>TO_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch sensor power on.</description>
            <name>XPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>default touch sensor tie option. 0: tie low  1: tie high.</description>
            <name>TIE_OPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start touch sensor.</description>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>touch sensor slope control. 3-bit for each touch panel  default 100.</description>
            <name>DAC</name>
          </field>
        </fields>
        <name>TOUCH_PAD9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>select the wakeup source Ó0Ó select GPIO0 Ó1Ó select GPIO2 ...Ò17Ó select GPIO17</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>EXT_WAKEUP0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>select the external xtl power source Ó0Ó select GPIO0 Ó1Ó select GPIO2 ...Ò17Ó select GPIO17</description>
            <name>SEL</name>
          </field>
        </fields>
        <name>XTL_EXT_CTR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>SAR_DEBUG_BIT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Ò0Ó using TOUCH_PAD[0] as i2c clk Ò1Ó using TOUCH_PAD[2] as i2c clk</description>
            <name>SAR_I2C_SCL_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Ò0Ó using TOUCH_PAD[1] as i2c sda Ò1Ó using TOUCH_PAD[3] as i2c sda</description>
            <name>SAR_I2C_SDA_SEL</name>
          </field>
        </fields>
        <name>SAR_I2C_IO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>date</description>
            <name>IO_DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1603160</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN3</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN4</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN5</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN6</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN7</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN8</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN9</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN10</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN11</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN12</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN13</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN14</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN15</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN16</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>if set to : normal output  if set to 1: open drain</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>if set to : GPIO interrupt disable  if set to 1: rising edge trigger  if set to 2: falling edge trigger  if set to 3: any edge trigger  if set to 4: low level trigger  if set to 5: high level trigger</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO wake up enable  only available in light sleep</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>PIN17</name>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x3C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF48C00</baseAddress>
    <description>Peripheral RTC_I2C</description>
    <groupName>RTC_I2C</groupName>
    <interrupts></interrupts>
    <name>RTC_I2C</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>number of cycles that scl == 0 </description>
            <name>SCL_LOW_PERIOD</name>
          </field>
        </fields>
        <name>SCL_LOW_PERIOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SDA is push-pull (1) or open-drain (0) </description>
            <name>SDA_FORCE_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SCL is push-pull (1) or open-drain (0) </description>
            <name>SCL_FORCE_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Master (1) or slave (0) </description>
            <name>MS_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Force to generate start condition </description>
            <name>TRANS_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Send LSB first </description>
            <name>TX_LSB_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receive LSB first </description>
            <name>RX_LSB_FIRST</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The value of an acknowledge signal on the bus </description>
            <name>ACK_VAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When working as a slave, the value of R/W bit received </description>
            <name>SLAVE_RW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transfer has timed out </description>
            <name>TIMED_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When working as a master, lost control of I2C bus </description>
            <name>ARB_LOST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>operation is in progress </description>
            <name>BUS_BUSY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When working as a slave, whether address was matched </description>
            <name>SLAVE_ADDR_MATCH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>8 bit transmit done </description>
            <name>BYTE_TRANS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>state of the main state machine </description>
            <name>MAIN_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>state of SCL state machine </description>
            <name>SCL_STATE</name>
          </field>
        </fields>
        <name>DEBUG_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>Maximum number of FAST_CLK cycles that the transmission can take </description>
            <name>TIMEOUT</name>
          </field>
        </fields>
        <name>TIMEOUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xF</bitWidth>
            <description>local slave address </description>
            <name>SLAVE_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set if local slave address is 10-bit </description>
            <name>_10BIT</name>
          </field>
        </fields>
        <name>SLAVE_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields></fields>
        <name>DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Slave accepted 1 byte and address matched </description>
            <name>SLAVE_TRANS_COMPLETE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Master lost arbitration </description>
            <name>ARBITRATION_LOST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>MASTER_TRANS_COMPLETE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop condition has been detected interrupt raw status </description>
            <name>TRANS_COMPLETE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>time out interrupt raw status </description>
            <name>TIME_OUT_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLAVE_TRANS_COMPLETE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ARBITRATION_LOST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>MASTER_TRANS_COMPLETE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TRANS_COMPLETE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TIME_OUT_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields></fields>
        <name>INT_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields></fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>Number of FAST_CLK cycles SDA will switch after falling edge of SCL </description>
            <name>SDA_DUTY</name>
          </field>
        </fields>
        <name>SDA_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>Number of FAST_CLK cycles for SCL to be high </description>
            <name>SCL_HIGH_PERIOD</name>
          </field>
        </fields>
        <name>SCL_HIGH_PERIOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>Number of FAST_CLK cycles to wait before generating start condition </description>
            <name>SCL_START_PERIOD</name>
          </field>
        </fields>
        <name>SCL_START_PERIOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>Number of FAST_CLK cycles to wait before generating stop condition </description>
            <name>SCL_STOP_PERIOD</name>
          </field>
        </fields>
        <name>SCL_STOP_PERIOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>Command content </description>
            <name>VAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Bit is set by HW when command is done </description>
            <name>DONE</name>
          </field>
        </fields>
        <name>CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xA4</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF68000</baseAddress>
    <description>SD/MMC Host Controller</description>
    <groupName>SDHOST</groupName>
    <interrupts></interrupts>
    <name>SDMMC</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>Control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>To reset controller, firmware should set this bit. This bit is auto-cleared after two AHB and two sdhost_cclk_in clock cycles.</description>
            <name>CONTROLLER_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>To reset FIFO, firmware should set bit to 1. This bit is auto-cleared after completion of reset operation.
            Note: FIFO pointers will be out of reset after 2 cycles of system clocks in addition to synchronization delay (2 cycles of card clock), after the fifo_reset is cleared.</description>
            <name>FIFO_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>To reset DMA interface, firmware should set bit to 1. This bit is auto-cleared after two AHB clocks.</description>
            <name>DMA_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Global interrupt enable/disable bit. 0: Disable; 1: Enable.</description>
            <name>INT_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For sending read-wait to SDIO cards.</description>
            <name>READ_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Bit automatically clears once response is sent. To wait for MMC card interrupts, host issues CMD40 and waits for interrupt response from MMC card(s). In the meantime, if host wants SD/MMC to exit waiting for interrupt state, it can set this bit, at which time SD/MMC command state-machine sends CMD40 response on bus and returns to idle state.</description>
            <name>SEND_IRQ_RESPONSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>After a suspend-command is issued during a read-operation, software polls the card to find when the suspend-event occurred. Once the suspend-event has occurred, software sets the bit which will reset the data state machine that is waiting for the next block of data. This bit is automatically cleared once the data state machine is reset to idle.</description>
            <name>ABORT_READ_DATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set, SD/MMC sends CCSD to the CE-ATA device. Software sets this bit only if the current command is expecting CCS (that is, RW_BLK), and if interrupts are enabled for the CE-ATA device. Once the CCSD pattern is sent to the device, SD/MMC automatically clears the SDHOST_SEND_CCSD bit. It also sets the Command Done (CD) bit  in the SDHOST_RINTSTS_REG register, and generates an interrupt for the host, in case the Command Done interrupt is not masked. 
            NOTE: Once the SDHOST_SEND_CCSD bit is set, it takes two card clock cycles to drive the CCSD on the CMD line. Due to this, within the boundary conditions the CCSD may be sent to the CE-ATA device, even if the device has signalled CCS.</description>
            <name>SEND_CCSD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Always Set SDHOST_SEND_AUTO_STOP_CCSD and SDHOST_SEND_CCSD bits together; SDHOST_SEND_AUTO_STOP_CCSD should not be set independently of send_ccsd. When set, SD/MMC automatically sends an internally-generated STOP command (CMD12) to the CE-ATA device. After sending this internally-generated STOP command, the Auto Command Done (ACD) bit in SDHOST_RINTSTS_REG is set and an interrupt is generated for the host, in case the ACD interrupt is not masked. After sending the Command Completion Signal Disable (CCSD), SD/MMC automatically clears the  SDHOST_SEND_AUTO_STOP_CCSD bit.</description>
            <name>SEND_AUTO_STOP_CCSD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software should appropriately write to this bit after the power-on reset or any other reset to the CE-ATA device. After reset, the CE-ATA device's interrupt is usually disabled (nIEN = 1). If the host enables the CE-ATA device's interrupt, then software should set this bit.</description>
            <name>CEATA_DEVICE_INTERRUPT_STATUS</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>Clock divider configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Clock divider0 value. Clock divisor is 2*n, where n = 0 bypasses the divider (divisor of 1). For example, a value of 1 means divided by 2*1 = 2, a value of 0xFF means divided by 2*255 = 510, and so on.</description>
            <name>CLK_DIVIDER0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Clock divider1 value. Clock divisor is 2*n, where n = 0 bypasses the divider (divisor of 1). For example, a value of 1 means divided by 2*1 = 2, a value of 0xFF means divided by 2*255 = 510, and so on.</description>
            <name>CLK_DIVIDER1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Clock divider2 value. Clock divisor is 2*n, where n = 0 bypasses the divider (divisor of 1). For example, a value of 1 means divided by 2*1 = 2, a value of 0xFF means divided by 2*255 = 510, and so on.</description>
            <name>CLK_DIVIDER2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Clock divider3 value. Clock divisor is 2*n, where n = 0 bypasses the divider (divisor of 1). For example, a value of 1 means divided by 2*1 = 2, a value of 0xFF means divided by 2*255 = 510, and so on.</description>
            <name>CLK_DIVIDER3</name>
          </field>
        </fields>
        <name>CLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>Clock source selection register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Clock divider source for two SD cards is supported. Each card has two bits assigned to it. For example, bit[1:0] are assigned for card 0, bit[3:2] are assigned for card 1. Card 0 maps and internally routes clock divider[0:3] outputs to cclk_out[1:0] pins, depending on bit value.
            00 : Clock divider 0;
            01 : Clock divider 1;
            10 : Clock divider 2;
            11 : Clock divider 3.</description>
            <name>CLKSRC</name>
          </field>
        </fields>
        <name>CLKSRC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>Clock enable register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Clock-enable control for two SD card clocks and one MMC card clock is supported. One bit per card.
            0: Clock disabled;
            1: Clock enabled.</description>
            <name>CCLK_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Disable clock when the card is in IDLE state. One bit per card.
            0: clock disabled;
            1: clock enabled.</description>
            <name>LP_ENABLE</name>
          </field>
        </fields>
        <name>CLKENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>Data and response timeout configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Response timeout value. Value is specified in terms of number of card output clocks, i.e., sdhost_cclk_out.</description>
            <name>RESPONSE_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>Value for card data read timeout. This value is also used for data starvation by host timeout. The timeout counter is started only after the card clock is stopped. This value is specified in number of card output clocks, i.e. sdhost_cclk_out of the selected card.
            NOTE: The software timer should be used if the timeout value is in the order of 100 ms. In this case, read data timeout interrupt needs to be disabled.</description>
            <name>DATA_TIMEOUT</name>
          </field>
        </fields>
        <name>TMOUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFF40</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>Card bus width configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>One bit per card indicates if card is 1-bit or 4-bit mode.
            0: 1-bit mode;
            1: 4-bit mode.
            Bit[1:0] correspond to card[1:0] respectively.</description>
            <name>CARD_WIDTH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>One bit per card indicates if card is in 8-bit mode.
            0: Non 8-bit mode;
            1: 8-bit mode.
            Bit[17:16] correspond to card[1:0] respectively.</description>
            <name>CARD_WIDTH8</name>
          </field>
        </fields>
        <name>CTYPE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>Card data block size configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Block size.</description>
            <name>BLOCK_SIZE</name>
          </field>
        </fields>
        <name>BLKSIZ</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>Data transfer length configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Number of bytes to be transferred, should be an integral multiple of Block Size for block transfers. For data transfers of undefined byte lengths, byte count should be set to 0. When byte count is set to 0, it is the responsibility of host to explicitly send stop/abort command to terminate data transfer.</description>
            <name>BYTE_COUNT</name>
          </field>
        </fields>
        <name>BYTCNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>SDIO interrupt mask register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>These bits used to mask unwanted interrupts. A value of 0 masks interrupt, and a value of 1 enables the interrupt.
            Bit 15 (EBE): End-bit error/no CRC error;
            Bit 14 (ACD): Auto command done;
            Bit 13 (SBE/BCI): Rx Start Bit Error;
            Bit 12 (HLE): Hardware locked write error;
            Bit 11 (FRUN): FIFO underrun/overrun error;
            Bit 10 (HTO): Data starvation-by-host timeout;
            Bit 9 (DRTO): Data read timeout;
            Bit 8 (RTO): Response timeout; 
            Bit 7 (DCRC): Data CRC error; 
            Bit 6 (RCRC): Response CRC error; 
            Bit 5 (RXDR): Receive FIFO data request; 
            Bit 4 (TXDR): Transmit FIFO data request; 
            Bit 3 (DTO): Data transfer over; 
            Bit 2 (CD): Command done; 
            Bit 1 (RE): Response error;
            Bit 0 (CD): Card detect.</description>
            <name>INT_MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SDIO interrupt mask, one bit for each card. Bit[17:16] correspond to card[15:0] respectively. When masked, SDIO interrupt detection for that card is disabled. 0 masks an interrupt, and 1 enables an interrupt.</description>
            <name>SDIO_INT_MASK</name>
          </field>
        </fields>
        <name>INTMASK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>Command argument data register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Value indicates command argument to be passed to the card.</description>
            <name>CMDARG</name>
          </field>
        </fields>
        <name>CMDARG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>Command and boot configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Command index.</description>
            <name>INDEX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: No response expected from card; 1: Response expected from card.</description>
            <name>RESPONSE_EXPECT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Short response expected from card; 1: Long response expected from card.</description>
            <name>RESPONSE_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Do not check; 1: Check response CRC.
            Some of command responses do not return valid CRC bits. Software should disable CRC checks for those commands in order to disable CRC checking by controller.</description>
            <name>CHECK_RESPONSE_CRC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: No data transfer expected; 1: Data transfer expected.</description>
            <name>DATA_EXPECTED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Read from card; 1: Write to card.
            Don't care if no data is expected from card.</description>
            <name>READ_WRITE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Block data transfer command; 1: Stream data transfer command.
            Don't care if no data expected.</description>
            <name>TRANSFER_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: No stop command is sent at the end of data transfer; 1: Send stop command at the end of data transfer.</description>
            <name>SEND_AUTO_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Send command at once, even if previous data transfer has not completed; 1: Wait for previous data transfer to complete before sending Command.
            The SDHOST_WAIT_PRVDATA_COMPLETE] = 0 option is typically used to query status of card during data transfer or to stop current data transfer. SDHOST_CARD_NUMBERr should be same as in previous command.</description>
            <name>WAIT_PRVDATA_COMPLETE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Neither stop nor abort command can stop current data transfer. If abort is sent to function-number currently selected or not in data-transfer mode, then bit should be set to 0; 1: Stop or abort command intended to stop current data transfer in progress.
            When open-ended or predefined data transfer is in progress, and host issues stop or abort command to stop data transfer, bit should be set so that command/data state-machines of CIU can return correctly to idle state.</description>
            <name>STOP_ABORT_CMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Do not send initialization sequence (80 clocks of 1) before sending this command; 1: Send initialization sequence before sending this command.
            After powered on, 80 clocks must be sent to card for initialization before sending any commands to card. Bit should be set while sending first command to card so that controller will initialize clocks before sending command to card.</description>
            <name>SEND_INITIALIZATION</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Card number in use. Represents physical slot number of card being accessed. In SD-only mode, up to two cards are supported.</description>
            <name>CARD_NUMBER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Normal command sequence; 1: Do not send commands, just update clock register value into card clock domain.
            Following register values are transferred into card clock domain: CLKDIV, CLRSRC, and CLKENA.
            Changes card clocks (change frequency, truncate off or on, and set low-frequency mode). This is provided in order to change clock frequency or stop clock without having to send command to cards. During normal command sequence, when sdhost_update_clock_registers_only = 0, following control registers are transferred from BIU to CIU: CMD, CMDARG, TMOUT, CTYPE, BLKSIZ, and BYTCNT. CIU uses new register values for new command sequence to card(s). When bit is set, there are no Command Done interrupts because no command is sent to SD_MMC_CEATA cards.</description>
            <name>UPDATE_CLOCK_REGISTERS_ONLY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read access flag.
            0: Host is not performing read access (RW_REG or RW_BLK)towards CE-ATA device;
            1: Host is performing read access (RW_REG or RW_BLK) towards CE-ATA device.
            Software should set this bit to indicate that CE-ATA device is being accessed for read transfer. This bit is used to disable read data timeout indication while performing CE-ATA read transfers. Maximum value of I/O transmission delay can be no less than 10 seconds. SD/MMC should not indicate read data timeout while waiting for data from CE-ATA device.</description>
            <name>READ_CEATA_DEVICE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Expected Command Completion Signal (CCS) configuration.
            0: Interrupts are not enabled in CE-ATA device (nIEN = 1 in ATA control register), or command does not expect CCS from device;
            1: Interrupts are enabled in CE-ATA device (nIEN = 0), and RW_BLK command expects command completion signal from CE-ATA device. 
            If the command expects Command Completion Signal (CCS) from the CE-ATA device, the software should set this control bit. SD/MMC sets Data Transfer Over (DTO) bit in RINTSTS register and generates interrupt to host if Data Transfer Over interrupt is not masked.</description>
            <name>CCS_EXPECTED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Use Hold Register.
            0: CMD and DATA sent to card bypassing HOLD Register;
            1: CMD and DATA sent to card through the HOLD Register.</description>
            <name>USE_HOLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start command. Once command is served by the CIU, this bit is automatically cleared. When this bit is set, host should not attempt to write to any command registers. If a write is attempted, hardware lock error is set in raw interrupt register. Once command is sent and a response is received from SD_MMC_CEATA cards, Command Done bit is set in the raw interrupt Register.</description>
            <name>START_CMD</name>
          </field>
        </fields>
        <name>CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>Response data register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Bit[31:0] of response.</description>
            <name>RESPONSE0</name>
          </field>
        </fields>
        <name>RESP0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>Long response data register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Bit[63:32] of long response.</description>
            <name>RESPONSE1</name>
          </field>
        </fields>
        <name>RESP1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>Long response data register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Bit[95:64] of long response.</description>
            <name>RESPONSE2</name>
          </field>
        </fields>
        <name>RESP2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>Long response data register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Bit[127:96] of long response.</description>
            <name>RESPONSE3</name>
          </field>
        </fields>
        <name>RESP3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>Masked interrupt status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Interrupt enabled only if corresponding bit in interrupt mask register is set.
            Bit 15 (EBE): End-bit error/no CRC error;
            Bit 14 (ACD): Auto command done;
            Bit 13 (SBE/BCI): RX Start Bit Error;
            Bit 12 (HLE): Hardware locked write error; 
            Bit 11 (FRUN): FIFO underrun/overrun error;
            Bit 10 (HTO): Data starvation by host timeout (HTO);
            Bit 9 (DTRO): Data read timeout; 
            Bit 8 (RTO): Response timeout; 
            Bit 7 (DCRC): Data CRC error; 
            Bit 6 (RCRC): Response CRC error; 
            Bit 5 (RXDR): Receive FIFO data request; 
            Bit 4 (TXDR): Transmit FIFO data request;
            Bit 3 (DTO): Data transfer over; 
            Bit 2 (CD): Command done; 
            Bit 1 (RE): Response error;
            Bit 0 (CD): Card detect.</description>
            <name>INT_STATUS_MSK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Interrupt from SDIO card, one bit for each card. Bit[17:16] correspond to card1 and card0, respectively. SDIO interrupt for card is enabled only if corresponding sdhost_sdio_int_mask bit is set in Interrupt mask register (Setting mask bit enables interrupt).</description>
            <name>SDIO_INTERRUPT_MSK</name>
          </field>
        </fields>
        <name>MINTSTS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>Raw interrupt status register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Setting a bit clears the corresponding interrupt and writing 0 has no effect. Bits are logged regardless of interrupt mask status.
            Bit 15 (EBE): End-bit error/no CRC error;
            Bit 14 (ACD): Auto command done;
            Bit 13 (SBE/BCI): RX Start Bit Error;
            Bit 12 (HLE): Hardware locked write error; 
            Bit 11 (FRUN): FIFO underrun/overrun error;
            Bit 10 (HTO): Data starvation by host timeout (HTO);
            Bit 9 (DTRO): Data read timeout; 
            Bit 8 (RTO): Response timeout; 
            Bit 7 (DCRC): Data CRC error; 
            Bit 6 (RCRC): Response CRC error; 
            Bit 5 (RXDR): Receive FIFO data request; 
            Bit 4 (TXDR): Transmit FIFO data request;
            Bit 3 (DTO): Data transfer over; 
            Bit 2 (CD): Command done; 
            Bit 1 (RE): Response error;
            Bit 0 (CD): Card detect.</description>
            <name>INT_STATUS_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Interrupt from SDIO card, one bit for each card. Bit[17:16] correspond to card1 and card0, respectively. Setting a bit clears the corresponding interrupt bit and writing 0 has no effect.
            0: No SDIO interrupt from card;
            1: SDIO interrupt from card.</description>
            <name>SDIO_INTERRUPT_RAW</name>
          </field>
        </fields>
        <name>RINTSTS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>SD/MMC status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>FIFO reached Receive watermark level, not qualified with data transfer.</description>
            <name>FIFO_RX_WATERMARK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>FIFO reached Transmit watermark level, not qualified with data transfer.</description>
            <name>FIFO_TX_WATERMARK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>FIFO is empty status.</description>
            <name>FIFO_EMPTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>FIFO is full status.</description>
            <name>FIFO_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Command FSM states.
            0: Idle;
            1: Send init sequence; 
            2: Send cmd start bit; 
            3: Send cmd tx bit;
            4: Send cmd index + arg;
            5: Send cmd crc7;
            6: Send cmd end bit;
            7: Receive resp start bit;
            8: Receive resp IRQ response;
            9: Receive resp tx bit;
            10: Receive resp cmd idx;
            11: Receive resp data;
            12: Receive resp crc7;
            13: Receive resp end bit;
            14: Cmd path wait NCC;
            15: Wait, cmd-to-response turnaround.</description>
            <name>COMMAND_FSM_STATES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw selected sdhost_card_data[3], checks whether card is present.
            0: card not present;
            1: card present.</description>
            <name>DATA_3_STATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Inverted version of raw selected sdhost_card_data[0].
            0: Card data not busy;
            1: Card data busy.</description>
            <name>DATA_BUSY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Data transmit or receive state-machine is busy.</description>
            <name>DATA_STATE_MC_BUSY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Index of previous response, including any auto-stop sent by core.</description>
            <name>RESPONSE_INDEX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>FIFO count, number of filled locations in FIFO.</description>
            <name>FIFO_COUNT</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x716</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>FIFO configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>FIFO threshold watermark level when transmitting data to card. When FIFO data count is less than or equal to this number, DMA/FIFO request is raised. If Interrupt is enabled, then interrupt  occurs. During end of packet, request or interrupt is generated, regardless of threshold programming.In non-DMA mode, when transmit FIFO threshold (TXDR) interrupt is enabled, then interrupt is generated instead of DMA request. During end of packet, on last interrupt, host is responsible for filling FIFO with only required remaining bytes (not before FIFO is full or after CIU completes data transfers, because FIFO may not be empty).  In DMA mode, at end of packet, if last transfer is less than burst  size, DMA controller does single cycles until required bytes are  transferred.</description>
            <name>TX_WMARK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>FIFO threshold watermark level when receiving data to card.When FIFO data count reaches greater than this number , DMA/FIFO request is raised. During end of packet, request is generated regardless of threshold programming in order to complete any remaining data.In non-DMA mode, when receiver FIFO threshold (RXDR) interrupt is enabled, then interrupt is generated instead of DMA request.During end of packet, interrupt is not generated if threshold programming is larger than any remaining data. It is responsibility of host to read remaining bytes on seeing Data Transfer Done interrupt.In DMA mode, at end of packet, even if remaining bytes are less than threshold, DMA request does single transfers to flush out any remaining bytes before Data Transfer Done interrupt is set.</description>
            <name>RX_WMARK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Burst size of multiple transaction, should be programmed same as DMA controller multiple-transaction-size SDHOST_SRC/DEST_MSIZE.
            000: 1-byte transfer; 
            001: 4-byte transfer; 
            010: 8-byte transfer; 
            011: 16-byte transfer; 
            100: 32-byte transfer; 
            101: 64-byte transfer; 
            110: 128-byte transfer; 
            111: 256-byte transfer.</description>
            <name>DMA_MULTIPLE_TRANSACTION_SIZE</name>
          </field>
        </fields>
        <name>FIFOTH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>Card detect register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Value on sdhost_card_detect_n input ports (1 bit per card), read-only bits. 0 represents presence of card. Only NUM_CARDS number of bits are implemented.</description>
            <name>CARD_DETECT_N</name>
          </field>
        </fields>
        <name>CDETECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>Card write protection (WP) status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Value on sdhost_card_write_prt input ports (1 bit per card). 1 represents write protection. Only NUM_CARDS number of bits are implemented.</description>
            <name>WRITE_PROTECT</name>
          </field>
        </fields>
        <name>WRTPRT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>Transferred byte count register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Number of bytes transferred by CIU unit to card.</description>
            <name>TCBCNT</name>
          </field>
        </fields>
        <name>TCBCNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>Transferred byte count register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Number of bytes transferred between Host/DMA memory and BIU FIFO.</description>
            <name>TBBCNT</name>
          </field>
        </fields>
        <name>TBBCNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>Debounce filter time configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>Number of host clocks (clk) used by debounce filter logic. The typical debounce time is 5 \verb+~+ 25 ms to prevent the card instability when the card is inserted or removed.</description>
            <name>DEBOUNCE_COUNT</name>
          </field>
        </fields>
        <name>DEBNCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>User ID (scratchpad) register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>User identification register, value set by user. Can also be used as a scratchpad register by user.</description>
            <name>USRID</name>
          </field>
        </fields>
        <name>USRID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>Version ID (scratchpad) register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Hardware version register. Can also be read by fireware.</description>
            <name>VERSIONID</name>
          </field>
        </fields>
        <name>VERID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5432270A</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>Hardware feature register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hardware support SDIO and MMC.</description>
            <name>CARD_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Support card number is 2.</description>
            <name>CARD_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Register config is APB bus.</description>
            <name>BUS_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Regisger data widht is 32.</description>
            <name>DATA_WIDTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Register address width is 32.</description>
            <name>ADDR_WIDTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>DMA data witdth is 32.</description>
            <name>DMA_WIDTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Inside RAM in SDMMC module.</description>
            <name>RAM_INDISE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Have a hold regiser in data path .</description>
            <name>HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Have 4 clk divider in design .</description>
            <name>NUM_CLK_DIV</name>
          </field>
        </fields>
        <name>HCON</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3444CC3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>UHS-1 register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>DDR mode selecton,1 bit for each card.
            0-Non-DDR mdoe.
            1-DDR mdoe.</description>
            <name>DDR</name>
          </field>
        </fields>
        <name>UHS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>Card reset register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Hardware reset.
            1: Active mode; 
            0: Reset. 
            These bits cause the cards to enter pre-idle state, which requires them to be re-initialized. SDHOST_RST_CARD_RESET[0] should be set to 1'b0 to reset card0, SDHOST_RST_CARD_RESET[1] should be set to 1'b0 to reset card1.</description>
            <name>CARD_RESET</name>
          </field>
        </fields>
        <name>RST_N</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>Burst mode transfer configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software Reset. When set, the DMA Controller resets all its internal registers. It is automatically cleared after one clock cycle.</description>
            <name>SWR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Fixed Burst. Controls whether the AHB Master interface performs fixed burst transfers or not. When set, the AHB will use only SINGLE, INCR4, INCR8 or INCR16 during start of normal burst transfers. When reset, the AHB will use SINGLE and INCR burst transfer operations.</description>
            <name>FB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>IDMAC Enable. When set, the IDMAC is enabled.</description>
            <name>DE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Programmable Burst Length. These bits indicate the maximum number of beats to be performed in one IDMAC???Internal DMA Control???transaction. The IDMAC will always attempt to burst as specified in PBL each time it starts a burst transfer on the host bus. The permissible values are 1, 4, 8, 16, 32, 64, 128 and 256. This value is the mirror of MSIZE of FIFOTH register. In order to change this value, write the required value to FIFOTH register. This is an encode value as follows:
            000: 1-byte transfer; 
            001: 4-byte transfer; 
            010: 8-byte transfer; 
            011: 16-byte transfer; 
            100: 32-byte transfer; 
            101: 64-byte transfer; 
            110: 128-byte transfer; 
            111: 256-byte transfer.
            PBL is a read-only value and is applicable only for data access, it does not apply to descriptor access.</description>
            <name>PBL</name>
          </field>
        </fields>
        <name>BMOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>Poll demand configuration register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Poll Demand. If the OWNER bit of a descriptor is not set, the FSM goes to the Suspend state. The host needs to write any value into this register for the IDMAC FSM to resume normal descriptor fetch operation. This is a write only .</description>
            <name>PD</name>
          </field>
        </fields>
        <name>PLDMND</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>Descriptor base address register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Start of Descriptor List. Contains the base address of the First Descriptor. The LSB bits [1:0] are ignored and taken as all-zero by the IDMAC internally. Hence these LSB bits may be treated as read-only.</description>
            <name>DBADDR</name>
          </field>
        </fields>
        <name>DBADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>IDMAC status register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmit Interrupt. Indicates that data transmission is finished for a descriptor. Writing 1 clears this bit.</description>
            <name>TI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receive Interrupt. Indicates the completion of data reception for a descriptor. Writing 1 clears this bit.</description>
            <name>RI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Fatal Bus Error Interrupt. Indicates that a Bus Error occurred (IDSTS[12:10]) . When this bit is set, the DMA disables all its bus accesses. Writing 1 clears this bit.</description>
            <name>FBE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Descriptor Unavailable Interrupt. This bit is set when the descriptor is unavailable due to OWNER bit = 0 (DES0[31] = 0). Writing 1 clears this bit.</description>
            <name>DU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Card Error Summary. Indicates the status of the transaction to/from the card, also present in RINTSTS. Indicates the logical OR of the following bits:
            EBE : End Bit Error; 
            RTO : Response Timeout/Boot Ack Timeout; 
            RCRC : Response CRC; 
            SBE : Start Bit Error; 
            DRTO : Data Read Timeout/BDS timeout; 
            DCRC : Data CRC for Receive; 
            RE : Response Error.
            Writing 1 clears this bit. The abort condition of the IDMAC depends on the setting of this CES bit. If the CES bit is enabled, then the IDMAC aborts on a response error.</description>
            <name>CES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Normal Interrupt Summary. Logical OR of the following: IDSTS[0] : Transmit Interrupt, IDSTS[1] : Receive Interrupt. Only unmasked bits affect this bit. This is a sticky bit and must be cleared each time a corresponding bit that causes NIS to be set is cleared. Writing 1 clears this bit.</description>
            <name>NIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Abnormal Interrupt Summary. Logical OR of the following: IDSTS[2] : Fatal Bus Interrupt, IDSTS[4] : DU bit Interrupt. Only unmasked bits affect this bit. This is a sticky bit and must be cleared each time a corresponding bit that causes AIS to be set is cleared. Writing 1 clears this bit.</description>
            <name>AIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Fatal Bus Error Code. Indicates the type of error that caused a Bus Error. Valid only when the Fatal Bus Error bit IDSTS[2] is set. This field does not generate an interrupt.
            001: Host Abort received during transmission;
            010: Host Abort received during reception;
            Others: Reserved.</description>
            <name>FBE_CODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>DMAC FSM present state.
            0: DMA_IDLE (idle state); 
            1: DMA_SUSPEND (suspend state); 
            2: DESC_RD (descriptor reading state); 
            3: DESC_CHK (descriptor checking state); 
            4: DMA_RD_REQ_WAIT (read-data request waiting state);
            5: DMA_WR_REQ_WAIT (write-data request waiting state); 
            6: DMA_RD (data-read state); 
            7: DMA_WR (data-write state); 
            8: DESC_CLOSE (descriptor close state).</description>
            <name>FSM</name>
          </field>
        </fields>
        <name>IDSTS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>IDMAC interrupt enable register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmit Interrupt Enable. When set with Normal Interrupt Summary Enable, Transmit Interrupt is enabled. When reset, Transmit Interrupt is disabled.</description>
            <name>TI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receive Interrupt Enable. When set with Normal Interrupt Summary Enable, Receive Interrupt is enabled. When reset, Receive Interrupt is disabled.</description>
            <name>RI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Fatal Bus Error Enable. When set with Abnormal Interrupt Summary Enable, the Fatal Bus Error Interrupt is enabled. When reset, Fatal Bus Error Enable Interrupt is disabled.</description>
            <name>FBE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Descriptor Unavailable Interrupt. When set along with Abnormal Interrupt Summary Enable, the DU interrupt is enabled.</description>
            <name>DU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Card Error summary Interrupt Enable. When set, it enables the Card Interrupt summary.</description>
            <name>CES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Normal Interrupt Summary Enable. When set, a normal interrupt is enabled. When reset, a normal interrupt is disabled. This bit enables the following bits:
            IDINTEN[0]: Transmit Interrupt;
            IDINTEN[1]: Receive Interrupt.</description>
            <name>NI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Abnormal Interrupt Summary Enable. When set, an abnormal interrupt is enabled. This bit enables the following bits:
            IDINTEN[2]: Fatal Bus Error Interrupt;
            IDINTEN[4]: DU Interrupt.</description>
            <name>AI</name>
          </field>
        </fields>
        <name>IDINTEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>Host descriptor address pointer</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Host Descriptor Address Pointer, updated by IDMAC during operation and cleared on reset. This register points to the start address of the current descriptor read by the IDMAC.</description>
            <name>DSCADDR</name>
          </field>
        </fields>
        <name>DSCADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>Host buffer address pointer register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Host Buffer Address Pointer, updated by IDMAC during operation and cleared on reset. This register points to the current Data Buffer Address being accessed by the IDMAC.</description>
            <name>BUFADDR</name>
          </field>
        </fields>
        <name>BUFADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <description>Card Threshold Control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Card read threshold enable.
            1'b0-Card read threshold disabled.
            1'b1-Card read threshold enabled.</description>
            <name>CARDRDTHREN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Busy clear interrupt generation:
            1'b0-Busy clear interrypt disabled.
            1'b1-Busy clear interrypt enabled.</description>
            <name>CARDCLRINTEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Applicable when HS400 mode is enabled.
            1'b0-Card write Threshold disabled.
            1'b1-Card write Threshold enabled.</description>
            <name>CARDWRTHREN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The inside FIFO size is 512,This register is applicable when SDHOST_CARDERTHREN_REG is set to 1 or SDHOST_CARDRDTHREN_REG set to 1.</description>
            <name>CARDTHRESHOLD</name>
          </field>
        </fields>
        <name>CARDTHRCTL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <description>eMMC DDR register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Control for start bit detection mechanism duration of start bit.Each bit refers to one slot.Set this bit to 1 for eMMC4.5 and above,set to 0 for SD applications.For eMMC4.5,start bit can be:
            1'b0-Full cycle.
            1'b1-less than one full cycle.</description>
            <name>HALFSTARTBIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set 1 to enable HS400 mode.</description>
            <name>HS400_MODE</name>
          </field>
        </fields>
        <name>EMMCDDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <description>Enable Phase Shift register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Control for the amount of phase shift provided on the default enables in the design.Two bits assigned for each card.
            2'b00-Default phase shift.
            2'b01-Enables shifted to next immediate positive edge.
            2'b10-Enables shifted to next immediate negative edge.
            2'b11-Reserved.</description>
            <name>ENABLE_SHIFT</name>
          </field>
        </fields>
        <name>ENSHIFT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x200</addressOffset>
        <description>CPU write and read transmit data by FIFO</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>CPU write and read transmit data by FIFO. This register points to the current Data FIFO .</description>
            <name>BUFFIFO</name>
          </field>
        </fields>
        <name>BUFFIFO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x800</addressOffset>
        <description>SDIO control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>It's used to select the clock phase of the output signal from phase 0, phase 90, phase 180, phase 270.</description>
            <name>CCLKIN_EDGE_DRV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>It's used to select the clock phase of the input signal from phase 0, phase 90, phase 180, phase 270.</description>
            <name>CCLKIN_EDGE_SAM_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>It's used to select the clock phase of the internal signal from phase 0, phase 90, phase 180, phase 270.</description>
            <name>CCLKIN_EDGE_SLF_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The high level of the divider clock. The value should be smaller than CCLKIN_EDGE_L.</description>
            <name>CCLLKIN_EDGE_H</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The low level of the divider clock. The value should be  larger than CCLKIN_EDGE_H.</description>
            <name>CCLLKIN_EDGE_L</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The value should be equal to CCLKIN_EDGE_L.</description>
            <name>CCLLKIN_EDGE_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable esdio mode.</description>
            <name>ESDIO_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable esd mode.</description>
            <name>ESD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sdio clock enable</description>
            <name>CCLK_EN</name>
          </field>
        </fields>
        <name>CLK_EDGE_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x820200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xA8</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF48800</baseAddress>
    <description>Peripheral SENS</description>
    <groupName>SENS</groupName>
    <interrupts></interrupts>
    <name>SENS</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>clock divider</description>
            <name>SAR1_CLK_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>sample cycles for SAR ADC1</description>
            <name>SAR1_SAMPLE_CYCLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>00: for 9-bit width  01: for 10-bit width  10: for 11-bit width  11: for 12-bit width</description>
            <name>SAR1_SAMPLE_BIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SAR1_CLK_GATED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SAR1_SAMPLE_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SAR ADC1 controlled by DIG ADC1 CTRL  0: SAR ADC1 controlled by RTC ADC1 CTRL</description>
            <name>SAR1_DIG_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Invert SAR ADC1 data</description>
            <name>SAR1_DATA_INV</name>
          </field>
        </fields>
        <name>SAR_READ_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x70902</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SAR1_READER_STATUS</name>
          </field>
        </fields>
        <name>SAR_READ_STATUS1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>SAR_AMP_WAIT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>SAR_AMP_WAIT2</name>
          </field>
        </fields>
        <name>SAR_MEAS_WAIT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA000A</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FORCE_XPD_SAR_SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>SAR_AMP_WAIT3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FORCE_XPD_AMP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>FORCE_XPD_SAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SAR2_RSTB_WAIT</name>
          </field>
        </fields>
        <name>SAR_MEAS_WAIT2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20000A</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>XPD_SAR_AMP_FSM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>AMP_RST_FB_FSM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>AMP_SHORT_REF_FSM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>AMP_SHORT_REF_GND_FSM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>XPD_SAR_FSM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>SAR_RSTB_FSM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SAR2_XPD_WAIT</name>
          </field>
        </fields>
        <name>SAR_MEAS_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x707338F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SAR2_READER_STATUS</name>
          </field>
        </fields>
        <name>SAR_READ_STATUS2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>sleep cycles for ULP-coprocessor timer</description>
            <name>SLEEP_CYCLES_S0</name>
          </field>
        </fields>
        <name>ULP_CP_SLEEP_CYC0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLEEP_CYCLES_S1</name>
          </field>
        </fields>
        <name>ULP_CP_SLEEP_CYC1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x64</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLEEP_CYCLES_S2</name>
          </field>
        </fields>
        <name>ULP_CP_SLEEP_CYC2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x32</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLEEP_CYCLES_S3</name>
          </field>
        </fields>
        <name>ULP_CP_SLEEP_CYC3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x28</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLEEP_CYCLES_S4</name>
          </field>
        </fields>
        <name>ULP_CP_SLEEP_CYC4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x14</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>00: 9 bit  01: 10 bits  10: 11bits  11: 12bits</description>
            <name>SAR1_BIT_WIDTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>00: 9 bit  01: 10 bits  10: 11bits  11: 12bits</description>
            <name>SAR2_BIT_WIDTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SAR2_EN_TEST  only active when reg_sar2_dig_force = 0</description>
            <name>SAR2_EN_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>SAR2_PWDET_CCT  PA power detector capacitance tuning.</description>
            <name>SAR2_PWDET_CCT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: ULP-coprocessor is started by SW  0: ULP-coprocessor is started by timer</description>
            <name>ULP_CP_FORCE_START_TOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to start ULP-coprocessor  only active when reg_ulp_cp_force_start_top = 1</description>
            <name>ULP_CP_START_TOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SARCLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>initialized PC for ULP-coprocessor</description>
            <name>PC_INIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>stop SAR ADC2 conversion</description>
            <name>SAR2_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>stop SAR ADC1 conversion</description>
            <name>SAR1_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>N/A</description>
            <name>SAR2_PWDET_EN</name>
          </field>
        </fields>
        <name>SAR_START_FORCE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>MEM_WR_ADDR_INIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>MEM_WR_ADDR_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RTC_MEM_WR_OFFST_CLR</name>
          </field>
        </fields>
        <name>SAR_MEM_WR_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x100200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>2-bit attenuation for each pad  11:1dB  10:6dB  01:3dB  00:0dB</description>
            <name>SAR1_ATTEN</name>
          </field>
        </fields>
        <name>SAR_ATTEN1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>2-bit attenuation for each pad  11:1dB  10:6dB  01:3dB  00:0dB</description>
            <name>SAR2_ATTEN</name>
          </field>
        </fields>
        <name>SAR_ATTEN2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>I2C_SLAVE_ADDR1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>I2C_SLAVE_ADDR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>MEAS_STATUS</name>
          </field>
        </fields>
        <name>SAR_SLAVE_ADDR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>I2C_SLAVE_ADDR3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>I2C_SLAVE_ADDR2</name>
          </field>
        </fields>
        <name>SAR_SLAVE_ADDR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>I2C_SLAVE_ADDR5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>I2C_SLAVE_ADDR4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>temperature sensor data out</description>
            <name>TSENS_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>indicate temperature sensor out ready</description>
            <name>TSENS_RDY_OUT</name>
          </field>
        </fields>
        <name>SAR_SLAVE_ADDR3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>I2C_SLAVE_ADDR7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>I2C_SLAVE_ADDR6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>I2C read data</description>
            <name>I2C_RDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>indicate I2C done</description>
            <name>I2C_DONE</name>
          </field>
        </fields>
        <name>SAR_SLAVE_ADDR4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>TSENS_XPD_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TSENS_XPD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TSENS_CLK_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TSENS_CLK_GATED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert temperature sensor data</description>
            <name>TSENS_IN_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>temperature sensor clock divider</description>
            <name>TSENS_CLK_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>temperature sensor power up</description>
            <name>TSENS_POWER_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: dump out &amp; power up controlled by SW  0: by FSM</description>
            <name>TSENS_POWER_UP_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>temperature sensor dump out  only active when reg_tsens_power_up_force = 1</description>
            <name>TSENS_DUMP_OUT</name>
          </field>
        </fields>
        <name>SAR_TSENS_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x66002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>I2C control data  only active when reg_sar_i2c_start_force = 1</description>
            <name>SAR_I2C_CTRL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start I2C  only active when reg_sar_i2c_start_force = 1</description>
            <name>SAR_I2C_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: I2C started by SW  0: I2C started by FSM</description>
            <name>SAR_I2C_START_FORCE</name>
          </field>
        </fields>
        <name>SAR_I2C_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>SAR ADC1 data</description>
            <name>MEAS1_DATA_SAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SAR ADC1 conversion done indication</description>
            <name>MEAS1_DONE_SAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SAR ADC1 controller (in RTC) starts conversion  only active when reg_meas1_start_force = 1</description>
            <name>MEAS1_START_SAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SAR ADC1 controller (in RTC) is started by SW  0: SAR ADC1 controller is started by ULP-coprocessor</description>
            <name>MEAS1_START_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>SAR ADC1 pad enable bitmap  only active when reg_sar1_en_pad_force = 1</description>
            <name>SAR1_EN_PAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SAR ADC1 pad enable bitmap is controlled by SW  0: SAR ADC1 pad enable bitmap is controlled by ULP-coprocessor</description>
            <name>SAR1_EN_PAD_FORCE</name>
          </field>
        </fields>
        <name>SAR_MEAS_START1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the meas length (in 8MHz)</description>
            <name>TOUCH_MEAS_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>the waiting cycles (in 8MHz) between TOUCH_START and TOUCH_XPD</description>
            <name>TOUCH_XPD_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: when the counter is greater then the threshold  the touch pad is considered as "touched"  0: when the counter is less than the threshold  the touch pad is considered as "touched"</description>
            <name>TOUCH_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: wakeup interrupt is generated if SET1 is "touched"  0: wakeup interrupt is generated only if SET1 &amp; SET2 is both "touched"</description>
            <name>TOUCH_OUT_1EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: XPD HALL is controlled by SW. 0: XPD HALL is controlled by FSM in ULP-coprocessor</description>
            <name>XPD_HALL_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: HALL PHASE is controlled by SW  0: HALL PHASE is controlled by FSM in ULP-coprocessor</description>
            <name>HALL_PHASE_FORCE</name>
          </field>
        </fields>
        <name>SAR_TOUCH_CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2041000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the threshold for touch pad 1</description>
            <name>TOUCH_OUT_TH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the threshold for touch pad 0</description>
            <name>TOUCH_OUT_TH0</name>
          </field>
        </fields>
        <name>SAR_TOUCH_THRES1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the threshold for touch pad 3</description>
            <name>TOUCH_OUT_TH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the threshold for touch pad 2</description>
            <name>TOUCH_OUT_TH2</name>
          </field>
        </fields>
        <name>SAR_TOUCH_THRES2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the threshold for touch pad 5</description>
            <name>TOUCH_OUT_TH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the threshold for touch pad 4</description>
            <name>TOUCH_OUT_TH4</name>
          </field>
        </fields>
        <name>SAR_TOUCH_THRES3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the threshold for touch pad 7</description>
            <name>TOUCH_OUT_TH7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the threshold for touch pad 6</description>
            <name>TOUCH_OUT_TH6</name>
          </field>
        </fields>
        <name>SAR_TOUCH_THRES4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the threshold for touch pad 9</description>
            <name>TOUCH_OUT_TH9</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the threshold for touch pad 8</description>
            <name>TOUCH_OUT_TH8</name>
          </field>
        </fields>
        <name>SAR_TOUCH_THRES5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the counter for touch pad 1</description>
            <name>TOUCH_MEAS_OUT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the counter for touch pad 0</description>
            <name>TOUCH_MEAS_OUT0</name>
          </field>
        </fields>
        <name>SAR_TOUCH_OUT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the counter for touch pad 3</description>
            <name>TOUCH_MEAS_OUT3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the counter for touch pad 2</description>
            <name>TOUCH_MEAS_OUT2</name>
          </field>
        </fields>
        <name>SAR_TOUCH_OUT2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the counter for touch pad 5</description>
            <name>TOUCH_MEAS_OUT5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the counter for touch pad 4</description>
            <name>TOUCH_MEAS_OUT4</name>
          </field>
        </fields>
        <name>SAR_TOUCH_OUT3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the counter for touch pad 7</description>
            <name>TOUCH_MEAS_OUT7</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the counter for touch pad 6</description>
            <name>TOUCH_MEAS_OUT6</name>
          </field>
        </fields>
        <name>SAR_TOUCH_OUT4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the counter for touch pad 9</description>
            <name>TOUCH_MEAS_OUT9</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the counter for touch pad 8</description>
            <name>TOUCH_MEAS_OUT8</name>
          </field>
        </fields>
        <name>SAR_TOUCH_OUT5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>10-bit register to indicate which pads are "touched"</description>
            <name>TOUCH_MEAS_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>fsm set 1 to indicate touch touch meas is done</description>
            <name>TOUCH_MEAS_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: TOUCH_START &amp; TOUCH_XPD is controlled by touch fsm  0: TOUCH_START &amp; TOUCH_XPD is controlled by registers</description>
            <name>TOUCH_START_FSM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: start touch fsm  valid when reg_touch_start_force is set</description>
            <name>TOUCH_START_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: to start touch fsm by SW  0: to start touch fsm by timer</description>
            <name>TOUCH_START_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>sleep cycles for timer</description>
            <name>TOUCH_SLEEP_CYCLES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>to clear reg_touch_meas_en</description>
            <name>TOUCH_MEAS_EN_CLR</name>
          </field>
        </fields>
        <name>SAR_TOUCH_CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400800</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>Bitmap defining the working set during the measurement.</description>
            <name>TOUCH_PAD_WORKEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>Bitmap defining SET2 for generating wakeup interrupt. SET2 is "touched" only if at least one of touch pad in SET2 is "touched".</description>
            <name>TOUCH_PAD_OUTEN2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>Bitmap defining SET1 for generating wakeup interrupt. SET1 is "touched" only if at least one of touch pad in SET1 is "touched".</description>
            <name>TOUCH_PAD_OUTEN1</name>
          </field>
        </fields>
        <name>SAR_TOUCH_ENABLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3FFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>clock divider</description>
            <name>SAR2_CLK_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>sample cycles for SAR ADC2</description>
            <name>SAR2_SAMPLE_CYCLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>00: for 9-bit width  01: for 10-bit width  10: for 11-bit width  11: for 12-bit width</description>
            <name>SAR2_SAMPLE_BIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SAR2_CLK_GATED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SAR2_SAMPLE_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SAR2_PWDET_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SAR ADC2 controlled by DIG ADC2 CTRL or PWDET CTRL  0: SAR ADC2 controlled by RTC ADC2 CTRL</description>
            <name>SAR2_DIG_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Invert SAR ADC2 data</description>
            <name>SAR2_DATA_INV</name>
          </field>
        </fields>
        <name>SAR_READ_CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x70902</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>SAR ADC2 data</description>
            <name>MEAS2_DATA_SAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SAR ADC2 conversion done indication</description>
            <name>MEAS2_DONE_SAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SAR ADC2 controller (in RTC) starts conversion  only active when reg_meas2_start_force = 1</description>
            <name>MEAS2_START_SAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SAR ADC2 controller (in RTC) is started by SW  0: SAR ADC2 controller is started by ULP-coprocessor</description>
            <name>MEAS2_START_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>SAR ADC2 pad enable bitmap  only active when reg_sar2_en_pad_force = 1</description>
            <name>SAR2_EN_PAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SAR ADC2 pad enable bitmap is controlled by SW  0: SAR ADC2 pad enable bitmap is controlled by ULP-coprocessor</description>
            <name>SAR2_EN_PAD_FORCE</name>
          </field>
        </fields>
        <name>SAR_MEAS_START2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>frequency step for CW generator  can be used to adjust the frequency</description>
            <name>SW_FSTEP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: enable CW generator  0: disable CW generator</description>
            <name>SW_TONE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>DEBUG_BIT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: DAC1 &amp; DAC2 use DMA  0: DAC1 &amp; DAC2 do not use DMA</description>
            <name>DAC_DIG_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: force PDAC_CLK to low</description>
            <name>DAC_CLK_FORCE_LOW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: force PDAC_CLK to high</description>
            <name>DAC_CLK_FORCE_HIGH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: invert PDAC_CLK</description>
            <name>DAC_CLK_INV</name>
          </field>
        </fields>
        <name>SAR_DAC_CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>DC offset for DAC1 CW generator</description>
            <name>DAC_DC1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>DC offset for DAC2 CW generator</description>
            <name>DAC_DC2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>00: no scale  01: scale to 1/2  10: scale to 1/4  scale to 1/8</description>
            <name>DAC_SCALE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>00: no scale  01: scale to 1/2  10: scale to 1/4  scale to 1/8</description>
            <name>DAC_SCALE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>00: do not invert any bits  01: invert all bits  10: invert MSB  11: invert all bits except MSB</description>
            <name>DAC_INV1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>00: do not invert any bits  01: invert all bits  10: invert MSB  11: invert all bits except MSB</description>
            <name>DAC_INV2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: to select CW generator as source to PDAC1_DAC[7:0]  0: to select register reg_pdac1_dac[7:0] as source to PDAC1_DAC[7:0]</description>
            <name>DAC_CW_EN1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: to select CW generator as source to PDAC2_DAC[7:0]  0: to select register reg_pdac2_dac[7:0] as source to PDAC2_DAC[7:0]</description>
            <name>DAC_CW_EN2</name>
          </field>
        </fields>
        <name>SAR_DAC_CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>SAR1_DAC_XPD_FSM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SAR1_DAC_XPD_FSM_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>XPD_SAR_AMP_FSM_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AMP_RST_FB_FSM_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AMP_SHORT_REF_FSM_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AMP_SHORT_REF_GND_FSM_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>XPD_SAR_FSM_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SAR_RSTB_FSM_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>SAR2_RSTB_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>AMP_RST_FB_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>AMP_SHORT_REF_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>AMP_SHORT_REF_GND_FORCE</name>
          </field>
        </fields>
        <name>SAR_MEAS_CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SAR_NOUSE</name>
          </field>
        </fields>
        <name>SAR_NOUSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <name>SAR_DATE</name>
          </field>
        </fields>
        <name>SARDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1605180</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xC0</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF03000</baseAddress>
    <description>SHA (Secure Hash Algorithm) Accelerator</description>
    <groupName>SHA</groupName>
    <interrupts></interrupts>
    <name>SHA</name>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to start an SHA-1 operation on the first message block.</description>
            <name>SHA1_START</name>
          </field>
        </fields>
        <name>SHA1_START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to continue the SHA-1 operation with subsequent blocks.</description>
            <name>SHA1_CONTINUE</name>
          </field>
        </fields>
        <name>SHA1_CONTINUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to finish the SHA-1 operation to calculate the final message hash.</description>
            <name>SHA1_LOAD</name>
          </field>
        </fields>
        <name>SHA1_LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SHA-1 operation status: 1 if the SHA accelerator is processing data, 0 if it is idle.</description>
            <name>SHA1_BUSY</name>
          </field>
        </fields>
        <name>SHA1_BUSY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to start an SHA-256 operation on the first message block.</description>
            <name>SHA256_START</name>
          </field>
        </fields>
        <name>SHA256_START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to finish the SHA-256 operation to calculate the final message hash.</description>
            <name>SHA256_LOAD</name>
          </field>
        </fields>
        <name>SHA256_LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to continue the SHA-256 operation with subsequent blocks.</description>
            <name>SHA256_CONTINUE</name>
          </field>
        </fields>
        <name>SHA256_CONTINUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SHA-256 operation status: 1 if the SHA accelerator is processing data, 0 if it is idle.</description>
            <name>SHA256_BUSY</name>
          </field>
        </fields>
        <name>SHA256_BUSY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to start an SHA-384 operation on the first message block.</description>
            <name>SHA384_START</name>
          </field>
        </fields>
        <name>SHA384_START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to continue the SHA-384 operation with subsequent blocks.</description>
            <name>SHA384_CONTINUE</name>
          </field>
        </fields>
        <name>SHA384_CONTINUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to finish the SHA-384 operation to calculate the final message hash.</description>
            <name>SHA384_LOAD</name>
          </field>
        </fields>
        <name>SHA384_LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SHA-384 operation status: 1 if the SHA accelerator is processing data, 0 if it is idle.</description>
            <name>SHA384_BUSY</name>
          </field>
        </fields>
        <name>SHA384_BUSY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to start an SHA-512 operation on the first message block.</description>
            <name>SHA512_START</name>
          </field>
        </fields>
        <name>SHA512_START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to continue the SHA-512 operation with subsequent blocks.</description>
            <name>SHA512_CONTINUE</name>
          </field>
        </fields>
        <name>SHA512_CONTINUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to finish the SHA-512 operation to calculate the final message hash.</description>
            <name>SHA512_LOAD</name>
          </field>
        </fields>
        <name>SHA512_LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SHA-512 operation status: 1 if the SHA accelerator is processing data, 0 if it is idle.</description>
            <name>SHA512_BUSY</name>
          </field>
        </fields>
        <name>SHA512_BUSY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_3</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_4</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_5</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_6</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_7</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_8</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_9</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_10</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_11</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_12</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_13</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_14</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_15</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_16</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_17</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_18</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_19</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_20</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_21</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_22</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_23</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_24</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_25</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_26</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_27</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_28</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_29</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_30</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SHA Message block and hash result register.</description>
            <name>TEXT</name>
          </field>
        </fields>
        <name>TEXT_31</name>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x14C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF58000</baseAddress>
    <description>Peripheral SLC</description>
    <groupName>SLC</groupName>
    <interrupts></interrupts>
    <name>SLC</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AHBM_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>AHBM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_AUTO_WRBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_NO_RESTART_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RXDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RXDATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RXLINK_AUTO_RET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TXLINK_AUTO_RET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TXDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TXDATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN_AUTO_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_WR_RETRY_MASK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_WR_RETRY_MASK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_AUTO_WRBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_NO_RESTART_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RXDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RXDATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RXLINK_AUTO_RET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TXLINK_AUTO_RET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TXDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TXDATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN_AUTO_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN_SEL</name>
          </field>
        </fields>
        <name>CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF3CFF30</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT3_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT4_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT5_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT6_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT7_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_UDF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN0_1TO0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN1_1TO0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_SUC_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOHOST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DSCR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_HOST_RD_ACK_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_WR_RETRY_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_ERR_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CMD_DTC_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_QUICK_EOF_INT_RAW</name>
          </field>
        </fields>
        <name>_0INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT3_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT4_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT5_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT6_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT7_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_UDF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN0_1TO0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN1_1TO0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_SUC_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOHOST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DSCR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_HOST_RD_ACK_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_WR_RETRY_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_ERR_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CMD_DTC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_QUICK_EOF_INT_ST</name>
          </field>
        </fields>
        <name>_0INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT6_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT7_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_UDF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN0_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN1_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_SUC_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOHOST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DSCR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_HOST_RD_ACK_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_WR_RETRY_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_ERR_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CMD_DTC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_QUICK_EOF_INT_ENA</name>
          </field>
        </fields>
        <name>_0INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT3_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT4_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT5_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT6_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT7_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_UDF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN0_1TO0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN1_1TO0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_SUC_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOHOST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DSCR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_HOST_RD_ACK_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_WR_RETRY_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_ERR_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CMD_DTC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_QUICK_EOF_INT_CLR</name>
          </field>
        </fields>
        <name>_0INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT8_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT9_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT10_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT11_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT12_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT13_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT14_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT15_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_UDF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN0_1TO0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN1_1TO0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_SUC_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOHOST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DSCR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_HOST_RD_ACK_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_WR_RETRY_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_ERR_EOF_INT_RAW</name>
          </field>
        </fields>
        <name>_1INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT8_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT9_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT10_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT11_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT12_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT13_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT14_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT15_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_UDF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN0_1TO0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN1_1TO0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_SUC_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOHOST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DSCR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_HOST_RD_ACK_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_WR_RETRY_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_ERR_EOF_INT_ST</name>
          </field>
        </fields>
        <name>_1INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT8_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT9_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT10_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT11_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT12_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT13_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT14_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT15_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_UDF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN0_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN1_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_SUC_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOHOST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DSCR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_HOST_RD_ACK_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_WR_RETRY_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_ERR_EOF_INT_ENA</name>
          </field>
        </fields>
        <name>_1INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT8_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT9_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT10_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT11_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT12_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT13_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT14_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT15_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_UDF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN0_1TO0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN1_1TO0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_SUC_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOHOST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DSCR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_HOST_RD_ACK_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_WR_RETRY_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_ERR_EOF_INT_CLR</name>
          </field>
        </fields>
        <name>_1INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_EMPTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_EMPTY</name>
          </field>
        </fields>
        <name>RX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>SLC0_RXFIFO_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RXFIFO_PUSH</name>
          </field>
        </fields>
        <name>_0RXFIFO_PUSH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>SLC1_RXFIFO_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RXFIFO_PUSH</name>
          </field>
        </fields>
        <name>_1RXFIFO_PUSH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_EMPTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_EMPTY</name>
          </field>
        </fields>
        <name>TX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>SLC0_TXFIFO_RDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TXFIFO_POP</name>
          </field>
        </fields>
        <name>_0TXFIFO_POP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>SLC1_TXFIFO_RDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TXFIFO_POP</name>
          </field>
        </fields>
        <name>_1TXFIFO_POP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>SLC0_RXLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RXLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RXLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RXLINK_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RXLINK_PARK</name>
          </field>
        </fields>
        <name>_0RX_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>SLC0_TXLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TXLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TXLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TXLINK_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TXLINK_PARK</name>
          </field>
        </fields>
        <name>_0TX_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>SLC1_RXLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_BT_PACKET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RXLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RXLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RXLINK_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RXLINK_PARK</name>
          </field>
        </fields>
        <name>_1RX_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x100000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>SLC1_TXLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TXLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TXLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TXLINK_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TXLINK_PARK</name>
          </field>
        </fields>
        <name>_1TX_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SLC0_TOHOST_INTVEC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SLC1_TOHOST_INTVEC</name>
          </field>
        </fields>
        <name>INTVEC_TOHOST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SLC0_TOKEN0_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN0_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN0_INC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN0_INC_MORE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SLC0_TOKEN0</name>
          </field>
        </fields>
        <name>_0TOKEN0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SLC0_TOKEN1_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN1_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN1_INC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN1_INC_MORE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SLC0_TOKEN1</name>
          </field>
        </fields>
        <name>_0TOKEN1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SLC1_TOKEN0_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN0_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN0_INC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN0_INC_MORE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SLC1_TOKEN0</name>
          </field>
        </fields>
        <name>_1TOKEN0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SLC1_TOKEN1_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN1_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN1_INC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN1_INC_MORE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SLC1_TOKEN1</name>
          </field>
        </fields>
        <name>_1TOKEN1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_CHECK_OWNER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_CHECK_SUM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_CHECK_SUM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CMD_HOLD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_LEN_AUTO_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_STITCH_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_STITCH_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_CHECK_OWNER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_CHECK_SUM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_CHECK_SUM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_INT_LEVEL_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_STITCH_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_STITCH_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x300078</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_STATE0</name>
          </field>
        </fields>
        <name>_0_STATE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_STATE1</name>
          </field>
        </fields>
        <name>_0_STATE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_STATE0</name>
          </field>
        </fields>
        <name>_1_STATE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_STATE1</name>
          </field>
        </fields>
        <name>_1_STATE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <name>TXEOF_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>FIFO_MAP_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DUMMY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HDA_MAP_128K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DUMMY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>TX_PUSH_IDLE_NUM</name>
          </field>
        </fields>
        <name>BRIDGE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA7720</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TO_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>_0_TO_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TX_SUC_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>_0_TX_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TO_EOF_BFR_DES_ADDR</name>
          </field>
        </fields>
        <name>_0_TO_EOF_BFR_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_TO_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>_1_TO_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_TX_SUC_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>_1_TX_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_TO_EOF_BFR_DES_ADDR</name>
          </field>
        </fields>
        <name>_1_TO_EOF_BFR_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>AHB_TESTMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>AHB_TESTADDR</name>
          </field>
        </fields>
        <name>AHB_TEST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>CMD_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>FUNC_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SDIO_WAKEUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <name>BUS_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>FUNC1_ACC_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>FUNC2_ACC_STATE</name>
          </field>
        </fields>
        <name>SDIO_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN_NO_REPLACE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_INFOR_NO_REPLACE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_FILL_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_EOF_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_FILL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>SLC0_RD_RETRY_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN_NO_REPLACE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_INFOR_NO_REPLACE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_FILL_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_EOF_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_FILL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>SLC1_RD_RETRY_THRESHOLD</name>
          </field>
        </fields>
        <name>RX_DSCR_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x101B101A</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TXLINK_DSCR</name>
          </field>
        </fields>
        <name>_0_TXLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TXLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>_0_TXLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TXLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>_0_TXLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_RXLINK_DSCR</name>
          </field>
        </fields>
        <name>_0_RXLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_RXLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>_0_RXLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_RXLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>_0_RXLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_TXLINK_DSCR</name>
          </field>
        </fields>
        <name>_1_TXLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_TXLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>_1_TXLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_TXLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>_1_TXLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_RXLINK_DSCR</name>
          </field>
        </fields>
        <name>_1_RXLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_RXLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>_1_RXLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_RXLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>_1_RXLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TX_ERR_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>_0_TX_ERREOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC1_TX_ERR_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>_1_TX_ERREOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SLC0_TOKEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>SLC1_TOKEN</name>
          </field>
        </fields>
        <name>TOKEN_LAT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <name>WR_RETRY_THRESHOLD</name>
          </field>
        </fields>
        <name>TX_DSCR_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CMD_CONTENT0</name>
          </field>
        </fields>
        <name>CMD_INFOR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>CMD_CONTENT1</name>
          </field>
        </fields>
        <name>CMD_INFOR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>SLC0_LEN_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_LEN_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_LEN_INC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_LEN_INC_MORE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_PACKET_LOAD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_PACKET_LOAD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_GET_USED_DSCR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_GET_USED_DSCR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_NEW_PKT_IND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_NEW_PKT_IND</name>
          </field>
        </fields>
        <name>_0_LEN_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>SLC0_LEN</name>
          </field>
        </fields>
        <name>_0_LENGTH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TX_PKT_H_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_TXPKT_H_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TX_PKT_E_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_TXPKT_E_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_RX_PKT_H_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_RXPKT_H_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_RX_PKT_E_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_RXPKT_E_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TX_PKT_START_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_TXPKTU_H_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_TX_PKT_END_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_TXPKTU_E_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_RX_PKT_START_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_RXPKTU_H_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_RX_PKT_END_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_RXPKTU_E_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SLC0_SEQ_POSITION</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SLC1_SEQ_POSITION</name>
          </field>
        </fields>
        <name>SEQ_POSITION</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x509</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>SLC0_RX_DSCR_REC_LIM</name>
          </field>
        </fields>
        <name>_0_DSCR_REC_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>DAT0_CRC_ERR_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>DAT1_CRC_ERR_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>DAT2_CRC_ERR_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>DAT3_CRC_ERR_CNT</name>
          </field>
        </fields>
        <name>SDIO_CRC_ST0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CMD_CRC_ERR_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>ERR_CNT_CLR</name>
          </field>
        </fields>
        <name>SDIO_CRC_ST1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_EOF_START_DES_ADDR</name>
          </field>
        </fields>
        <name>_0_EOF_START_DES</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_RX_PUSH_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_PUSH_DSCR_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_RX_DONE_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_DONE_DSCR_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>SLC0_SUB_PAC_START_DSCR_ADDR</name>
          </field>
        </fields>
        <name>_0_SUB_START_DES</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>SLC0_RX_DSCR_CNT_LAT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_GET_EOF_OCC</name>
          </field>
        </fields>
        <name>_0_DSCR_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>SLC0_LEN_LIM</name>
          </field>
        </fields>
        <name>_0_LEN_LIM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT0_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT1_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT2_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT3_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT4_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT5_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT6_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT7_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_START_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_START_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_UDF_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_OVF_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN0_1TO0_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN1_1TO0_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DONE_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_SUC_EOF_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DONE_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_EOF_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOHOST_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_ERR_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DSCR_ERR_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_EMPTY_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_HOST_RD_ACK_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_WR_RETRY_DONE_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_ERR_EOF_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CMD_DTC_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_QUICK_EOF_INT_ST1</name>
          </field>
        </fields>
        <name>_0INT_ST1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT1_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT2_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT3_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT4_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT5_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT6_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT7_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_START_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_START_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_UDF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_OVF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN0_1TO0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOKEN1_1TO0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DONE_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_SUC_EOF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DONE_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_EOF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TOHOST_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_ERR_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_DSCR_ERR_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_DSCR_EMPTY_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_HOST_RD_ACK_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_WR_RETRY_DONE_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_TX_ERR_EOF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CMD_DTC_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC0_RX_QUICK_EOF_INT_ENA1</name>
          </field>
        </fields>
        <name>_0INT_ENA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT8_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT9_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT10_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT11_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT12_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT13_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT14_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT15_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_START_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_START_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_UDF_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_OVF_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN0_1TO0_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN1_1TO0_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DONE_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_SUC_EOF_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DONE_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_EOF_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOHOST_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_ERR_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DSCR_ERR_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_EMPTY_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_HOST_RD_ACK_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_WR_RETRY_DONE_INT_ST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_ERR_EOF_INT_ST1</name>
          </field>
        </fields>
        <name>_1INT_ST1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT8_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT9_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT10_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT11_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT12_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT13_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT14_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>FRHOST_BIT15_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_START_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_START_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_UDF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_OVF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN0_1TO0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOKEN1_1TO0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DONE_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_SUC_EOF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DONE_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_EOF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TOHOST_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_ERR_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_RX_DSCR_ERR_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_DSCR_EMPTY_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_HOST_RD_ACK_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_WR_RETRY_DONE_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SLC1_TX_ERR_EOF_INT_ENA1</name>
          </field>
        </fields>
        <name>_1INT_ENA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x16022500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>ID</name>
          </field>
        </fields>
        <name>ID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x104</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF55000</baseAddress>
    <description>Peripheral SLCHOST</description>
    <groupName>SLCHOST</groupName>
    <interrupts></interrupts>
    <name>SLCHOST</name>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC_FUNC2_INT</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_FUNC2_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC_FUNC2_INT_EN</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_FUNC2_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC_FUNC1_MDSTAT</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_FUNC2_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_GPIO_SDIO_INT0</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_GPIO_STATUS0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_GPIO_SDIO_INT1</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_GPIO_STATUS1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_GPIO_SDIO_IN0</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_GPIO_IN0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_GPIO_SDIO_IN1</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_GPIO_IN1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>HOST_SLC0_TOKEN0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_PF_VALID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>HOST_HOSTSLC0_TOKEN1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>HOST_SLC0_RX_PF_EOF</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_TOKEN_RDATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_SLC0_PF_DATA</name>
          </field>
        </fields>
        <name>HOST_SLC0_HOST_PF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_SLC1_PF_DATA</name>
          </field>
        </fields>
        <name>HOST_SLC1_HOST_PF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT3_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT4_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT5_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT6_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT7_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN0_1TO0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN1_1TO0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN0_0TO1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN1_0TO1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_SOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_TX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_UDF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TX_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_PF_VALID_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT3_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_NEW_PACKET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_HOST_RD_RETRY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_GPIO_SDIO_INT_RAW</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT3_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT4_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT5_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT6_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT7_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN0_1TO0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN1_1TO0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN0_0TO1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN1_0TO1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_SOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_TX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_UDF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TX_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_PF_VALID_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT3_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_WIFI_RX_NEW_PACKET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_HOST_RD_RETRY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_BT_RX_NEW_PACKET_INT_RAW</name>
          </field>
        </fields>
        <name>HOST_SLC1HOST_INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT3_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT4_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT5_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT6_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT7_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN0_1TO0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN1_1TO0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN0_0TO1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN1_0TO1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_SOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_TX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_UDF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TX_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_PF_VALID_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT3_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_NEW_PACKET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_HOST_RD_RETRY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_GPIO_SDIO_INT_ST</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT3_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT4_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT5_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT6_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT7_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN0_1TO0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN1_1TO0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN0_0TO1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN1_0TO1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_SOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_TX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_UDF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TX_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_PF_VALID_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT3_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_WIFI_RX_NEW_PACKET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_HOST_RD_RETRY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_BT_RX_NEW_PACKET_INT_ST</name>
          </field>
        </fields>
        <name>HOST_SLC1HOST_INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>HOST_HOSTSLC0_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>HOST_HOSTSLC0_LEN_CHECK</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_PKT_LEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_STATE0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_STATE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_STATE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_STATE3</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_STATE_W0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_STATE4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_STATE5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_STATE6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_STATE7</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_STATE_W1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF3</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF6</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF7</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF8</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF9</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF10</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF11</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF12</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF13</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF14</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF15</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SLC timeout value</description>
            <name>HOST_SLCHOST_CONF16</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SLC timeout enable</description>
            <name>HOST_SLCHOST_CONF17</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF18</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Interrupt to target CPU</description>
            <name>HOST_SLCHOST_CONF19</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF20</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF21</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF22</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF23</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields></fields>
        <name>HOST_SLCHOST_WIN_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF24</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF25</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF26</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF27</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF28</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF29</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF30</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF31</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>HOST_HOSTSLC0_LEN0</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_PKT_LEN0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>HOST_HOSTSLC0_LEN1</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_PKT_LEN1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>HOST_HOSTSLC0_LEN2</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_PKT_LEN2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF32</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF33</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF34</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF35</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF36</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF37</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF38</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF39</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF40</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF41</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF42</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF43</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF44</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF45</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF46</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF47</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF48</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF49</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF50</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF51</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF52</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF53</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF54</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF55</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF56</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF57</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF58</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF59</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF60</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF61</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF62</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>HOST_SLCHOST_CONF63</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF_W15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_SLCHOST_CHECK_SUM0</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CHECK_SUM0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_SLCHOST_CHECK_SUM1</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CHECK_SUM1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>HOST_SLC1_TOKEN0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_PF_VALID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>HOST_HOSTSLC1_TOKEN1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <name>HOST_SLC1_RX_PF_EOF</name>
          </field>
        </fields>
        <name>HOST_SLC1HOST_TOKEN_RDATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>HOST_SLC0HOST_TOKEN0_WD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>HOST_SLC0HOST_TOKEN1_WD</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_TOKEN_WDATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>HOST_SLC1HOST_TOKEN0_WD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <name>HOST_SLC1HOST_TOKEN1_WD</name>
          </field>
        </fields>
        <name>HOST_SLC1HOST_TOKEN_WDATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_TOKEN0_DEC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_TOKEN1_DEC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_TOKEN0_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_TOKEN1_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_TOKEN0_DEC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_TOKEN1_DEC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_TOKEN0_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_TOKEN1_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_LEN_WR</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_TOKEN_CON</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT3_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT4_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT5_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT6_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT7_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN0_1TO0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN1_1TO0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN0_0TO1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN1_0TO1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_SOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_TX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_UDF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TX_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_PF_VALID_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT3_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_NEW_PACKET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_HOST_RD_RETRY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_GPIO_SDIO_INT_CLR</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT3_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT4_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT5_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT6_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT7_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN0_1TO0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN1_1TO0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN0_0TO1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN1_0TO1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_SOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_TX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_UDF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TX_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_PF_VALID_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT3_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_WIFI_RX_NEW_PACKET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_HOST_RD_RETRY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_BT_RX_NEW_PACKET_INT_CLR</name>
          </field>
        </fields>
        <name>HOST_SLC1HOST_INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOHOST_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOHOST_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOHOST_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOHOST_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOHOST_BIT4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOHOST_BIT5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOHOST_BIT6_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOHOST_BIT7_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOKEN0_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOKEN1_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOKEN0_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TOKEN1_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0HOST_RX_SOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0HOST_RX_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0HOST_RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0HOST_TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_RX_UDF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_TX_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_RX_PF_VALID_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_EXT_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_EXT_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_EXT_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_EXT_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_RX_NEW_PACKET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC0_HOST_RD_RETRY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_GPIO_SDIO_INT_ENA</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_FUNC1_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOHOST_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOHOST_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOHOST_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOHOST_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOHOST_BIT4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOHOST_BIT5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOHOST_BIT6_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOHOST_BIT7_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOKEN0_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOKEN1_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOKEN0_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TOKEN1_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1HOST_RX_SOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1HOST_RX_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1HOST_RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1HOST_TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_RX_UDF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_TX_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_RX_PF_VALID_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_EXT_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_EXT_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_EXT_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_EXT_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_WIFI_RX_NEW_PACKET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_HOST_RD_RETRY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN1_SLC1_BT_RX_NEW_PACKET_INT_ENA</name>
          </field>
        </fields>
        <name>HOST_SLC1HOST_FUNC1_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOHOST_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOHOST_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOHOST_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOHOST_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOHOST_BIT4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOHOST_BIT5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOHOST_BIT6_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOHOST_BIT7_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOKEN0_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOKEN1_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOKEN0_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TOKEN1_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0HOST_RX_SOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0HOST_RX_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0HOST_RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0HOST_TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_RX_UDF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_TX_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_RX_PF_VALID_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_EXT_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_EXT_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_EXT_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_EXT_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_RX_NEW_PACKET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC0_HOST_RD_RETRY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_GPIO_SDIO_INT_ENA</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_FUNC2_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOHOST_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOHOST_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOHOST_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOHOST_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOHOST_BIT4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOHOST_BIT5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOHOST_BIT6_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOHOST_BIT7_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOKEN0_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOKEN1_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOKEN0_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TOKEN1_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1HOST_RX_SOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1HOST_RX_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1HOST_RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1HOST_TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_RX_UDF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_TX_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_RX_PF_VALID_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_EXT_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_EXT_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_EXT_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_EXT_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_WIFI_RX_NEW_PACKET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_HOST_RD_RETRY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_FN2_SLC1_BT_RX_NEW_PACKET_INT_ENA</name>
          </field>
        </fields>
        <name>HOST_SLC1HOST_FUNC2_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT6_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT7_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN0_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN1_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN0_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN1_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_SOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_UDF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TX_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_PF_VALID_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_NEW_PACKET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_HOST_RD_RETRY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_GPIO_SDIO_INT_ENA</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT6_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT7_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN0_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN1_1TO0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN0_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN1_0TO1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_SOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_UDF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TX_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_PF_VALID_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_WIFI_RX_NEW_PACKET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_HOST_RD_RETRY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_BT_RX_NEW_PACKET_INT_ENA</name>
          </field>
        </fields>
        <name>HOST_SLC1HOST_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>HOST_SLC0HOST_RX_INFOR</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_RX_INFOR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <name>HOST_SLC1HOST_RX_INFOR</name>
          </field>
        </fields>
        <name>HOST_SLC1HOST_RX_INFOR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_SLC0HOST_LEN_WD</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_LEN_WD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_SLC_APBWIN_WDATA</name>
          </field>
        </fields>
        <name>HOST_SLC_APBWIN_WDATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <name>HOST_SLC_APBWIN_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC_APBWIN_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC_APBWIN_START</name>
          </field>
        </fields>
        <name>HOST_SLC_APBWIN_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_SLC_APBWIN_RDATA</name>
          </field>
        </fields>
        <name>HOST_SLC_APBWIN_RDATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>HOST_SLCHOST_SLC0_BIT7_CLRADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>HOST_SLCHOST_SLC0_BIT6_CLRADDR</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_RDCLR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C044</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>HOST_SLCHOST_SLC1_BIT7_CLRADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x9</bitWidth>
            <name>HOST_SLCHOST_SLC1_BIT6_CLRADDR</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_RDCLR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C1E0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT1_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT2_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT3_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT4_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT5_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT6_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOHOST_BIT7_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN0_1TO0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN1_1TO0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN0_0TO1_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TOKEN1_0TO1_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_SOF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_EOF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_RX_START_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0HOST_TX_START_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_UDF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_TX_OVF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_PF_VALID_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT1_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT2_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_EXT_BIT3_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_RX_NEW_PACKET_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC0_HOST_RD_RETRY_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_GPIO_SDIO_INT_ENA1</name>
          </field>
        </fields>
        <name>HOST_SLC0HOST_INT_ENA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT1_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT2_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT3_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT4_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT5_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT6_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOHOST_BIT7_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN0_1TO0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN1_1TO0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN0_0TO1_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TOKEN1_0TO1_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_SOF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_EOF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_RX_START_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1HOST_TX_START_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_UDF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_TX_OVF_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_RX_PF_VALID_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT0_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT1_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT2_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_EXT_BIT3_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_WIFI_RX_NEW_PACKET_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_HOST_RD_RETRY_INT_ENA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SLC1_BT_RX_NEW_PACKET_INT_ENA1</name>
          </field>
        </fields>
        <name>HOST_SLC1HOST_INT_ENA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x178</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_SLCHOST_DATE</name>
          </field>
        </fields>
        <name>HOST_SLCHOSTDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x16022500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>HOST_SLCHOST_ID</name>
          </field>
        </fields>
        <name>HOST_SLCHOSTID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x600</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HOST_FRC_SDIO11</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HOST_FRC_SDIO20</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HOST_FRC_NEG_SAMP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HOST_FRC_POS_SAMP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HOST_FRC_QUICK_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SDIO20_INT_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_SDIO_PAD_PULLUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>HOST_HSPEED_CON_EN</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HOST_SDIO20_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HOST_SDIO_NEG_SAMP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x5</bitWidth>
            <name>HOST_SDIO_QUICK_IN</name>
          </field>
        </fields>
        <name>HOST_SLCHOST_INF_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x110</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF43000</baseAddress>
    <description>SPI (Serial Peripheral Interface) Controller</description>
    <groupName>SPI</groupName>
    <interrupts>
      <interrupt>
        <name>SPI0</name>
        <value>0x1C</value>
      </interrupt>
    </interrupts>
    <name>SPI0</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program erase resume bit  program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program erase suspend bit  program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>User define command enable.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>USR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Drive Flash into high performance mode.  The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_HPM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit combined with reg_resandres bit releases Flash from the power-down state or high performance mode and obtains the devices ID. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Drive Flash into power down.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_DP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Chip erase enable. Chip erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Block erase enable. A 64KB block is erased via SPI command D8H.  Block erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_BE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sector erase enable. A 4KB sector is erased via SPI command 20H. Sector erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_SE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Page program enable(1 byte ~256 bytes data to be programmed). Page program operation  will be triggered when the bit is set. The bit will be cleared once the operation done .1: enable 0: disable.</description>
            <name>FLASH_PP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write status register enable.   Write status operation  will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_WRSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read status register-1.  Read status operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_RDSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read JEDEC ID . Read ID command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_RDID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write flash disable. Write disable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_WRDI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write flash enable.  Write enable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_WREN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read flash enable. Read flash operation will be triggered when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_READ</name>
          </field>
        </fields>
        <name>CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields></fields>
        <name>ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1  initialize crc32 module before writing encrypted data to flash. Active low.</description>
            <name>FCS_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1  enable crc32 when writing encrypted data to flash. 1: enable  0:disable</description>
            <name>TX_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wait flash idle when program flash or erase flash. 1: enable 0: disable.</description>
            <name>WAIT_FLASH_IDLE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the bits: spi_fread_qio  spi_fread_dio  spi_fread_qout and spi_fread_dout. 1: enable 0: disable.</description>
            <name>FASTRD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations  read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The Device ID is read out to SPI_RD_STATUS register, this bit combine with spi_flash_res bit. 1: enable 0: disable.</description>
            <name>RESANDRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write protect signal output when SPI is idle.  1: output high  0: output low.</description>
            <name>WP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>two bytes data will be written to status register when it is set. 1: enable 0: disable.</description>
            <name>WRSR_2B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In read-data (MISO) phase 1: LSB first 0: MSB first</description>
            <name>RD_BIT_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In command address write-data (MOSI) phases 1: LSB firs 0: MSB first</description>
            <name>WR_BIT_ORDER</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20A400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>Delay cycles of resume Flash when resume Flash is enable by spi clock.</description>
            <name>CS_HOLD_DELAY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>SPI cs signal is delayed by spi clock cycles</description>
            <name>CS_HOLD_DELAY</name>
          </field>
        </fields>
        <name>CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5FFF0000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In the slave mode, it is the status for master to read out.</description>
            <name>STATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Mode bits in the flash fast read mode, it is combined with spi_fastrd_mode bit.</description>
            <name>WB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode,it is the status for master to read out.</description>
            <name>STATUS_EXT</name>
          </field>
        </fields>
        <name>RD_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>(cycles-1) of ¡°prepare¡± phase by spi clock, this bits combined with spi_cs_setup bit.</description>
            <name>SETUP_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>delay cycles of cs pin by spi clock, this bits combined with spi_cs_hold bit.</description>
            <name>HOLD_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>modify spi clock duty ratio when the value is lager than 8, the bits are combined with spi_clkcnt_N bits and spi_clkcnt_L bits.</description>
            <name>CK_OUT_LOW_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>modify spi clock duty ratio when the value is lager than 8, the bits are combined with spi_clkcnt_N bits and spi_clkcnt_H bits.</description>
            <name>CK_OUT_HIGH_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>MISO signals are delayed by spi_clk. 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle  else delayed by half cycle  3: delayed one cycle</description>
            <name>MISO_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>MISO signals are delayed by system clock cycles</description>
            <name>MISO_DELAY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>MOSI signals are delayed by spi_clk. 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle  else delayed by half cycle  3: delayed one cycle</description>
            <name>MOSI_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>MOSI signals are delayed by system clock cycles</description>
            <name>MOSI_DELAY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>spi_cs signal is delayed by spi_clk . 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle   else delayed by half cycle  3: delayed one cycle</description>
            <name>CS_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>spi_cs signal is delayed by system clock cycles</description>
            <name>CS_DELAY_NUM</name>
          </field>
        </fields>
        <name>CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x11</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it must be equal to spi_clkcnt_N. In the slave mode it must be 0.</description>
            <name>CLKCNT_L</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it must be floor((spi_clkcnt_N+1)/2-1). In the slave mode it must be 0.</description>
            <name>CLKCNT_H</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it is the divider of spi_clk. So spi_clk frequency is system/(spi_clkdiv_pre+1)/(spi_clkcnt_N+1)</description>
            <name>CLKCNT_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>In the master mode it is pre-divider of spi_clk.</description>
            <name>CLKDIV_PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the master mode 1: spi_clk is eqaul to system 0: spi_clk is divided from system clock.</description>
            <name>CLK_EQU_SYSCLK</name>
          </field>
        </fields>
        <name>CLOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80003043</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to enable full duplex communication. 1: enable 0: disable.</description>
            <name>DOUTDIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs keep low when spi is in ¡°done¡± phase. 1: enable 0: disable.</description>
            <name>CS_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs is enable when spi is in ¡°prepare¡± phase. 1: enable 0: disable.</description>
            <name>CS_SETUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode  the bit is same as spi_ck_out_edge in master mode. It is combined with  spi_miso_delay_mode bits.</description>
            <name>CK_I_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the bit combined with spi_mosi_delay_mode bits to set mosi signal delay mode.</description>
            <name>CK_OUT_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In read-data (MISO) phase 1: big-endian 0: little_endian</description>
            <name>RD_BYTE_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In command address write-data (MOSI) phases 1: big-endian 0: litte_endian</description>
            <name>WR_BYTE_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 2 signals</description>
            <name>FWRITE_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 4 signals</description>
            <name>FWRITE_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations address phase and read-data phase apply 2 signals.</description>
            <name>FWRITE_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations address phase and read-data phase apply 4 signals.</description>
            <name>FWRITE_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to enable 3-line half duplex communication  mosi and miso signals share the same pin. 1: enable 0: disable.</description>
            <name>SIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>It is combined with hold bits to set the polarity of spi hold line  1: spi will be held when spi hold line is high  0: spi will be held when spi hold line is low</description>
            <name>USR_HOLD_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at data out state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DOUT_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at data in state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DIN_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at dummy state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DUMMY_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at address state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_ADDR_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at command state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_CMD_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at prepare state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_PREP_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.</description>
            <name>USR_MISO_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.</description>
            <name>USR_MOSI_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi clock is disable in dummy phase when the bit is enable.</description>
            <name>USR_DUMMY_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the write-data phase of an operation.</description>
            <name>USR_MOSI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the read-data phase of an operation.</description>
            <name>USR_MISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the dummy phase of an operation.</description>
            <name>USR_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the address phase of an operation.</description>
            <name>USR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the command phase of an operation.</description>
            <name>USR_COMMAND</name>
          </field>
        </fields>
        <name>USER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80000040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The length in spi_clk cycles of dummy phase. The register value shall be (cycle_num-1).</description>
            <name>USR_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>USR_ADDR_BITLEN</name>
          </field>
        </fields>
        <name>USER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5C000007</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The value of  command.</description>
            <name>USR_COMMAND_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The length in bits of command phase. The register value shall be (bit_num-1)</description>
            <name>USR_COMMAND_BITLEN</name>
          </field>
        </fields>
        <name>USER2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x70000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>The length in bits of write-data. The register value shall be (bit_num-1).</description>
            <name>USR_MOSI_DBITLEN</name>
          </field>
        </fields>
        <name>MOSI_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>The length in bits of  read-data. The register value shall be (bit_num-1).</description>
            <name>USR_MISO_DBITLEN</name>
          </field>
        </fields>
        <name>MISO_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>In the slave mode this register are the status register for the master to write into. In the master mode this register are the higher 32bits in the 64 bits address condition.</description>
            <name>SLV_WR_ST</name>
          </field>
        </fields>
        <name>SLV_WR_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS0 pin enable, 1: disable CS0, 0: spi_cs0 signal is from/to CS0 pin</description>
            <name>CS0_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS1 pin enable, 1: disable CS1, 0: spi_cs1 signal is from/to CS1 pin</description>
            <name>CS1_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS2 pin enable, 1: disable CS2, 0: spi_cs2 signal is from/to CS2 pin</description>
            <name>CS2_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk out disable  0: spi clk out enable</description>
            <name>CK_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the master mode  the bits are the polarity of spi cs line  the value is equivalent to spi_cs ^ spi_master_cs_pol.</description>
            <name>MASTER_CS_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the master mode  spi cs line is enable as spi clk  it is combined with spi_cs0_dis spi_cs1_dis spi_cs2_dis.</description>
            <name>MASTER_CK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk line is high when idle     0: spi clk line is low when idle</description>
            <name>CK_IDLE_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs line keep low when the bit is set.</description>
            <name>CS_KEEP_ACTIVE</name>
          </field>
        </fields>
        <name>PIN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of read-buffer operation in the slave mode.</description>
            <name>SLV_RD_BUF_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of write-buffer operation in the slave mode.</description>
            <name>SLV_WR_BUF_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of read-status operation in the slave mode.</description>
            <name>SLV_RD_STA_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of write-status operation in the slave mode.</description>
            <name>SLV_WR_STA_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of any operation in both the master mode and the slave mode.</description>
            <name>TRANS_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Interrupt enable bits for the below 5 sources</description>
            <name>INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>In the slave mode  this bits used to synchronize the input spi cs signal and eliminate spi cs  jitter.</description>
            <name>CS_I_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the slave mode it is the value of command.</description>
            <name>SLV_LAST_COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the slave mode it is the state of spi state machine.</description>
            <name>SLV_LAST_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The operations counter in both the master mode and the slave mode. 4: read-status</description>
            <name>TRANS_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: slave mode commands are defined in SPI_SLAVE3.  0: slave mode commands are fixed as: 1: write-status 2: write-buffer and 3: read-buffer.</description>
            <name>SLV_CMD_DEFINE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write and read status enable  in the slave mode</description>
            <name>SLV_WR_RD_STA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write and read buffer enable in the slave mode</description>
            <name>SLV_WR_RD_BUF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: slave mode 0: master mode.</description>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software reset enable, reset the spi clock line cs line and data lines.</description>
            <name>SYNC_RESET</name>
          </field>
        </fields>
        <name>SLAVE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for read-buffer operations.</description>
            <name>SLV_RDBUF_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for write-buffer operations.</description>
            <name>SLV_WRBUF_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for read-status operations.</description>
            <name>SLV_RDSTA_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for write-status operations.</description>
            <name>SLV_WRSTA_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the slave mode it is the address length in bits for write-buffer operation. The register value shall be (bit_num-1).</description>
            <name>SLV_WR_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the slave mode it is the address length in bits for read-buffer operation. The register value shall be (bit_num-1).</description>
            <name>SLV_RD_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode  1:read register of SPI_SLV_WR_STATUS  0: read register of SPI_RD_STATUS.</description>
            <name>SLV_STATUS_READBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode enable fast read status.</description>
            <name>SLV_STATUS_FAST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>In the slave mode it is the length of status bit.</description>
            <name>SLV_STATUS_BITLEN</name>
          </field>
        </fields>
        <name>SLAVE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for read-status operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_RDSTA_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for write-status operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_WRSTA_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for read-buffer operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_RDBUF_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for write-buffer operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_WRBUF_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <name>SLAVE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of read-buffer command.</description>
            <name>SLV_RDBUF_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of write-buffer command.</description>
            <name>SLV_WRBUF_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of read-status command.</description>
            <name>SLV_RDSTA_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of write-status command.</description>
            <name>SLV_WRSTA_CMD_VALUE</name>
          </field>
        </fields>
        <name>SLAVE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the length in bits for write-buffer operations. The register value shall be (bit_num-1).</description>
            <name>SLV_WRBUF_DBITLEN</name>
          </field>
        </fields>
        <name>SLV_WRBUF_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the length in bits for read-buffer operations. The register value shall be (bit_num-1).</description>
            <name>SLV_RDBUF_DBITLEN</name>
          </field>
        </fields>
        <name>SLV_RDBUF_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  Cache access enable  1: enable  0:disable.</description>
            <name>CACHE_REQ_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  cache  read flash with 4 bytes command  1: enable  0:disable.</description>
            <name>CACHE_USR_CMD_4BYTE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  cache  read flash for user define command  1: enable  0:disable.</description>
            <name>CACHE_FLASH_USR_CMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  spi1 send suspend command before cache read flash 1: enable  0:disable.</description>
            <name>CACHE_FLASH_PES_EN</name>
          </field>
        </fields>
        <name>CACHE_FCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  spi dual I/O mode enable  1: enable  0:disable</description>
            <name>USR_SRAM_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  spi quad I/O mode enable  1: enable  0:disable</description>
            <name>USR_SRAM_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  it is the enable bit of dummy phase for write operations.</description>
            <name>USR_WR_SRAM_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  it is the enable bit of dummy phase for read operations.</description>
            <name>USR_RD_SRAM_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode cache read sram for user define command.</description>
            <name>CACHE_SRAM_USR_RCMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>For SPI0  In the sram mode  it is the byte length of spi read sram data.</description>
            <name>SRAM_BYTES_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>For SPI0  In the sram mode  it is the length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>SRAM_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>For SPI0  In the sram mode  it is the length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>SRAM_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode cache write sram for user define command</description>
            <name>CACHE_SRAM_USR_WCMD</name>
          </field>
        </fields>
        <name>CACHE_SCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x15C04830</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM DIO mode enable .  SRAM DIO enable command will be send when the bit is set. The bit will be cleared once the operation done.</description>
            <name>SRAM_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM QIO mode enable .  SRAM QIO enable command will be send when the bit is set. The bit will be cleared once the operation done.</description>
            <name>SRAM_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM IO mode reset enable. SRAM IO mode reset operation will be triggered when the bit is set. The bit will be cleared once the operation done</description>
            <name>SRAM_RSTIO</name>
          </field>
        </fields>
        <name>SRAM_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>For SPI0 When cache mode is enable it is the read command value of command phase for SRAM.</description>
            <name>CACHE_SRAM_USR_RD_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>For SPI0 When cache mode is enable it is the length in bits of command phase for SRAM. The register value shall be (bit_num-1).</description>
            <name>CACHE_SRAM_USR_RD_CMD_BITLEN</name>
          </field>
        </fields>
        <name>SRAM_DRD_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>For SPI0 When cache mode is enable it is the write command value of command phase for SRAM.</description>
            <name>CACHE_SRAM_USR_WR_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>For SPI0 When cache mode is enable it is the in bits of command phase  for SRAM. The register value shall be (bit_num-1).</description>
            <name>CACHE_SRAM_USR_WR_CMD_BITLEN</name>
          </field>
        </fields>
        <name>SRAM_DWR_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the bit length of read data. The value is the length - 1.</description>
            <name>SLV_RDATA_BIT</name>
          </field>
        </fields>
        <name>SLV_RD_BIT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF0</name>
          </field>
        </fields>
        <name>W0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF1</name>
          </field>
        </fields>
        <name>W1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF2</name>
          </field>
        </fields>
        <name>W2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF3</name>
          </field>
        </fields>
        <name>W3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF4</name>
          </field>
        </fields>
        <name>W4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF5</name>
          </field>
        </fields>
        <name>W5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF6</name>
          </field>
        </fields>
        <name>W6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF7</name>
          </field>
        </fields>
        <name>W7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF8</name>
          </field>
        </fields>
        <name>W8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF9</name>
          </field>
        </fields>
        <name>W9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF10</name>
          </field>
        </fields>
        <name>W10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF11</name>
          </field>
        </fields>
        <name>W11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF12</name>
          </field>
        </fields>
        <name>W12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF13</name>
          </field>
        </fields>
        <name>W13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF14</name>
          </field>
        </fields>
        <name>W14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF15</name>
          </field>
        </fields>
        <name>W15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>For SPI1  the value of crc32 for 256 bits data.</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>TX_CRC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>page program delay time  by system clock.</description>
            <name>T_PP_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>page program delay time shift .</description>
            <name>T_PP_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>page program delay enable.</description>
            <name>T_PP_ENA</name>
          </field>
        </fields>
        <name>EXT0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800A0050</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>erase flash delay time by system clock.</description>
            <name>T_ERASE_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>erase flash delay time shift.</description>
            <name>T_ERASE_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>erase flash delay enable.</description>
            <name>T_ERASE_ENA</name>
          </field>
        </fields>
        <name>EXT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800F0000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The status of spi state machine .</description>
            <name>ST</name>
          </field>
        </fields>
        <name>EXT2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is for two SPI masters to share the same cs clock and data signals. The bits of one SPI are set  if the other SPI is busy  the SPI will be hold. 1(3): hold at ¡°idle¡± phase 2: hold at ¡°prepare¡± phase.</description>
            <name>INT_HOLD_ENA</name>
          </field>
        </fields>
        <name>EXT3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to reset in dma fsm and in data fifo pointer.</description>
            <name>IN_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to reset out dma fsm and out data fifo pointer.</description>
            <name>OUT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reset spi dma ahb master fifo pointer.</description>
            <name>AHBM_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reset spi dma ahb master.</description>
            <name>AHBM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set bit to test in link.</description>
            <name>IN_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set bit to test out link.</description>
            <name>OUT_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when the link is empty   jump to next automatically.</description>
            <name>OUT_AUTO_WRBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>out eof flag generation mode . 1: when dma pop all data from fifo  0:when ahb push all data to fifo.</description>
            <name>OUT_EOF_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read descriptor use burst mode when read data for memory.</description>
            <name>OUTDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read descriptor use burst mode when write data to memory.</description>
            <name>INDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data from memory in burst mode.</description>
            <name>OUT_DATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data stop  when in continue tx/rx mode.</description>
            <name>DMA_RX_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma write data stop when in continue tx/rx mode.</description>
            <name>DMA_TX_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma continue tx/rx data.</description>
            <name>DMA_CONTINUE</name>
          </field>
        </fields>
        <name>DMA_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The address of the first outlink descriptor.</description>
            <name>OUTLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to stop to use outlink descriptor.</description>
            <name>OUTLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to start to use outlink descriptor.</description>
            <name>OUTLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to mount on new outlink descriptors.</description>
            <name>OUTLINK_RESTART</name>
          </field>
        </fields>
        <name>DMA_OUT_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The address of the first inlink descriptor.</description>
            <name>INLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when the bit is set  inlink descriptor returns to the next descriptor while a packet is wrong</description>
            <name>INLINK_AUTO_RET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to stop to use inlink descriptor.</description>
            <name>INLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to start to use inlink descriptor.</description>
            <name>INLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to mount on new inlink descriptors.</description>
            <name>INLINK_RESTART</name>
          </field>
        </fields>
        <name>DMA_IN_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data status bit.</description>
            <name>DMA_RX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma write data status bit.</description>
            <name>DMA_TX_EN</name>
          </field>
        </fields>
        <name>DMA_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing usage of a outlink descriptor .</description>
            <name>OUT_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_ENA</name>
          </field>
        </fields>
        <name>DMA_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_RAW</name>
          </field>
        </fields>
        <name>DMA_INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_ST</name>
          </field>
        </fields>
        <name>DMA_INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_CLR</name>
          </field>
        </fields>
        <name>DMA_INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The inlink descriptor address when spi dma produce receiving error.</description>
            <name>DMA_IN_ERR_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>IN_ERR_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The last inlink descriptor address when spi dma produce from_suc_eof.</description>
            <name>DMA_IN_SUC_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>IN_SUC_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in descriptor pointer.</description>
            <name>DMA_INLINK_DSCR</name>
          </field>
        </fields>
        <name>INLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of next in descriptor pointer.</description>
            <name>DMA_INLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in descriptor data buffer pointer.</description>
            <name>DMA_INLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of buffer relative to the outlink descriptor that produce eof.</description>
            <name>DMA_OUT_EOF_BFR_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_BFR_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The last outlink descriptor address when spi dma produce to_eof.</description>
            <name>DMA_OUT_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out descriptor pointer.</description>
            <name>DMA_OUTLINK_DSCR</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of next out descriptor pointer.</description>
            <name>DMA_OUTLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out descriptor data buffer pointer.</description>
            <name>DMA_OUTLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>spi dma read data from memory status.</description>
            <name>DMA_OUT_STATUS</name>
          </field>
        </fields>
        <name>DMA_RSTATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>spi dma write data to memory status.</description>
            <name>DMA_IN_STATUS</name>
          </field>
        </fields>
        <name>DMA_TSTATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>SPI register version.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1604270</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x110</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF42000</baseAddress>
    <derivedFrom>SPI0</derivedFrom>
    <description>SPI (Serial Peripheral Interface) Controller</description>
    <groupName>SPI</groupName>
    <interrupts>
      <interrupt>
        <name>SPI1</name>
        <value>0x1D</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>SPI1_DMA</name>
        <value>0x34</value>
      </interrupt>
    </interrupts>
    <name>SPI1</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program erase resume bit  program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program erase suspend bit  program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>User define command enable.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>USR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Drive Flash into high performance mode.  The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_HPM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit combined with reg_resandres bit releases Flash from the power-down state or high performance mode and obtains the devices ID. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Drive Flash into power down.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_DP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Chip erase enable. Chip erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Block erase enable. A 64KB block is erased via SPI command D8H.  Block erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_BE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sector erase enable. A 4KB sector is erased via SPI command 20H. Sector erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_SE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Page program enable(1 byte ~256 bytes data to be programmed). Page program operation  will be triggered when the bit is set. The bit will be cleared once the operation done .1: enable 0: disable.</description>
            <name>FLASH_PP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write status register enable.   Write status operation  will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_WRSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read status register-1.  Read status operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_RDSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read JEDEC ID . Read ID command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_RDID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write flash disable. Write disable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_WRDI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write flash enable.  Write enable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_WREN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read flash enable. Read flash operation will be triggered when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_READ</name>
          </field>
        </fields>
        <name>CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields></fields>
        <name>ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1  initialize crc32 module before writing encrypted data to flash. Active low.</description>
            <name>FCS_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1  enable crc32 when writing encrypted data to flash. 1: enable  0:disable</description>
            <name>TX_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wait flash idle when program flash or erase flash. 1: enable 0: disable.</description>
            <name>WAIT_FLASH_IDLE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the bits: spi_fread_qio  spi_fread_dio  spi_fread_qout and spi_fread_dout. 1: enable 0: disable.</description>
            <name>FASTRD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations  read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The Device ID is read out to SPI_RD_STATUS register, this bit combine with spi_flash_res bit. 1: enable 0: disable.</description>
            <name>RESANDRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write protect signal output when SPI is idle.  1: output high  0: output low.</description>
            <name>WP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>two bytes data will be written to status register when it is set. 1: enable 0: disable.</description>
            <name>WRSR_2B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In read-data (MISO) phase 1: LSB first 0: MSB first</description>
            <name>RD_BIT_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In command address write-data (MOSI) phases 1: LSB firs 0: MSB first</description>
            <name>WR_BIT_ORDER</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20A400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>Delay cycles of resume Flash when resume Flash is enable by spi clock.</description>
            <name>CS_HOLD_DELAY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>SPI cs signal is delayed by spi clock cycles</description>
            <name>CS_HOLD_DELAY</name>
          </field>
        </fields>
        <name>CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5FFF0000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In the slave mode, it is the status for master to read out.</description>
            <name>STATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Mode bits in the flash fast read mode, it is combined with spi_fastrd_mode bit.</description>
            <name>WB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode,it is the status for master to read out.</description>
            <name>STATUS_EXT</name>
          </field>
        </fields>
        <name>RD_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>(cycles-1) of ¡°prepare¡± phase by spi clock, this bits combined with spi_cs_setup bit.</description>
            <name>SETUP_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>delay cycles of cs pin by spi clock, this bits combined with spi_cs_hold bit.</description>
            <name>HOLD_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>modify spi clock duty ratio when the value is lager than 8, the bits are combined with spi_clkcnt_N bits and spi_clkcnt_L bits.</description>
            <name>CK_OUT_LOW_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>modify spi clock duty ratio when the value is lager than 8, the bits are combined with spi_clkcnt_N bits and spi_clkcnt_H bits.</description>
            <name>CK_OUT_HIGH_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>MISO signals are delayed by spi_clk. 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle  else delayed by half cycle  3: delayed one cycle</description>
            <name>MISO_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>MISO signals are delayed by system clock cycles</description>
            <name>MISO_DELAY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>MOSI signals are delayed by spi_clk. 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle  else delayed by half cycle  3: delayed one cycle</description>
            <name>MOSI_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>MOSI signals are delayed by system clock cycles</description>
            <name>MOSI_DELAY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>spi_cs signal is delayed by spi_clk . 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle   else delayed by half cycle  3: delayed one cycle</description>
            <name>CS_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>spi_cs signal is delayed by system clock cycles</description>
            <name>CS_DELAY_NUM</name>
          </field>
        </fields>
        <name>CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x11</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it must be equal to spi_clkcnt_N. In the slave mode it must be 0.</description>
            <name>CLKCNT_L</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it must be floor((spi_clkcnt_N+1)/2-1). In the slave mode it must be 0.</description>
            <name>CLKCNT_H</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it is the divider of spi_clk. So spi_clk frequency is system/(spi_clkdiv_pre+1)/(spi_clkcnt_N+1)</description>
            <name>CLKCNT_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>In the master mode it is pre-divider of spi_clk.</description>
            <name>CLKDIV_PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the master mode 1: spi_clk is eqaul to system 0: spi_clk is divided from system clock.</description>
            <name>CLK_EQU_SYSCLK</name>
          </field>
        </fields>
        <name>CLOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80003043</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to enable full duplex communication. 1: enable 0: disable.</description>
            <name>DOUTDIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs keep low when spi is in ¡°done¡± phase. 1: enable 0: disable.</description>
            <name>CS_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs is enable when spi is in ¡°prepare¡± phase. 1: enable 0: disable.</description>
            <name>CS_SETUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode  the bit is same as spi_ck_out_edge in master mode. It is combined with  spi_miso_delay_mode bits.</description>
            <name>CK_I_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the bit combined with spi_mosi_delay_mode bits to set mosi signal delay mode.</description>
            <name>CK_OUT_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In read-data (MISO) phase 1: big-endian 0: little_endian</description>
            <name>RD_BYTE_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In command address write-data (MOSI) phases 1: big-endian 0: litte_endian</description>
            <name>WR_BYTE_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 2 signals</description>
            <name>FWRITE_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 4 signals</description>
            <name>FWRITE_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations address phase and read-data phase apply 2 signals.</description>
            <name>FWRITE_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations address phase and read-data phase apply 4 signals.</description>
            <name>FWRITE_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to enable 3-line half duplex communication  mosi and miso signals share the same pin. 1: enable 0: disable.</description>
            <name>SIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>It is combined with hold bits to set the polarity of spi hold line  1: spi will be held when spi hold line is high  0: spi will be held when spi hold line is low</description>
            <name>USR_HOLD_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at data out state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DOUT_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at data in state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DIN_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at dummy state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DUMMY_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at address state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_ADDR_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at command state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_CMD_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at prepare state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_PREP_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.</description>
            <name>USR_MISO_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.</description>
            <name>USR_MOSI_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi clock is disable in dummy phase when the bit is enable.</description>
            <name>USR_DUMMY_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the write-data phase of an operation.</description>
            <name>USR_MOSI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the read-data phase of an operation.</description>
            <name>USR_MISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the dummy phase of an operation.</description>
            <name>USR_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the address phase of an operation.</description>
            <name>USR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the command phase of an operation.</description>
            <name>USR_COMMAND</name>
          </field>
        </fields>
        <name>USER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80000040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The length in spi_clk cycles of dummy phase. The register value shall be (cycle_num-1).</description>
            <name>USR_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>USR_ADDR_BITLEN</name>
          </field>
        </fields>
        <name>USER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5C000007</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The value of  command.</description>
            <name>USR_COMMAND_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The length in bits of command phase. The register value shall be (bit_num-1)</description>
            <name>USR_COMMAND_BITLEN</name>
          </field>
        </fields>
        <name>USER2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x70000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>The length in bits of write-data. The register value shall be (bit_num-1).</description>
            <name>USR_MOSI_DBITLEN</name>
          </field>
        </fields>
        <name>MOSI_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>The length in bits of  read-data. The register value shall be (bit_num-1).</description>
            <name>USR_MISO_DBITLEN</name>
          </field>
        </fields>
        <name>MISO_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>In the slave mode this register are the status register for the master to write into. In the master mode this register are the higher 32bits in the 64 bits address condition.</description>
            <name>SLV_WR_ST</name>
          </field>
        </fields>
        <name>SLV_WR_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS0 pin enable, 1: disable CS0, 0: spi_cs0 signal is from/to CS0 pin</description>
            <name>CS0_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS1 pin enable, 1: disable CS1, 0: spi_cs1 signal is from/to CS1 pin</description>
            <name>CS1_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS2 pin enable, 1: disable CS2, 0: spi_cs2 signal is from/to CS2 pin</description>
            <name>CS2_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk out disable  0: spi clk out enable</description>
            <name>CK_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the master mode  the bits are the polarity of spi cs line  the value is equivalent to spi_cs ^ spi_master_cs_pol.</description>
            <name>MASTER_CS_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the master mode  spi cs line is enable as spi clk  it is combined with spi_cs0_dis spi_cs1_dis spi_cs2_dis.</description>
            <name>MASTER_CK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk line is high when idle     0: spi clk line is low when idle</description>
            <name>CK_IDLE_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs line keep low when the bit is set.</description>
            <name>CS_KEEP_ACTIVE</name>
          </field>
        </fields>
        <name>PIN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of read-buffer operation in the slave mode.</description>
            <name>SLV_RD_BUF_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of write-buffer operation in the slave mode.</description>
            <name>SLV_WR_BUF_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of read-status operation in the slave mode.</description>
            <name>SLV_RD_STA_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of write-status operation in the slave mode.</description>
            <name>SLV_WR_STA_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of any operation in both the master mode and the slave mode.</description>
            <name>TRANS_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Interrupt enable bits for the below 5 sources</description>
            <name>INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>In the slave mode  this bits used to synchronize the input spi cs signal and eliminate spi cs  jitter.</description>
            <name>CS_I_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the slave mode it is the value of command.</description>
            <name>SLV_LAST_COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the slave mode it is the state of spi state machine.</description>
            <name>SLV_LAST_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The operations counter in both the master mode and the slave mode. 4: read-status</description>
            <name>TRANS_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: slave mode commands are defined in SPI_SLAVE3.  0: slave mode commands are fixed as: 1: write-status 2: write-buffer and 3: read-buffer.</description>
            <name>SLV_CMD_DEFINE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write and read status enable  in the slave mode</description>
            <name>SLV_WR_RD_STA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write and read buffer enable in the slave mode</description>
            <name>SLV_WR_RD_BUF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: slave mode 0: master mode.</description>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software reset enable, reset the spi clock line cs line and data lines.</description>
            <name>SYNC_RESET</name>
          </field>
        </fields>
        <name>SLAVE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for read-buffer operations.</description>
            <name>SLV_RDBUF_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for write-buffer operations.</description>
            <name>SLV_WRBUF_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for read-status operations.</description>
            <name>SLV_RDSTA_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for write-status operations.</description>
            <name>SLV_WRSTA_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the slave mode it is the address length in bits for write-buffer operation. The register value shall be (bit_num-1).</description>
            <name>SLV_WR_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the slave mode it is the address length in bits for read-buffer operation. The register value shall be (bit_num-1).</description>
            <name>SLV_RD_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode  1:read register of SPI_SLV_WR_STATUS  0: read register of SPI_RD_STATUS.</description>
            <name>SLV_STATUS_READBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode enable fast read status.</description>
            <name>SLV_STATUS_FAST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>In the slave mode it is the length of status bit.</description>
            <name>SLV_STATUS_BITLEN</name>
          </field>
        </fields>
        <name>SLAVE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for read-status operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_RDSTA_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for write-status operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_WRSTA_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for read-buffer operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_RDBUF_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for write-buffer operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_WRBUF_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <name>SLAVE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of read-buffer command.</description>
            <name>SLV_RDBUF_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of write-buffer command.</description>
            <name>SLV_WRBUF_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of read-status command.</description>
            <name>SLV_RDSTA_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of write-status command.</description>
            <name>SLV_WRSTA_CMD_VALUE</name>
          </field>
        </fields>
        <name>SLAVE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the length in bits for write-buffer operations. The register value shall be (bit_num-1).</description>
            <name>SLV_WRBUF_DBITLEN</name>
          </field>
        </fields>
        <name>SLV_WRBUF_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the length in bits for read-buffer operations. The register value shall be (bit_num-1).</description>
            <name>SLV_RDBUF_DBITLEN</name>
          </field>
        </fields>
        <name>SLV_RDBUF_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  Cache access enable  1: enable  0:disable.</description>
            <name>CACHE_REQ_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  cache  read flash with 4 bytes command  1: enable  0:disable.</description>
            <name>CACHE_USR_CMD_4BYTE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  cache  read flash for user define command  1: enable  0:disable.</description>
            <name>CACHE_FLASH_USR_CMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  spi1 send suspend command before cache read flash 1: enable  0:disable.</description>
            <name>CACHE_FLASH_PES_EN</name>
          </field>
        </fields>
        <name>CACHE_FCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  spi dual I/O mode enable  1: enable  0:disable</description>
            <name>USR_SRAM_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  spi quad I/O mode enable  1: enable  0:disable</description>
            <name>USR_SRAM_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  it is the enable bit of dummy phase for write operations.</description>
            <name>USR_WR_SRAM_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  it is the enable bit of dummy phase for read operations.</description>
            <name>USR_RD_SRAM_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode cache read sram for user define command.</description>
            <name>CACHE_SRAM_USR_RCMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>For SPI0  In the sram mode  it is the byte length of spi read sram data.</description>
            <name>SRAM_BYTES_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>For SPI0  In the sram mode  it is the length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>SRAM_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>For SPI0  In the sram mode  it is the length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>SRAM_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode cache write sram for user define command</description>
            <name>CACHE_SRAM_USR_WCMD</name>
          </field>
        </fields>
        <name>CACHE_SCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x15C04830</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM DIO mode enable .  SRAM DIO enable command will be send when the bit is set. The bit will be cleared once the operation done.</description>
            <name>SRAM_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM QIO mode enable .  SRAM QIO enable command will be send when the bit is set. The bit will be cleared once the operation done.</description>
            <name>SRAM_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM IO mode reset enable. SRAM IO mode reset operation will be triggered when the bit is set. The bit will be cleared once the operation done</description>
            <name>SRAM_RSTIO</name>
          </field>
        </fields>
        <name>SRAM_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>For SPI0 When cache mode is enable it is the read command value of command phase for SRAM.</description>
            <name>CACHE_SRAM_USR_RD_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>For SPI0 When cache mode is enable it is the length in bits of command phase for SRAM. The register value shall be (bit_num-1).</description>
            <name>CACHE_SRAM_USR_RD_CMD_BITLEN</name>
          </field>
        </fields>
        <name>SRAM_DRD_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>For SPI0 When cache mode is enable it is the write command value of command phase for SRAM.</description>
            <name>CACHE_SRAM_USR_WR_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>For SPI0 When cache mode is enable it is the in bits of command phase  for SRAM. The register value shall be (bit_num-1).</description>
            <name>CACHE_SRAM_USR_WR_CMD_BITLEN</name>
          </field>
        </fields>
        <name>SRAM_DWR_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the bit length of read data. The value is the length - 1.</description>
            <name>SLV_RDATA_BIT</name>
          </field>
        </fields>
        <name>SLV_RD_BIT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF0</name>
          </field>
        </fields>
        <name>W0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF1</name>
          </field>
        </fields>
        <name>W1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF2</name>
          </field>
        </fields>
        <name>W2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF3</name>
          </field>
        </fields>
        <name>W3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF4</name>
          </field>
        </fields>
        <name>W4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF5</name>
          </field>
        </fields>
        <name>W5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF6</name>
          </field>
        </fields>
        <name>W6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF7</name>
          </field>
        </fields>
        <name>W7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF8</name>
          </field>
        </fields>
        <name>W8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF9</name>
          </field>
        </fields>
        <name>W9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF10</name>
          </field>
        </fields>
        <name>W10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF11</name>
          </field>
        </fields>
        <name>W11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF12</name>
          </field>
        </fields>
        <name>W12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF13</name>
          </field>
        </fields>
        <name>W13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF14</name>
          </field>
        </fields>
        <name>W14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF15</name>
          </field>
        </fields>
        <name>W15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>For SPI1  the value of crc32 for 256 bits data.</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>TX_CRC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>page program delay time  by system clock.</description>
            <name>T_PP_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>page program delay time shift .</description>
            <name>T_PP_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>page program delay enable.</description>
            <name>T_PP_ENA</name>
          </field>
        </fields>
        <name>EXT0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800A0050</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>erase flash delay time by system clock.</description>
            <name>T_ERASE_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>erase flash delay time shift.</description>
            <name>T_ERASE_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>erase flash delay enable.</description>
            <name>T_ERASE_ENA</name>
          </field>
        </fields>
        <name>EXT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800F0000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The status of spi state machine .</description>
            <name>ST</name>
          </field>
        </fields>
        <name>EXT2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is for two SPI masters to share the same cs clock and data signals. The bits of one SPI are set  if the other SPI is busy  the SPI will be hold. 1(3): hold at ¡°idle¡± phase 2: hold at ¡°prepare¡± phase.</description>
            <name>INT_HOLD_ENA</name>
          </field>
        </fields>
        <name>EXT3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to reset in dma fsm and in data fifo pointer.</description>
            <name>IN_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to reset out dma fsm and out data fifo pointer.</description>
            <name>OUT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reset spi dma ahb master fifo pointer.</description>
            <name>AHBM_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reset spi dma ahb master.</description>
            <name>AHBM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set bit to test in link.</description>
            <name>IN_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set bit to test out link.</description>
            <name>OUT_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when the link is empty   jump to next automatically.</description>
            <name>OUT_AUTO_WRBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>out eof flag generation mode . 1: when dma pop all data from fifo  0:when ahb push all data to fifo.</description>
            <name>OUT_EOF_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read descriptor use burst mode when read data for memory.</description>
            <name>OUTDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read descriptor use burst mode when write data to memory.</description>
            <name>INDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data from memory in burst mode.</description>
            <name>OUT_DATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data stop  when in continue tx/rx mode.</description>
            <name>DMA_RX_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma write data stop when in continue tx/rx mode.</description>
            <name>DMA_TX_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma continue tx/rx data.</description>
            <name>DMA_CONTINUE</name>
          </field>
        </fields>
        <name>DMA_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The address of the first outlink descriptor.</description>
            <name>OUTLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to stop to use outlink descriptor.</description>
            <name>OUTLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to start to use outlink descriptor.</description>
            <name>OUTLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to mount on new outlink descriptors.</description>
            <name>OUTLINK_RESTART</name>
          </field>
        </fields>
        <name>DMA_OUT_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The address of the first inlink descriptor.</description>
            <name>INLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when the bit is set  inlink descriptor returns to the next descriptor while a packet is wrong</description>
            <name>INLINK_AUTO_RET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to stop to use inlink descriptor.</description>
            <name>INLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to start to use inlink descriptor.</description>
            <name>INLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to mount on new inlink descriptors.</description>
            <name>INLINK_RESTART</name>
          </field>
        </fields>
        <name>DMA_IN_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data status bit.</description>
            <name>DMA_RX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma write data status bit.</description>
            <name>DMA_TX_EN</name>
          </field>
        </fields>
        <name>DMA_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing usage of a outlink descriptor .</description>
            <name>OUT_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_ENA</name>
          </field>
        </fields>
        <name>DMA_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_RAW</name>
          </field>
        </fields>
        <name>DMA_INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_ST</name>
          </field>
        </fields>
        <name>DMA_INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_CLR</name>
          </field>
        </fields>
        <name>DMA_INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The inlink descriptor address when spi dma produce receiving error.</description>
            <name>DMA_IN_ERR_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>IN_ERR_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The last inlink descriptor address when spi dma produce from_suc_eof.</description>
            <name>DMA_IN_SUC_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>IN_SUC_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in descriptor pointer.</description>
            <name>DMA_INLINK_DSCR</name>
          </field>
        </fields>
        <name>INLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of next in descriptor pointer.</description>
            <name>DMA_INLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in descriptor data buffer pointer.</description>
            <name>DMA_INLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of buffer relative to the outlink descriptor that produce eof.</description>
            <name>DMA_OUT_EOF_BFR_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_BFR_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The last outlink descriptor address when spi dma produce to_eof.</description>
            <name>DMA_OUT_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out descriptor pointer.</description>
            <name>DMA_OUTLINK_DSCR</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of next out descriptor pointer.</description>
            <name>DMA_OUTLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out descriptor data buffer pointer.</description>
            <name>DMA_OUTLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>spi dma read data from memory status.</description>
            <name>DMA_OUT_STATUS</name>
          </field>
        </fields>
        <name>DMA_RSTATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>spi dma write data to memory status.</description>
            <name>DMA_IN_STATUS</name>
          </field>
        </fields>
        <name>DMA_TSTATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>SPI register version.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1604270</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x110</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF64000</baseAddress>
    <derivedFrom>SPI0</derivedFrom>
    <description>SPI (Serial Peripheral Interface) Controller</description>
    <groupName>SPI</groupName>
    <interrupts>
      <interrupt>
        <name>SPI2</name>
        <value>0x1E</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>SPI2_DMA</name>
        <value>0x35</value>
      </interrupt>
    </interrupts>
    <name>SPI2</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program erase resume bit  program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program erase suspend bit  program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>User define command enable.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>USR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Drive Flash into high performance mode.  The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_HPM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit combined with reg_resandres bit releases Flash from the power-down state or high performance mode and obtains the devices ID. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Drive Flash into power down.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_DP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Chip erase enable. Chip erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Block erase enable. A 64KB block is erased via SPI command D8H.  Block erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_BE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sector erase enable. A 4KB sector is erased via SPI command 20H. Sector erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_SE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Page program enable(1 byte ~256 bytes data to be programmed). Page program operation  will be triggered when the bit is set. The bit will be cleared once the operation done .1: enable 0: disable.</description>
            <name>FLASH_PP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write status register enable.   Write status operation  will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_WRSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read status register-1.  Read status operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_RDSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read JEDEC ID . Read ID command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_RDID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write flash disable. Write disable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_WRDI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write flash enable.  Write enable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_WREN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read flash enable. Read flash operation will be triggered when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_READ</name>
          </field>
        </fields>
        <name>CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields></fields>
        <name>ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1  initialize crc32 module before writing encrypted data to flash. Active low.</description>
            <name>FCS_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1  enable crc32 when writing encrypted data to flash. 1: enable  0:disable</description>
            <name>TX_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wait flash idle when program flash or erase flash. 1: enable 0: disable.</description>
            <name>WAIT_FLASH_IDLE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the bits: spi_fread_qio  spi_fread_dio  spi_fread_qout and spi_fread_dout. 1: enable 0: disable.</description>
            <name>FASTRD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations  read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The Device ID is read out to SPI_RD_STATUS register, this bit combine with spi_flash_res bit. 1: enable 0: disable.</description>
            <name>RESANDRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write protect signal output when SPI is idle.  1: output high  0: output low.</description>
            <name>WP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>two bytes data will be written to status register when it is set. 1: enable 0: disable.</description>
            <name>WRSR_2B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In read-data (MISO) phase 1: LSB first 0: MSB first</description>
            <name>RD_BIT_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In command address write-data (MOSI) phases 1: LSB firs 0: MSB first</description>
            <name>WR_BIT_ORDER</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20A400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>Delay cycles of resume Flash when resume Flash is enable by spi clock.</description>
            <name>CS_HOLD_DELAY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>SPI cs signal is delayed by spi clock cycles</description>
            <name>CS_HOLD_DELAY</name>
          </field>
        </fields>
        <name>CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5FFF0000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In the slave mode, it is the status for master to read out.</description>
            <name>STATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Mode bits in the flash fast read mode, it is combined with spi_fastrd_mode bit.</description>
            <name>WB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode,it is the status for master to read out.</description>
            <name>STATUS_EXT</name>
          </field>
        </fields>
        <name>RD_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>(cycles-1) of ¡°prepare¡± phase by spi clock, this bits combined with spi_cs_setup bit.</description>
            <name>SETUP_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>delay cycles of cs pin by spi clock, this bits combined with spi_cs_hold bit.</description>
            <name>HOLD_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>modify spi clock duty ratio when the value is lager than 8, the bits are combined with spi_clkcnt_N bits and spi_clkcnt_L bits.</description>
            <name>CK_OUT_LOW_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>modify spi clock duty ratio when the value is lager than 8, the bits are combined with spi_clkcnt_N bits and spi_clkcnt_H bits.</description>
            <name>CK_OUT_HIGH_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>MISO signals are delayed by spi_clk. 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle  else delayed by half cycle  3: delayed one cycle</description>
            <name>MISO_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>MISO signals are delayed by system clock cycles</description>
            <name>MISO_DELAY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>MOSI signals are delayed by spi_clk. 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle  else delayed by half cycle  3: delayed one cycle</description>
            <name>MOSI_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>MOSI signals are delayed by system clock cycles</description>
            <name>MOSI_DELAY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>spi_cs signal is delayed by spi_clk . 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle   else delayed by half cycle  3: delayed one cycle</description>
            <name>CS_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>spi_cs signal is delayed by system clock cycles</description>
            <name>CS_DELAY_NUM</name>
          </field>
        </fields>
        <name>CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x11</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it must be equal to spi_clkcnt_N. In the slave mode it must be 0.</description>
            <name>CLKCNT_L</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it must be floor((spi_clkcnt_N+1)/2-1). In the slave mode it must be 0.</description>
            <name>CLKCNT_H</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it is the divider of spi_clk. So spi_clk frequency is system/(spi_clkdiv_pre+1)/(spi_clkcnt_N+1)</description>
            <name>CLKCNT_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>In the master mode it is pre-divider of spi_clk.</description>
            <name>CLKDIV_PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the master mode 1: spi_clk is eqaul to system 0: spi_clk is divided from system clock.</description>
            <name>CLK_EQU_SYSCLK</name>
          </field>
        </fields>
        <name>CLOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80003043</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to enable full duplex communication. 1: enable 0: disable.</description>
            <name>DOUTDIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs keep low when spi is in ¡°done¡± phase. 1: enable 0: disable.</description>
            <name>CS_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs is enable when spi is in ¡°prepare¡± phase. 1: enable 0: disable.</description>
            <name>CS_SETUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode  the bit is same as spi_ck_out_edge in master mode. It is combined with  spi_miso_delay_mode bits.</description>
            <name>CK_I_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the bit combined with spi_mosi_delay_mode bits to set mosi signal delay mode.</description>
            <name>CK_OUT_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In read-data (MISO) phase 1: big-endian 0: little_endian</description>
            <name>RD_BYTE_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In command address write-data (MOSI) phases 1: big-endian 0: litte_endian</description>
            <name>WR_BYTE_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 2 signals</description>
            <name>FWRITE_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 4 signals</description>
            <name>FWRITE_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations address phase and read-data phase apply 2 signals.</description>
            <name>FWRITE_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations address phase and read-data phase apply 4 signals.</description>
            <name>FWRITE_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to enable 3-line half duplex communication  mosi and miso signals share the same pin. 1: enable 0: disable.</description>
            <name>SIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>It is combined with hold bits to set the polarity of spi hold line  1: spi will be held when spi hold line is high  0: spi will be held when spi hold line is low</description>
            <name>USR_HOLD_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at data out state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DOUT_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at data in state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DIN_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at dummy state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DUMMY_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at address state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_ADDR_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at command state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_CMD_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at prepare state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_PREP_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.</description>
            <name>USR_MISO_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.</description>
            <name>USR_MOSI_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi clock is disable in dummy phase when the bit is enable.</description>
            <name>USR_DUMMY_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the write-data phase of an operation.</description>
            <name>USR_MOSI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the read-data phase of an operation.</description>
            <name>USR_MISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the dummy phase of an operation.</description>
            <name>USR_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the address phase of an operation.</description>
            <name>USR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the command phase of an operation.</description>
            <name>USR_COMMAND</name>
          </field>
        </fields>
        <name>USER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80000040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The length in spi_clk cycles of dummy phase. The register value shall be (cycle_num-1).</description>
            <name>USR_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>USR_ADDR_BITLEN</name>
          </field>
        </fields>
        <name>USER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5C000007</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The value of  command.</description>
            <name>USR_COMMAND_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The length in bits of command phase. The register value shall be (bit_num-1)</description>
            <name>USR_COMMAND_BITLEN</name>
          </field>
        </fields>
        <name>USER2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x70000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>The length in bits of write-data. The register value shall be (bit_num-1).</description>
            <name>USR_MOSI_DBITLEN</name>
          </field>
        </fields>
        <name>MOSI_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>The length in bits of  read-data. The register value shall be (bit_num-1).</description>
            <name>USR_MISO_DBITLEN</name>
          </field>
        </fields>
        <name>MISO_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>In the slave mode this register are the status register for the master to write into. In the master mode this register are the higher 32bits in the 64 bits address condition.</description>
            <name>SLV_WR_ST</name>
          </field>
        </fields>
        <name>SLV_WR_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS0 pin enable, 1: disable CS0, 0: spi_cs0 signal is from/to CS0 pin</description>
            <name>CS0_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS1 pin enable, 1: disable CS1, 0: spi_cs1 signal is from/to CS1 pin</description>
            <name>CS1_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS2 pin enable, 1: disable CS2, 0: spi_cs2 signal is from/to CS2 pin</description>
            <name>CS2_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk out disable  0: spi clk out enable</description>
            <name>CK_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the master mode  the bits are the polarity of spi cs line  the value is equivalent to spi_cs ^ spi_master_cs_pol.</description>
            <name>MASTER_CS_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the master mode  spi cs line is enable as spi clk  it is combined with spi_cs0_dis spi_cs1_dis spi_cs2_dis.</description>
            <name>MASTER_CK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk line is high when idle     0: spi clk line is low when idle</description>
            <name>CK_IDLE_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs line keep low when the bit is set.</description>
            <name>CS_KEEP_ACTIVE</name>
          </field>
        </fields>
        <name>PIN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of read-buffer operation in the slave mode.</description>
            <name>SLV_RD_BUF_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of write-buffer operation in the slave mode.</description>
            <name>SLV_WR_BUF_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of read-status operation in the slave mode.</description>
            <name>SLV_RD_STA_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of write-status operation in the slave mode.</description>
            <name>SLV_WR_STA_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of any operation in both the master mode and the slave mode.</description>
            <name>TRANS_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Interrupt enable bits for the below 5 sources</description>
            <name>INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>In the slave mode  this bits used to synchronize the input spi cs signal and eliminate spi cs  jitter.</description>
            <name>CS_I_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the slave mode it is the value of command.</description>
            <name>SLV_LAST_COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the slave mode it is the state of spi state machine.</description>
            <name>SLV_LAST_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The operations counter in both the master mode and the slave mode. 4: read-status</description>
            <name>TRANS_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: slave mode commands are defined in SPI_SLAVE3.  0: slave mode commands are fixed as: 1: write-status 2: write-buffer and 3: read-buffer.</description>
            <name>SLV_CMD_DEFINE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write and read status enable  in the slave mode</description>
            <name>SLV_WR_RD_STA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write and read buffer enable in the slave mode</description>
            <name>SLV_WR_RD_BUF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: slave mode 0: master mode.</description>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software reset enable, reset the spi clock line cs line and data lines.</description>
            <name>SYNC_RESET</name>
          </field>
        </fields>
        <name>SLAVE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for read-buffer operations.</description>
            <name>SLV_RDBUF_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for write-buffer operations.</description>
            <name>SLV_WRBUF_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for read-status operations.</description>
            <name>SLV_RDSTA_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for write-status operations.</description>
            <name>SLV_WRSTA_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the slave mode it is the address length in bits for write-buffer operation. The register value shall be (bit_num-1).</description>
            <name>SLV_WR_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the slave mode it is the address length in bits for read-buffer operation. The register value shall be (bit_num-1).</description>
            <name>SLV_RD_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode  1:read register of SPI_SLV_WR_STATUS  0: read register of SPI_RD_STATUS.</description>
            <name>SLV_STATUS_READBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode enable fast read status.</description>
            <name>SLV_STATUS_FAST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>In the slave mode it is the length of status bit.</description>
            <name>SLV_STATUS_BITLEN</name>
          </field>
        </fields>
        <name>SLAVE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for read-status operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_RDSTA_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for write-status operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_WRSTA_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for read-buffer operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_RDBUF_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for write-buffer operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_WRBUF_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <name>SLAVE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of read-buffer command.</description>
            <name>SLV_RDBUF_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of write-buffer command.</description>
            <name>SLV_WRBUF_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of read-status command.</description>
            <name>SLV_RDSTA_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of write-status command.</description>
            <name>SLV_WRSTA_CMD_VALUE</name>
          </field>
        </fields>
        <name>SLAVE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the length in bits for write-buffer operations. The register value shall be (bit_num-1).</description>
            <name>SLV_WRBUF_DBITLEN</name>
          </field>
        </fields>
        <name>SLV_WRBUF_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the length in bits for read-buffer operations. The register value shall be (bit_num-1).</description>
            <name>SLV_RDBUF_DBITLEN</name>
          </field>
        </fields>
        <name>SLV_RDBUF_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  Cache access enable  1: enable  0:disable.</description>
            <name>CACHE_REQ_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  cache  read flash with 4 bytes command  1: enable  0:disable.</description>
            <name>CACHE_USR_CMD_4BYTE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  cache  read flash for user define command  1: enable  0:disable.</description>
            <name>CACHE_FLASH_USR_CMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  spi1 send suspend command before cache read flash 1: enable  0:disable.</description>
            <name>CACHE_FLASH_PES_EN</name>
          </field>
        </fields>
        <name>CACHE_FCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  spi dual I/O mode enable  1: enable  0:disable</description>
            <name>USR_SRAM_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  spi quad I/O mode enable  1: enable  0:disable</description>
            <name>USR_SRAM_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  it is the enable bit of dummy phase for write operations.</description>
            <name>USR_WR_SRAM_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  it is the enable bit of dummy phase for read operations.</description>
            <name>USR_RD_SRAM_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode cache read sram for user define command.</description>
            <name>CACHE_SRAM_USR_RCMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>For SPI0  In the sram mode  it is the byte length of spi read sram data.</description>
            <name>SRAM_BYTES_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>For SPI0  In the sram mode  it is the length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>SRAM_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>For SPI0  In the sram mode  it is the length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>SRAM_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode cache write sram for user define command</description>
            <name>CACHE_SRAM_USR_WCMD</name>
          </field>
        </fields>
        <name>CACHE_SCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x15C04830</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM DIO mode enable .  SRAM DIO enable command will be send when the bit is set. The bit will be cleared once the operation done.</description>
            <name>SRAM_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM QIO mode enable .  SRAM QIO enable command will be send when the bit is set. The bit will be cleared once the operation done.</description>
            <name>SRAM_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM IO mode reset enable. SRAM IO mode reset operation will be triggered when the bit is set. The bit will be cleared once the operation done</description>
            <name>SRAM_RSTIO</name>
          </field>
        </fields>
        <name>SRAM_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>For SPI0 When cache mode is enable it is the read command value of command phase for SRAM.</description>
            <name>CACHE_SRAM_USR_RD_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>For SPI0 When cache mode is enable it is the length in bits of command phase for SRAM. The register value shall be (bit_num-1).</description>
            <name>CACHE_SRAM_USR_RD_CMD_BITLEN</name>
          </field>
        </fields>
        <name>SRAM_DRD_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>For SPI0 When cache mode is enable it is the write command value of command phase for SRAM.</description>
            <name>CACHE_SRAM_USR_WR_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>For SPI0 When cache mode is enable it is the in bits of command phase  for SRAM. The register value shall be (bit_num-1).</description>
            <name>CACHE_SRAM_USR_WR_CMD_BITLEN</name>
          </field>
        </fields>
        <name>SRAM_DWR_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the bit length of read data. The value is the length - 1.</description>
            <name>SLV_RDATA_BIT</name>
          </field>
        </fields>
        <name>SLV_RD_BIT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF0</name>
          </field>
        </fields>
        <name>W0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF1</name>
          </field>
        </fields>
        <name>W1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF2</name>
          </field>
        </fields>
        <name>W2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF3</name>
          </field>
        </fields>
        <name>W3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF4</name>
          </field>
        </fields>
        <name>W4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF5</name>
          </field>
        </fields>
        <name>W5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF6</name>
          </field>
        </fields>
        <name>W6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF7</name>
          </field>
        </fields>
        <name>W7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF8</name>
          </field>
        </fields>
        <name>W8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF9</name>
          </field>
        </fields>
        <name>W9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF10</name>
          </field>
        </fields>
        <name>W10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF11</name>
          </field>
        </fields>
        <name>W11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF12</name>
          </field>
        </fields>
        <name>W12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF13</name>
          </field>
        </fields>
        <name>W13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF14</name>
          </field>
        </fields>
        <name>W14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF15</name>
          </field>
        </fields>
        <name>W15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>For SPI1  the value of crc32 for 256 bits data.</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>TX_CRC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>page program delay time  by system clock.</description>
            <name>T_PP_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>page program delay time shift .</description>
            <name>T_PP_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>page program delay enable.</description>
            <name>T_PP_ENA</name>
          </field>
        </fields>
        <name>EXT0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800A0050</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>erase flash delay time by system clock.</description>
            <name>T_ERASE_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>erase flash delay time shift.</description>
            <name>T_ERASE_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>erase flash delay enable.</description>
            <name>T_ERASE_ENA</name>
          </field>
        </fields>
        <name>EXT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800F0000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The status of spi state machine .</description>
            <name>ST</name>
          </field>
        </fields>
        <name>EXT2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is for two SPI masters to share the same cs clock and data signals. The bits of one SPI are set  if the other SPI is busy  the SPI will be hold. 1(3): hold at ¡°idle¡± phase 2: hold at ¡°prepare¡± phase.</description>
            <name>INT_HOLD_ENA</name>
          </field>
        </fields>
        <name>EXT3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to reset in dma fsm and in data fifo pointer.</description>
            <name>IN_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to reset out dma fsm and out data fifo pointer.</description>
            <name>OUT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reset spi dma ahb master fifo pointer.</description>
            <name>AHBM_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reset spi dma ahb master.</description>
            <name>AHBM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set bit to test in link.</description>
            <name>IN_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set bit to test out link.</description>
            <name>OUT_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when the link is empty   jump to next automatically.</description>
            <name>OUT_AUTO_WRBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>out eof flag generation mode . 1: when dma pop all data from fifo  0:when ahb push all data to fifo.</description>
            <name>OUT_EOF_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read descriptor use burst mode when read data for memory.</description>
            <name>OUTDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read descriptor use burst mode when write data to memory.</description>
            <name>INDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data from memory in burst mode.</description>
            <name>OUT_DATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data stop  when in continue tx/rx mode.</description>
            <name>DMA_RX_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma write data stop when in continue tx/rx mode.</description>
            <name>DMA_TX_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma continue tx/rx data.</description>
            <name>DMA_CONTINUE</name>
          </field>
        </fields>
        <name>DMA_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The address of the first outlink descriptor.</description>
            <name>OUTLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to stop to use outlink descriptor.</description>
            <name>OUTLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to start to use outlink descriptor.</description>
            <name>OUTLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to mount on new outlink descriptors.</description>
            <name>OUTLINK_RESTART</name>
          </field>
        </fields>
        <name>DMA_OUT_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The address of the first inlink descriptor.</description>
            <name>INLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when the bit is set  inlink descriptor returns to the next descriptor while a packet is wrong</description>
            <name>INLINK_AUTO_RET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to stop to use inlink descriptor.</description>
            <name>INLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to start to use inlink descriptor.</description>
            <name>INLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to mount on new inlink descriptors.</description>
            <name>INLINK_RESTART</name>
          </field>
        </fields>
        <name>DMA_IN_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data status bit.</description>
            <name>DMA_RX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma write data status bit.</description>
            <name>DMA_TX_EN</name>
          </field>
        </fields>
        <name>DMA_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing usage of a outlink descriptor .</description>
            <name>OUT_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_ENA</name>
          </field>
        </fields>
        <name>DMA_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_RAW</name>
          </field>
        </fields>
        <name>DMA_INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_ST</name>
          </field>
        </fields>
        <name>DMA_INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_CLR</name>
          </field>
        </fields>
        <name>DMA_INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The inlink descriptor address when spi dma produce receiving error.</description>
            <name>DMA_IN_ERR_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>IN_ERR_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The last inlink descriptor address when spi dma produce from_suc_eof.</description>
            <name>DMA_IN_SUC_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>IN_SUC_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in descriptor pointer.</description>
            <name>DMA_INLINK_DSCR</name>
          </field>
        </fields>
        <name>INLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of next in descriptor pointer.</description>
            <name>DMA_INLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in descriptor data buffer pointer.</description>
            <name>DMA_INLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of buffer relative to the outlink descriptor that produce eof.</description>
            <name>DMA_OUT_EOF_BFR_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_BFR_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The last outlink descriptor address when spi dma produce to_eof.</description>
            <name>DMA_OUT_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out descriptor pointer.</description>
            <name>DMA_OUTLINK_DSCR</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of next out descriptor pointer.</description>
            <name>DMA_OUTLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out descriptor data buffer pointer.</description>
            <name>DMA_OUTLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>spi dma read data from memory status.</description>
            <name>DMA_OUT_STATUS</name>
          </field>
        </fields>
        <name>DMA_RSTATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>spi dma write data to memory status.</description>
            <name>DMA_IN_STATUS</name>
          </field>
        </fields>
        <name>DMA_TSTATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>SPI register version.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1604270</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x110</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF65000</baseAddress>
    <derivedFrom>SPI0</derivedFrom>
    <description>SPI (Serial Peripheral Interface) Controller</description>
    <groupName>SPI</groupName>
    <interrupts>
      <interrupt>
        <name>SPI3</name>
        <value>0x1F</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>SPI3_DMA</name>
        <value>0x36</value>
      </interrupt>
    </interrupts>
    <name>SPI3</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program erase resume bit  program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program erase suspend bit  program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>User define command enable.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>USR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Drive Flash into high performance mode.  The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_HPM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit combined with reg_resandres bit releases Flash from the power-down state or high performance mode and obtains the devices ID. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Drive Flash into power down.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_DP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Chip erase enable. Chip erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Block erase enable. A 64KB block is erased via SPI command D8H.  Block erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_BE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sector erase enable. A 4KB sector is erased via SPI command 20H. Sector erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_SE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Page program enable(1 byte ~256 bytes data to be programmed). Page program operation  will be triggered when the bit is set. The bit will be cleared once the operation done .1: enable 0: disable.</description>
            <name>FLASH_PP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write status register enable.   Write status operation  will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_WRSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read status register-1.  Read status operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_RDSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read JEDEC ID . Read ID command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_RDID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write flash disable. Write disable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_WRDI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write flash enable.  Write enable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_WREN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read flash enable. Read flash operation will be triggered when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_READ</name>
          </field>
        </fields>
        <name>CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields></fields>
        <name>ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1  initialize crc32 module before writing encrypted data to flash. Active low.</description>
            <name>FCS_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1  enable crc32 when writing encrypted data to flash. 1: enable  0:disable</description>
            <name>TX_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wait flash idle when program flash or erase flash. 1: enable 0: disable.</description>
            <name>WAIT_FLASH_IDLE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the bits: spi_fread_qio  spi_fread_dio  spi_fread_qout and spi_fread_dout. 1: enable 0: disable.</description>
            <name>FASTRD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations  read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The Device ID is read out to SPI_RD_STATUS register, this bit combine with spi_flash_res bit. 1: enable 0: disable.</description>
            <name>RESANDRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write protect signal output when SPI is idle.  1: output high  0: output low.</description>
            <name>WP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>two bytes data will be written to status register when it is set. 1: enable 0: disable.</description>
            <name>WRSR_2B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In read-data (MISO) phase 1: LSB first 0: MSB first</description>
            <name>RD_BIT_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In command address write-data (MOSI) phases 1: LSB firs 0: MSB first</description>
            <name>WR_BIT_ORDER</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20A400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>Delay cycles of resume Flash when resume Flash is enable by spi clock.</description>
            <name>CS_HOLD_DELAY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>SPI cs signal is delayed by spi clock cycles</description>
            <name>CS_HOLD_DELAY</name>
          </field>
        </fields>
        <name>CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5FFF0000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>In the slave mode, it is the status for master to read out.</description>
            <name>STATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Mode bits in the flash fast read mode, it is combined with spi_fastrd_mode bit.</description>
            <name>WB_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode,it is the status for master to read out.</description>
            <name>STATUS_EXT</name>
          </field>
        </fields>
        <name>RD_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>(cycles-1) of ¡°prepare¡± phase by spi clock, this bits combined with spi_cs_setup bit.</description>
            <name>SETUP_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>delay cycles of cs pin by spi clock, this bits combined with spi_cs_hold bit.</description>
            <name>HOLD_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>modify spi clock duty ratio when the value is lager than 8, the bits are combined with spi_clkcnt_N bits and spi_clkcnt_L bits.</description>
            <name>CK_OUT_LOW_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>modify spi clock duty ratio when the value is lager than 8, the bits are combined with spi_clkcnt_N bits and spi_clkcnt_H bits.</description>
            <name>CK_OUT_HIGH_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>MISO signals are delayed by spi_clk. 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle  else delayed by half cycle  3: delayed one cycle</description>
            <name>MISO_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>MISO signals are delayed by system clock cycles</description>
            <name>MISO_DELAY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>MOSI signals are delayed by spi_clk. 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle  else delayed by half cycle  3: delayed one cycle</description>
            <name>MOSI_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>MOSI signals are delayed by system clock cycles</description>
            <name>MOSI_DELAY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>spi_cs signal is delayed by spi_clk . 0: zero  1: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by half cycle    else delayed by one cycle  2: if spi_ck_out_edge or spi_ck_i_edge is set 1  delayed by one cycle   else delayed by half cycle  3: delayed one cycle</description>
            <name>CS_DELAY_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>spi_cs signal is delayed by system clock cycles</description>
            <name>CS_DELAY_NUM</name>
          </field>
        </fields>
        <name>CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x11</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it must be equal to spi_clkcnt_N. In the slave mode it must be 0.</description>
            <name>CLKCNT_L</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it must be floor((spi_clkcnt_N+1)/2-1). In the slave mode it must be 0.</description>
            <name>CLKCNT_H</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it is the divider of spi_clk. So spi_clk frequency is system/(spi_clkdiv_pre+1)/(spi_clkcnt_N+1)</description>
            <name>CLKCNT_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>In the master mode it is pre-divider of spi_clk.</description>
            <name>CLKDIV_PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the master mode 1: spi_clk is eqaul to system 0: spi_clk is divided from system clock.</description>
            <name>CLK_EQU_SYSCLK</name>
          </field>
        </fields>
        <name>CLOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80003043</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to enable full duplex communication. 1: enable 0: disable.</description>
            <name>DOUTDIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs keep low when spi is in ¡°done¡± phase. 1: enable 0: disable.</description>
            <name>CS_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs is enable when spi is in ¡°prepare¡± phase. 1: enable 0: disable.</description>
            <name>CS_SETUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode  the bit is same as spi_ck_out_edge in master mode. It is combined with  spi_miso_delay_mode bits.</description>
            <name>CK_I_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the bit combined with spi_mosi_delay_mode bits to set mosi signal delay mode.</description>
            <name>CK_OUT_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In read-data (MISO) phase 1: big-endian 0: little_endian</description>
            <name>RD_BYTE_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In command address write-data (MOSI) phases 1: big-endian 0: litte_endian</description>
            <name>WR_BYTE_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 2 signals</description>
            <name>FWRITE_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 4 signals</description>
            <name>FWRITE_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations address phase and read-data phase apply 2 signals.</description>
            <name>FWRITE_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations address phase and read-data phase apply 4 signals.</description>
            <name>FWRITE_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to enable 3-line half duplex communication  mosi and miso signals share the same pin. 1: enable 0: disable.</description>
            <name>SIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>It is combined with hold bits to set the polarity of spi hold line  1: spi will be held when spi hold line is high  0: spi will be held when spi hold line is low</description>
            <name>USR_HOLD_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at data out state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DOUT_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at data in state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DIN_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at dummy state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_DUMMY_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at address state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_ADDR_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at command state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_CMD_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi is hold at prepare state  the bit combined with spi_usr_hold_pol bit.</description>
            <name>USR_PREP_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.</description>
            <name>USR_MISO_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.</description>
            <name>USR_MOSI_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi clock is disable in dummy phase when the bit is enable.</description>
            <name>USR_DUMMY_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the write-data phase of an operation.</description>
            <name>USR_MOSI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the read-data phase of an operation.</description>
            <name>USR_MISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the dummy phase of an operation.</description>
            <name>USR_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the address phase of an operation.</description>
            <name>USR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the command phase of an operation.</description>
            <name>USR_COMMAND</name>
          </field>
        </fields>
        <name>USER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80000040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The length in spi_clk cycles of dummy phase. The register value shall be (cycle_num-1).</description>
            <name>USR_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>USR_ADDR_BITLEN</name>
          </field>
        </fields>
        <name>USER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5C000007</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The value of  command.</description>
            <name>USR_COMMAND_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The length in bits of command phase. The register value shall be (bit_num-1)</description>
            <name>USR_COMMAND_BITLEN</name>
          </field>
        </fields>
        <name>USER2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x70000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>The length in bits of write-data. The register value shall be (bit_num-1).</description>
            <name>USR_MOSI_DBITLEN</name>
          </field>
        </fields>
        <name>MOSI_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>The length in bits of  read-data. The register value shall be (bit_num-1).</description>
            <name>USR_MISO_DBITLEN</name>
          </field>
        </fields>
        <name>MISO_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>In the slave mode this register are the status register for the master to write into. In the master mode this register are the higher 32bits in the 64 bits address condition.</description>
            <name>SLV_WR_ST</name>
          </field>
        </fields>
        <name>SLV_WR_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS0 pin enable, 1: disable CS0, 0: spi_cs0 signal is from/to CS0 pin</description>
            <name>CS0_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS1 pin enable, 1: disable CS1, 0: spi_cs1 signal is from/to CS1 pin</description>
            <name>CS1_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS2 pin enable, 1: disable CS2, 0: spi_cs2 signal is from/to CS2 pin</description>
            <name>CS2_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk out disable  0: spi clk out enable</description>
            <name>CK_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the master mode  the bits are the polarity of spi cs line  the value is equivalent to spi_cs ^ spi_master_cs_pol.</description>
            <name>MASTER_CS_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the master mode  spi cs line is enable as spi clk  it is combined with spi_cs0_dis spi_cs1_dis spi_cs2_dis.</description>
            <name>MASTER_CK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk line is high when idle     0: spi clk line is low when idle</description>
            <name>CK_IDLE_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs line keep low when the bit is set.</description>
            <name>CS_KEEP_ACTIVE</name>
          </field>
        </fields>
        <name>PIN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of read-buffer operation in the slave mode.</description>
            <name>SLV_RD_BUF_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of write-buffer operation in the slave mode.</description>
            <name>SLV_WR_BUF_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of read-status operation in the slave mode.</description>
            <name>SLV_RD_STA_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of write-status operation in the slave mode.</description>
            <name>SLV_WR_STA_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt raw bit for the completion of any operation in both the master mode and the slave mode.</description>
            <name>TRANS_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Interrupt enable bits for the below 5 sources</description>
            <name>INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>In the slave mode  this bits used to synchronize the input spi cs signal and eliminate spi cs  jitter.</description>
            <name>CS_I_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the slave mode it is the value of command.</description>
            <name>SLV_LAST_COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>In the slave mode it is the state of spi state machine.</description>
            <name>SLV_LAST_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The operations counter in both the master mode and the slave mode. 4: read-status</description>
            <name>TRANS_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: slave mode commands are defined in SPI_SLAVE3.  0: slave mode commands are fixed as: 1: write-status 2: write-buffer and 3: read-buffer.</description>
            <name>SLV_CMD_DEFINE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write and read status enable  in the slave mode</description>
            <name>SLV_WR_RD_STA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write and read buffer enable in the slave mode</description>
            <name>SLV_WR_RD_BUF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: slave mode 0: master mode.</description>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software reset enable, reset the spi clock line cs line and data lines.</description>
            <name>SYNC_RESET</name>
          </field>
        </fields>
        <name>SLAVE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for read-buffer operations.</description>
            <name>SLV_RDBUF_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for write-buffer operations.</description>
            <name>SLV_WRBUF_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for read-status operations.</description>
            <name>SLV_RDSTA_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode it is the enable bit of dummy phase for write-status operations.</description>
            <name>SLV_WRSTA_DUMMY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the slave mode it is the address length in bits for write-buffer operation. The register value shall be (bit_num-1).</description>
            <name>SLV_WR_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the slave mode it is the address length in bits for read-buffer operation. The register value shall be (bit_num-1).</description>
            <name>SLV_RD_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode  1:read register of SPI_SLV_WR_STATUS  0: read register of SPI_RD_STATUS.</description>
            <name>SLV_STATUS_READBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode enable fast read status.</description>
            <name>SLV_STATUS_FAST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>In the slave mode it is the length of status bit.</description>
            <name>SLV_STATUS_BITLEN</name>
          </field>
        </fields>
        <name>SLAVE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for read-status operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_RDSTA_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for write-status operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_WRSTA_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for read-buffer operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_RDBUF_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the length in spi_clk cycles of dummy phase for write-buffer operations. The register value shall be (cycle_num-1).</description>
            <name>SLV_WRBUF_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <name>SLAVE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of read-buffer command.</description>
            <name>SLV_RDBUF_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of write-buffer command.</description>
            <name>SLV_WRBUF_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of read-status command.</description>
            <name>SLV_RDSTA_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of write-status command.</description>
            <name>SLV_WRSTA_CMD_VALUE</name>
          </field>
        </fields>
        <name>SLAVE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the length in bits for write-buffer operations. The register value shall be (bit_num-1).</description>
            <name>SLV_WRBUF_DBITLEN</name>
          </field>
        </fields>
        <name>SLV_WRBUF_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the length in bits for read-buffer operations. The register value shall be (bit_num-1).</description>
            <name>SLV_RDBUF_DBITLEN</name>
          </field>
        </fields>
        <name>SLV_RDBUF_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  Cache access enable  1: enable  0:disable.</description>
            <name>CACHE_REQ_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  cache  read flash with 4 bytes command  1: enable  0:disable.</description>
            <name>CACHE_USR_CMD_4BYTE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  cache  read flash for user define command  1: enable  0:disable.</description>
            <name>CACHE_FLASH_USR_CMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  spi1 send suspend command before cache read flash 1: enable  0:disable.</description>
            <name>CACHE_FLASH_PES_EN</name>
          </field>
        </fields>
        <name>CACHE_FCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  spi dual I/O mode enable  1: enable  0:disable</description>
            <name>USR_SRAM_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  spi quad I/O mode enable  1: enable  0:disable</description>
            <name>USR_SRAM_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  it is the enable bit of dummy phase for write operations.</description>
            <name>USR_WR_SRAM_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode  it is the enable bit of dummy phase for read operations.</description>
            <name>USR_RD_SRAM_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode cache read sram for user define command.</description>
            <name>CACHE_SRAM_USR_RCMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>For SPI0  In the sram mode  it is the byte length of spi read sram data.</description>
            <name>SRAM_BYTES_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>For SPI0  In the sram mode  it is the length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>SRAM_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>For SPI0  In the sram mode  it is the length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>SRAM_ADDR_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0  In the spi sram mode cache write sram for user define command</description>
            <name>CACHE_SRAM_USR_WCMD</name>
          </field>
        </fields>
        <name>CACHE_SCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x15C04830</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM DIO mode enable .  SRAM DIO enable command will be send when the bit is set. The bit will be cleared once the operation done.</description>
            <name>SRAM_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM QIO mode enable .  SRAM QIO enable command will be send when the bit is set. The bit will be cleared once the operation done.</description>
            <name>SRAM_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 SRAM IO mode reset enable. SRAM IO mode reset operation will be triggered when the bit is set. The bit will be cleared once the operation done</description>
            <name>SRAM_RSTIO</name>
          </field>
        </fields>
        <name>SRAM_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>For SPI0 When cache mode is enable it is the read command value of command phase for SRAM.</description>
            <name>CACHE_SRAM_USR_RD_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>For SPI0 When cache mode is enable it is the length in bits of command phase for SRAM. The register value shall be (bit_num-1).</description>
            <name>CACHE_SRAM_USR_RD_CMD_BITLEN</name>
          </field>
        </fields>
        <name>SRAM_DRD_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>For SPI0 When cache mode is enable it is the write command value of command phase for SRAM.</description>
            <name>CACHE_SRAM_USR_WR_CMD_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>For SPI0 When cache mode is enable it is the in bits of command phase  for SRAM. The register value shall be (bit_num-1).</description>
            <name>CACHE_SRAM_USR_WR_CMD_BITLEN</name>
          </field>
        </fields>
        <name>SRAM_DWR_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>In the slave mode it is the bit length of read data. The value is the length - 1.</description>
            <name>SLV_RDATA_BIT</name>
          </field>
        </fields>
        <name>SLV_RD_BIT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF0</name>
          </field>
        </fields>
        <name>W0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF1</name>
          </field>
        </fields>
        <name>W1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF2</name>
          </field>
        </fields>
        <name>W2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF3</name>
          </field>
        </fields>
        <name>W3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF4</name>
          </field>
        </fields>
        <name>W4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF5</name>
          </field>
        </fields>
        <name>W5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF6</name>
          </field>
        </fields>
        <name>W6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF7</name>
          </field>
        </fields>
        <name>W7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF8</name>
          </field>
        </fields>
        <name>W8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF9</name>
          </field>
        </fields>
        <name>W9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF10</name>
          </field>
        </fields>
        <name>W10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF11</name>
          </field>
        </fields>
        <name>W11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF12</name>
          </field>
        </fields>
        <name>W12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF13</name>
          </field>
        </fields>
        <name>W13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF14</name>
          </field>
        </fields>
        <name>W14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF15</name>
          </field>
        </fields>
        <name>W15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>For SPI1  the value of crc32 for 256 bits data.</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>TX_CRC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>page program delay time  by system clock.</description>
            <name>T_PP_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>page program delay time shift .</description>
            <name>T_PP_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>page program delay enable.</description>
            <name>T_PP_ENA</name>
          </field>
        </fields>
        <name>EXT0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800A0050</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>erase flash delay time by system clock.</description>
            <name>T_ERASE_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>erase flash delay time shift.</description>
            <name>T_ERASE_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>erase flash delay enable.</description>
            <name>T_ERASE_ENA</name>
          </field>
        </fields>
        <name>EXT1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800F0000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The status of spi state machine .</description>
            <name>ST</name>
          </field>
        </fields>
        <name>EXT2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is for two SPI masters to share the same cs clock and data signals. The bits of one SPI are set  if the other SPI is busy  the SPI will be hold. 1(3): hold at ¡°idle¡± phase 2: hold at ¡°prepare¡± phase.</description>
            <name>INT_HOLD_ENA</name>
          </field>
        </fields>
        <name>EXT3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to reset in dma fsm and in data fifo pointer.</description>
            <name>IN_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to reset out dma fsm and out data fifo pointer.</description>
            <name>OUT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reset spi dma ahb master fifo pointer.</description>
            <name>AHBM_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reset spi dma ahb master.</description>
            <name>AHBM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set bit to test in link.</description>
            <name>IN_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set bit to test out link.</description>
            <name>OUT_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when the link is empty   jump to next automatically.</description>
            <name>OUT_AUTO_WRBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>out eof flag generation mode . 1: when dma pop all data from fifo  0:when ahb push all data to fifo.</description>
            <name>OUT_EOF_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read descriptor use burst mode when read data for memory.</description>
            <name>OUTDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read descriptor use burst mode when write data to memory.</description>
            <name>INDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data from memory in burst mode.</description>
            <name>OUT_DATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data stop  when in continue tx/rx mode.</description>
            <name>DMA_RX_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma write data stop when in continue tx/rx mode.</description>
            <name>DMA_TX_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma continue tx/rx data.</description>
            <name>DMA_CONTINUE</name>
          </field>
        </fields>
        <name>DMA_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The address of the first outlink descriptor.</description>
            <name>OUTLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to stop to use outlink descriptor.</description>
            <name>OUTLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to start to use outlink descriptor.</description>
            <name>OUTLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to mount on new outlink descriptors.</description>
            <name>OUTLINK_RESTART</name>
          </field>
        </fields>
        <name>DMA_OUT_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The address of the first inlink descriptor.</description>
            <name>INLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when the bit is set  inlink descriptor returns to the next descriptor while a packet is wrong</description>
            <name>INLINK_AUTO_RET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to stop to use inlink descriptor.</description>
            <name>INLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to start to use inlink descriptor.</description>
            <name>INLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to mount on new inlink descriptors.</description>
            <name>INLINK_RESTART</name>
          </field>
        </fields>
        <name>DMA_IN_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma read data status bit.</description>
            <name>DMA_RX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi dma write data status bit.</description>
            <name>DMA_TX_EN</name>
          </field>
        </fields>
        <name>DMA_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for completing usage of a outlink descriptor .</description>
            <name>OUT_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_ENA</name>
          </field>
        </fields>
        <name>DMA_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_RAW</name>
          </field>
        </fields>
        <name>DMA_INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_ST</name>
          </field>
        </fields>
        <name>DMA_INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for lack of enough inlink descriptors.</description>
            <name>INLINK_DSCR_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for outlink descriptor error.</description>
            <name>OUTLINK_DSCR_ERROR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for inlink descriptor error.</description>
            <name>INLINK_DSCR_ERROR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing usage of a inlink descriptor.</description>
            <name>IN_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for receiving error.</description>
            <name>IN_ERR_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing receiving all the packets from host.</description>
            <name>IN_SUC_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for completing usage of a outlink descriptor.</description>
            <name>OUT_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for sending a packet to host done.</description>
            <name>OUT_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for sending all the packets to host done.</description>
            <name>OUT_TOTAL_EOF_INT_CLR</name>
          </field>
        </fields>
        <name>DMA_INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The inlink descriptor address when spi dma produce receiving error.</description>
            <name>DMA_IN_ERR_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>IN_ERR_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The last inlink descriptor address when spi dma produce from_suc_eof.</description>
            <name>DMA_IN_SUC_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>IN_SUC_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in descriptor pointer.</description>
            <name>DMA_INLINK_DSCR</name>
          </field>
        </fields>
        <name>INLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of next in descriptor pointer.</description>
            <name>DMA_INLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in descriptor data buffer pointer.</description>
            <name>DMA_INLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>INLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of buffer relative to the outlink descriptor that produce eof.</description>
            <name>DMA_OUT_EOF_BFR_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_BFR_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The last outlink descriptor address when spi dma produce to_eof.</description>
            <name>DMA_OUT_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>OUT_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out descriptor pointer.</description>
            <name>DMA_OUTLINK_DSCR</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of next out descriptor pointer.</description>
            <name>DMA_OUTLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out descriptor data buffer pointer.</description>
            <name>DMA_OUTLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>OUTLINK_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>spi dma read data from memory status.</description>
            <name>DMA_OUT_STATUS</name>
          </field>
        </fields>
        <name>DMA_RSTATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>spi dma write data to memory status.</description>
            <name>DMA_IN_STATUS</name>
          </field>
        </fields>
        <name>DMA_TSTATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>SPI register version.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1604270</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x44</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF66000</baseAddress>
    <description>Peripheral SYSCON</description>
    <groupName>SYSCON</groupName>
    <interrupts></interrupts>
    <name>SYSCON</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <name>PRE_DIV_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLK_320M_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RST_TICK_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>QUICK_CLK_CHNG</name>
          </field>
        </fields>
        <name>SYSCLK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>XTAL_TICK_NUM</name>
          </field>
        </fields>
        <name>XTAL_TICK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x27</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>PLL_TICK_NUM</name>
          </field>
        </fields>
        <name>PLL_TICK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>CK8M_TICK_NUM</name>
          </field>
        </fields>
        <name>CK8M_TICK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xB</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SARADC_START_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SARADC_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SAR ADC2 is controlled by DIG ADC2 CTRL  0: SAR ADC2 is controlled by PWDET CTRL</description>
            <name>SARADC_SAR2_MUX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>0: single mode  1: double mode  2: alternate mode</description>
            <name>SARADC_WORK_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: SAR1  1: SAR2  only work for single SAR mode</description>
            <name>SARADC_SAR_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SARADC_SAR_CLK_GATED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SAR clock divider</description>
            <name>SARADC_SAR_CLK_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>0 ~ 15 means length 1 ~ 16</description>
            <name>SARADC_SAR1_PATT_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>0 ~ 15 means length 1 ~ 16</description>
            <name>SARADC_SAR2_PATT_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear the pointer of pattern table for DIG ADC1 CTRL</description>
            <name>SARADC_SAR1_PATT_P_CLEAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear the pointer of pattern table for DIG ADC2 CTRL</description>
            <name>SARADC_SAR2_PATT_P_CLEAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: sar_sel will be coded by the MSB of the 16-bit output data  in this case the resolution should not be larger than 11 bits.</description>
            <name>SARADC_DATA_SAR_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: I2S input data is from SAR ADC (for DMA)  0: I2S input data is from GPIO matrix</description>
            <name>SARADC_DATA_TO_I2S</name>
          </field>
        </fields>
        <name>SARADC_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7F8240</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SARADC_MEAS_NUM_LIMIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>max conversion number</description>
            <name>SARADC_MAX_MEAS_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: data to DIG ADC1 CTRL is inverted  otherwise not</description>
            <name>SARADC_SAR1_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: data to DIG ADC2 CTRL is inverted  otherwise not</description>
            <name>SARADC_SAR2_INV</name>
          </field>
        </fields>
        <name>SARADC_CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1FE</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SARADC_RSTB_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SARADC_STANDBY_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>SARADC_START_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>sample cycles</description>
            <name>SARADC_SAMPLE_CYCLE</name>
          </field>
        </fields>
        <name>SARADC_FSM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x208FF08</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>item 0 ~ 3 for pattern table 1 (each item one byte)</description>
            <name>SARADC_SAR1_PATT_TAB1</name>
          </field>
        </fields>
        <name>SARADC_SAR1_PATT_TAB1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 4 ~ 7 for pattern table 1 (each item one byte)</description>
            <name>SARADC_SAR1_PATT_TAB2</name>
          </field>
        </fields>
        <name>SARADC_SAR1_PATT_TAB2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 8 ~ 11 for pattern table 1 (each item one byte)</description>
            <name>SARADC_SAR1_PATT_TAB3</name>
          </field>
        </fields>
        <name>SARADC_SAR1_PATT_TAB3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 12 ~ 15 for pattern table 1 (each item one byte)</description>
            <name>SARADC_SAR1_PATT_TAB4</name>
          </field>
        </fields>
        <name>SARADC_SAR1_PATT_TAB4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>item 0 ~ 3 for pattern table 2 (each item one byte)</description>
            <name>SARADC_SAR2_PATT_TAB1</name>
          </field>
        </fields>
        <name>SARADC_SAR2_PATT_TAB1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 4 ~ 7 for pattern table 2 (each item one byte)</description>
            <name>SARADC_SAR2_PATT_TAB2</name>
          </field>
        </fields>
        <name>SARADC_SAR2_PATT_TAB2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 8 ~ 11 for pattern table 2 (each item one byte)</description>
            <name>SARADC_SAR2_PATT_TAB3</name>
          </field>
        </fields>
        <name>SARADC_SAR2_PATT_TAB3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Item 12 ~ 15 for pattern table 2 (each item one byte)</description>
            <name>SARADC_SAR2_PATT_TAB4</name>
          </field>
        </fields>
        <name>SARADC_SAR2_PATT_TAB4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0F0F0F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>APLL_TICK_NUM</name>
          </field>
        </fields>
        <name>APLL_TICK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x63</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x16042000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xB0</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF5F000</baseAddress>
    <description>Timer Group</description>
    <groupName>TIMG</groupName>
    <interrupts>
      <interrupt>
        <name>TG0_T0_LEVEL</name>
        <value>0xE</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG0_T1_LEVEL</name>
        <value>0xF</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG0_WDT_LEVEL</name>
        <value>0x10</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG0_LACT_LEVEL</name>
        <value>0x11</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG0_T0_EDGE</name>
        <value>0x3A</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG0_T1_EDGE</name>
        <value>0x3B</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG0_WDT_EDGE</name>
        <value>0x3C</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG0_LACT_EDGE</name>
        <value>0x3D</value>
      </interrupt>
    </interrupts>
    <name>TIMG0</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  alarm is enabled</description>
            <name>T0_ALARM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  level type interrupt will be generated during alarm</description>
            <name>T0_LEVEL_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  edge type interrupt will be generated during alarm</description>
            <name>T0_EDGE_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer 0 clock (T0_clk) prescale value.</description>
            <name>T0_DIVIDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 0 auto-reload at alarming is enabled</description>
            <name>T0_AUTORELOAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 0 time-base counter increment. When cleared timer 0 time-base counter decrement.</description>
            <name>T0_INCREASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 0 time-base counter is enabled</description>
            <name>T0_EN</name>
          </field>
        </fields>
        <name>T0CONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60002000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Register to store timer 0 time-base counter current value lower 32 bits.</description>
            <name>T0_LO</name>
          </field>
        </fields>
        <name>T0LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Register to store timer 0 time-base counter current value higher 32 bits.</description>
            <name>T0_HI</name>
          </field>
        </fields>
        <name>T0HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Write any value will trigger a timer 0 time-base counter value update (timer 0 current value will be stored in registers above)</description>
            <name>T0_UPDATE</name>
          </field>
        </fields>
        <name>T0UPDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer 0 time-base counter value lower 32 bits that will trigger the alarm</description>
            <name>T0_ALARM_LO</name>
          </field>
        </fields>
        <name>T0ALARMLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer 0 time-base counter value higher 32 bits that will trigger the alarm</description>
            <name>T0_ALARM_HI</name>
          </field>
        </fields>
        <name>T0ALARMHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Lower 32 bits of the value that will load into timer 0 time-base counter</description>
            <name>T0_LOAD_LO</name>
          </field>
        </fields>
        <name>T0LOADLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>higher 32 bits of the value that will load into timer 0 time-base counter</description>
            <name>T0_LOAD_HI</name>
          </field>
        </fields>
        <name>T0LOADHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Write any value will trigger timer 0 time-base counter reload</description>
            <name>T0_LOAD</name>
          </field>
        </fields>
        <name>T0LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  alarm is enabled</description>
            <name>T1_ALARM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  level type interrupt will be generated during alarm</description>
            <name>T1_LEVEL_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  edge type interrupt will be generated during alarm</description>
            <name>T1_EDGE_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer 1 clock (T1_clk) prescale value.</description>
            <name>T1_DIVIDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 1 auto-reload at alarming is enabled</description>
            <name>T1_AUTORELOAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 1 time-base counter increment. When cleared timer 1 time-base counter decrement.</description>
            <name>T1_INCREASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 1 time-base counter is enabled</description>
            <name>T1_EN</name>
          </field>
        </fields>
        <name>T1CONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60002000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Register to store timer 1 time-base counter current value lower 32 bits.</description>
            <name>T1_LO</name>
          </field>
        </fields>
        <name>T1LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Register to store timer 1 time-base counter current value higher 32 bits.</description>
            <name>T1_HI</name>
          </field>
        </fields>
        <name>T1HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Write any value will trigger a timer 1 time-base counter value update (timer 1 current value will be stored in registers above)</description>
            <name>T1_UPDATE</name>
          </field>
        </fields>
        <name>T1UPDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer 1 time-base counter value lower 32 bits that will trigger the alarm</description>
            <name>T1_ALARM_LO</name>
          </field>
        </fields>
        <name>T1ALARMLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer 1 time-base counter value higher 32 bits that will trigger the alarm</description>
            <name>T1_ALARM_HI</name>
          </field>
        </fields>
        <name>T1ALARMHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Lower 32 bits of the value that will load into timer 1 time-base counter</description>
            <name>T1_LOAD_LO</name>
          </field>
        </fields>
        <name>T1LOADLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>higher 32 bits of the value that will load into timer 1 time-base counter</description>
            <name>T1_LOAD_HI</name>
          </field>
        </fields>
        <name>T1LOADHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Write any value will trigger timer 1 time-base counter reload</description>
            <name>T1_LOAD</name>
          </field>
        </fields>
        <name>T1LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  flash boot protection is enabled</description>
            <name>WDT_FLASHBOOT_MOD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>length of system reset selection. 0: 100ns  1: 200ns  2: 300ns  3: 400ns  4: 500ns  5: 800ns  6: 1.6us  7: 3.2us</description>
            <name>WDT_SYS_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>length of CPU reset selection. 0: 100ns  1: 200ns  2: 300ns 3: 400ns  4: 500ns  5: 800ns  6: 1.6us  7: 3.2us</description>
            <name>WDT_CPU_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  level type interrupt generation is enabled</description>
            <name>WDT_LEVEL_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  edge type interrupt generation is enabled</description>
            <name>WDT_EDGE_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Stage 3 configuration. 0: off  1: interrupt  2: reset CPU  3: reset system</description>
            <name>WDT_STG3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Stage 2 configuration. 0: off  1: interrupt  2: reset CPU  3: reset system</description>
            <name>WDT_STG2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Stage 1 configuration. 0: off  1: interrupt  2: reset CPU  3: reset system</description>
            <name>WDT_STG1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Stage 0 configuration. 0: off  1: interrupt  2: reset CPU  3: reset system</description>
            <name>WDT_STG0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  SWDT is enabled</description>
            <name>WDT_EN</name>
          </field>
        </fields>
        <name>WDTCONFIG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4C000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>SWDT clock prescale value. Period = 12.5ns * value stored in this register</description>
            <name>WDT_CLK_PRESCALE</name>
          </field>
        </fields>
        <name>WDTCONFIG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stage 0 timeout value in SWDT clock cycles</description>
            <name>WDT_STG0_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18CBA80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stage 1 timeout value in SWDT clock cycles</description>
            <name>WDT_STG1_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7FFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stage 2 timeout value in SWDT clock cycles</description>
            <name>WDT_STG2_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stage 3 timeout value in SWDT clock cycles</description>
            <name>WDT_STG3_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Write any value will feed SWDT</description>
            <name>WDT_FEED</name>
          </field>
        </fields>
        <name>WDTFEED</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>If change its value from default  then write protection is on.</description>
            <name>WDT_WKEY</name>
          </field>
        </fields>
        <name>WDTWPROTECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x50D83AA1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RTC_CALI_START_CYCLING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RTC_CALI_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RTC_CALI_RDY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xF</bitWidth>
            <name>RTC_CALI_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RTC_CALI_START</name>
          </field>
        </fields>
        <name>RTCCALICFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x13000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x19</bitWidth>
            <name>RTC_CALI_VALUE</name>
          </field>
        </fields>
        <name>RTCCALICFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_RTC_ONLY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_CPST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_LAC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_ALARM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_LEVEL_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_EDGE_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>LACT_DIVIDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_AUTORELOAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_INCREASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_EN</name>
          </field>
        </fields>
        <name>LACTCONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60002300</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <name>LACT_RTC_STEP_LEN</name>
          </field>
        </fields>
        <name>LACTRTC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_LO</name>
          </field>
        </fields>
        <name>LACTLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_HI</name>
          </field>
        </fields>
        <name>LACTHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_UPDATE</name>
          </field>
        </fields>
        <name>LACTUPDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_ALARM_LO</name>
          </field>
        </fields>
        <name>LACTALARMLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_ALARM_HI</name>
          </field>
        </fields>
        <name>LACTALARMHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_LOAD_LO</name>
          </field>
        </fields>
        <name>LACTLOADLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_LOAD_HI</name>
          </field>
        </fields>
        <name>LACTLOADHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_LOAD</name>
          </field>
        </fields>
        <name>LACTLOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer0 alarm</description>
            <name>T0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer1 alarm</description>
            <name>T1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt when an interrupt stage timeout</description>
            <name>WDT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer0 alarm</description>
            <name>T0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer1 alarm</description>
            <name>T1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt when an interrupt stage timeout</description>
            <name>WDT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer0 alarm</description>
            <name>T0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer1 alarm</description>
            <name>T1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt when an interrupt stage timeout</description>
            <name>WDT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer0 alarm</description>
            <name>T0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer1 alarm</description>
            <name>T1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt when an interrupt stage timeout</description>
            <name>WDT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>Version of this regfile</description>
            <name>NTIMERS_DATE</name>
          </field>
        </fields>
        <name>NTIMERS_DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1604290</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Force clock enable for this regfile</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>TIMGCLK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xB0</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF60000</baseAddress>
    <derivedFrom>TIMG0</derivedFrom>
    <description>Timer Group</description>
    <groupName>TIMG</groupName>
    <interrupts>
      <interrupt>
        <name>TG1_T0_LEVEL</name>
        <value>0x12</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG1_T1_LEVEL</name>
        <value>0x13</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG1_WDT_LEVEL</name>
        <value>0x14</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG1_LACT_LEVEL</name>
        <value>0x15</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG1_T0_EDGE</name>
        <value>0x3E</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG1_T1_EDGE</name>
        <value>0x3F</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG1_WDT_EDGE</name>
        <value>0x40</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG1_LACT_EDGE</name>
        <value>0x41</value>
      </interrupt>
    </interrupts>
    <name>TIMG1</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  alarm is enabled</description>
            <name>T0_ALARM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  level type interrupt will be generated during alarm</description>
            <name>T0_LEVEL_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  edge type interrupt will be generated during alarm</description>
            <name>T0_EDGE_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer 0 clock (T0_clk) prescale value.</description>
            <name>T0_DIVIDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 0 auto-reload at alarming is enabled</description>
            <name>T0_AUTORELOAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 0 time-base counter increment. When cleared timer 0 time-base counter decrement.</description>
            <name>T0_INCREASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 0 time-base counter is enabled</description>
            <name>T0_EN</name>
          </field>
        </fields>
        <name>T0CONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60002000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Register to store timer 0 time-base counter current value lower 32 bits.</description>
            <name>T0_LO</name>
          </field>
        </fields>
        <name>T0LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Register to store timer 0 time-base counter current value higher 32 bits.</description>
            <name>T0_HI</name>
          </field>
        </fields>
        <name>T0HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Write any value will trigger a timer 0 time-base counter value update (timer 0 current value will be stored in registers above)</description>
            <name>T0_UPDATE</name>
          </field>
        </fields>
        <name>T0UPDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer 0 time-base counter value lower 32 bits that will trigger the alarm</description>
            <name>T0_ALARM_LO</name>
          </field>
        </fields>
        <name>T0ALARMLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer 0 time-base counter value higher 32 bits that will trigger the alarm</description>
            <name>T0_ALARM_HI</name>
          </field>
        </fields>
        <name>T0ALARMHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Lower 32 bits of the value that will load into timer 0 time-base counter</description>
            <name>T0_LOAD_LO</name>
          </field>
        </fields>
        <name>T0LOADLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>higher 32 bits of the value that will load into timer 0 time-base counter</description>
            <name>T0_LOAD_HI</name>
          </field>
        </fields>
        <name>T0LOADHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Write any value will trigger timer 0 time-base counter reload</description>
            <name>T0_LOAD</name>
          </field>
        </fields>
        <name>T0LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  alarm is enabled</description>
            <name>T1_ALARM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  level type interrupt will be generated during alarm</description>
            <name>T1_LEVEL_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  edge type interrupt will be generated during alarm</description>
            <name>T1_EDGE_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer 1 clock (T1_clk) prescale value.</description>
            <name>T1_DIVIDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 1 auto-reload at alarming is enabled</description>
            <name>T1_AUTORELOAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 1 time-base counter increment. When cleared timer 1 time-base counter decrement.</description>
            <name>T1_INCREASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  timer 1 time-base counter is enabled</description>
            <name>T1_EN</name>
          </field>
        </fields>
        <name>T1CONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60002000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Register to store timer 1 time-base counter current value lower 32 bits.</description>
            <name>T1_LO</name>
          </field>
        </fields>
        <name>T1LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Register to store timer 1 time-base counter current value higher 32 bits.</description>
            <name>T1_HI</name>
          </field>
        </fields>
        <name>T1HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Write any value will trigger a timer 1 time-base counter value update (timer 1 current value will be stored in registers above)</description>
            <name>T1_UPDATE</name>
          </field>
        </fields>
        <name>T1UPDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer 1 time-base counter value lower 32 bits that will trigger the alarm</description>
            <name>T1_ALARM_LO</name>
          </field>
        </fields>
        <name>T1ALARMLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer 1 time-base counter value higher 32 bits that will trigger the alarm</description>
            <name>T1_ALARM_HI</name>
          </field>
        </fields>
        <name>T1ALARMHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Lower 32 bits of the value that will load into timer 1 time-base counter</description>
            <name>T1_LOAD_LO</name>
          </field>
        </fields>
        <name>T1LOADLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>higher 32 bits of the value that will load into timer 1 time-base counter</description>
            <name>T1_LOAD_HI</name>
          </field>
        </fields>
        <name>T1LOADHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Write any value will trigger timer 1 time-base counter reload</description>
            <name>T1_LOAD</name>
          </field>
        </fields>
        <name>T1LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  flash boot protection is enabled</description>
            <name>WDT_FLASHBOOT_MOD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>length of system reset selection. 0: 100ns  1: 200ns  2: 300ns  3: 400ns  4: 500ns  5: 800ns  6: 1.6us  7: 3.2us</description>
            <name>WDT_SYS_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>length of CPU reset selection. 0: 100ns  1: 200ns  2: 300ns 3: 400ns  4: 500ns  5: 800ns  6: 1.6us  7: 3.2us</description>
            <name>WDT_CPU_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  level type interrupt generation is enabled</description>
            <name>WDT_LEVEL_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  edge type interrupt generation is enabled</description>
            <name>WDT_EDGE_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Stage 3 configuration. 0: off  1: interrupt  2: reset CPU  3: reset system</description>
            <name>WDT_STG3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Stage 2 configuration. 0: off  1: interrupt  2: reset CPU  3: reset system</description>
            <name>WDT_STG2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Stage 1 configuration. 0: off  1: interrupt  2: reset CPU  3: reset system</description>
            <name>WDT_STG1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Stage 0 configuration. 0: off  1: interrupt  2: reset CPU  3: reset system</description>
            <name>WDT_STG0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When set  SWDT is enabled</description>
            <name>WDT_EN</name>
          </field>
        </fields>
        <name>WDTCONFIG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4C000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>SWDT clock prescale value. Period = 12.5ns * value stored in this register</description>
            <name>WDT_CLK_PRESCALE</name>
          </field>
        </fields>
        <name>WDTCONFIG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stage 0 timeout value in SWDT clock cycles</description>
            <name>WDT_STG0_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18CBA80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stage 1 timeout value in SWDT clock cycles</description>
            <name>WDT_STG1_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7FFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stage 2 timeout value in SWDT clock cycles</description>
            <name>WDT_STG2_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stage 3 timeout value in SWDT clock cycles</description>
            <name>WDT_STG3_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Write any value will feed SWDT</description>
            <name>WDT_FEED</name>
          </field>
        </fields>
        <name>WDTFEED</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>If change its value from default  then write protection is on.</description>
            <name>WDT_WKEY</name>
          </field>
        </fields>
        <name>WDTWPROTECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x50D83AA1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RTC_CALI_START_CYCLING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x2</bitWidth>
            <name>RTC_CALI_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RTC_CALI_RDY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xF</bitWidth>
            <name>RTC_CALI_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RTC_CALI_START</name>
          </field>
        </fields>
        <name>RTCCALICFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x13000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x19</bitWidth>
            <name>RTC_CALI_VALUE</name>
          </field>
        </fields>
        <name>RTCCALICFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_RTC_ONLY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_CPST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_LAC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_ALARM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_LEVEL_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_EDGE_INT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x10</bitWidth>
            <name>LACT_DIVIDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_AUTORELOAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_INCREASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_EN</name>
          </field>
        </fields>
        <name>LACTCONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60002300</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <name>LACT_RTC_STEP_LEN</name>
          </field>
        </fields>
        <name>LACTRTC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_LO</name>
          </field>
        </fields>
        <name>LACTLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_HI</name>
          </field>
        </fields>
        <name>LACTHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_UPDATE</name>
          </field>
        </fields>
        <name>LACTUPDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_ALARM_LO</name>
          </field>
        </fields>
        <name>LACTALARMLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_ALARM_HI</name>
          </field>
        </fields>
        <name>LACTALARMHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_LOAD_LO</name>
          </field>
        </fields>
        <name>LACTLOADLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_LOAD_HI</name>
          </field>
        </fields>
        <name>LACTLOADHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>LACT_LOAD</name>
          </field>
        </fields>
        <name>LACTLOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer0 alarm</description>
            <name>T0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer1 alarm</description>
            <name>T1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt when an interrupt stage timeout</description>
            <name>WDT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer0 alarm</description>
            <name>T0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer1 alarm</description>
            <name>T1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt when an interrupt stage timeout</description>
            <name>WDT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer0 alarm</description>
            <name>T0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer1 alarm</description>
            <name>T1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt when an interrupt stage timeout</description>
            <name>WDT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer0 alarm</description>
            <name>T0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interrupt when timer1 alarm</description>
            <name>T1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt when an interrupt stage timeout</description>
            <name>WDT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>LACT_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>Version of this regfile</description>
            <name>NTIMERS_DATE</name>
          </field>
        </fields>
        <name>NTIMERS_DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1604290</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Force clock enable for this regfile</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>TIMGCLK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x7C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF40000</baseAddress>
    <description>UART (Universal Asynchronous Receiver-Transmitter) Controller</description>
    <groupName>UART</groupName>
    <interrupts>
      <interrupt>
        <name>UART0</name>
        <value>0x22</value>
      </interrupt>
    </interrupts>
    <name>UART0</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields></fields>
        <name>FIFO_AHB</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores one byte data  read by rx fifo.</description>
            <name>RXFIFO_RD_BYTE</name>
          </field>
        </fields>
        <name>FIFO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives more data than (rx_flow_thrhd_h3 rx_flow_thrhd).</description>
            <name>RXFIFO_FULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when the amount of data in transmitter's fifo is less than ((tx_mem_cnttxfifo_cnt) .</description>
            <name>TXFIFO_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the parity error of data.</description>
            <name>PARITY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects data's frame error .</description>
            <name>FRM_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives more data than the fifo can store.</description>
            <name>RXFIFO_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the edge change of dsrn signal.</description>
            <name>DSR_CHG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the edge change of ctsn signal.</description>
            <name>CTS_CHG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the 0 after the stop bit.</description>
            <name>BRK_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver takes more time than rx_tout_thrhd to receive a byte.</description>
            <name>RXFIFO_TOUT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives xoff char with uart_sw_flow_con_en is set to 1.</description>
            <name>SW_XON_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives xon char with uart_sw_flow_con_en is set to 1.</description>
            <name>SW_XOFF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the start bit.</description>
            <name>GLITCH_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter completes  sendding  0 after all the datas in transmitter's fifo are send.</description>
            <name>TX_BRK_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter has kept the shortest duration after the  last data has been send.</description>
            <name>TX_BRK_IDLE_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter has send all the data in fifo.</description>
            <name>TX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when rs485 detects the parity error.</description>
            <name>RS485_PARITY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when rs485 detects the data frame error.</description>
            <name>RS485_FRM_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when rs485 detects the clash between transmitter and receiver.</description>
            <name>RS485_CLASH_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the configured at_cmd chars.</description>
            <name>AT_CMD_CHAR_DET_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_full_int_raw when rxfifo_full_int_ena is set to 1.</description>
            <name>RXFIFO_FULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for  txfifo_empty_int_raw  when txfifo_empty_int_ena is set to 1.</description>
            <name>TXFIFO_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for parity_err_int_raw when parity_err_int_ena is set to 1.</description>
            <name>PARITY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for frm_err_int_raw when fm_err_int_ena is set to 1.</description>
            <name>FRM_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_ovf_int_raw when rxfifo_ovf_int_ena is set to 1.</description>
            <name>RXFIFO_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for dsr_chg_int_raw when dsr_chg_int_ena is set to 1.</description>
            <name>DSR_CHG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for cts_chg_int_raw when cts_chg_int_ena is set to 1.</description>
            <name>CTS_CHG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for brk_det_int_raw when brk_det_int_ena is set to 1.</description>
            <name>BRK_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_tout_int_raw when rxfifo_tout_int_ena is set to 1.</description>
            <name>RXFIFO_TOUT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for sw_xon_int_raw when sw_xon_int_ena is set to 1.</description>
            <name>SW_XON_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for sw_xoff_int_raw when sw_xoff_int_ena is set to 1.</description>
            <name>SW_XOFF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for glitch_det_int_raw when glitch_det_int_ena is set to 1.</description>
            <name>GLITCH_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for tx_brk_done_int_raw when tx_brk_done_int_ena is set to 1.</description>
            <name>TX_BRK_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the stauts bit for tx_brk_idle_done_int_raw when tx_brk_idle_done_int_ena is set to 1.</description>
            <name>TX_BRK_IDLE_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for tx_done_int_raw when tx_done_int_ena is set to 1.</description>
            <name>TX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_parity_err_int_raw when rs485_parity_int_ena is set to 1.</description>
            <name>RS485_PARITY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_fm_err_int_raw when rs485_fm_err_int_ena is set to 1.</description>
            <name>RS485_FRM_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_clash_int_raw when rs485_clash_int_ena is set to 1.</description>
            <name>RS485_CLASH_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for at_cmd_det_int_raw when at_cmd_char_det_int_ena is set to 1.</description>
            <name>AT_CMD_CHAR_DET_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_full_int_st register.</description>
            <name>RXFIFO_FULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_full_int_st register.</description>
            <name>TXFIFO_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for parity_err_int_st register.</description>
            <name>PARITY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for frm_err_int_st register.</description>
            <name>FRM_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_ovf_int_st register.</description>
            <name>RXFIFO_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for dsr_chg_int_st register.</description>
            <name>DSR_CHG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for cts_chg_int_st register.</description>
            <name>CTS_CHG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for brk_det_int_st register.</description>
            <name>BRK_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_tout_int_st register.</description>
            <name>RXFIFO_TOUT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for sw_xon_int_st register.</description>
            <name>SW_XON_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for sw_xoff_int_st register.</description>
            <name>SW_XOFF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for glitch_det_int_st register.</description>
            <name>GLITCH_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_brk_done_int_st register.</description>
            <name>TX_BRK_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_brk_idle_done_int_st register.</description>
            <name>TX_BRK_IDLE_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_done_int_st register.</description>
            <name>TX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_parity_err_int_st register.</description>
            <name>RS485_PARITY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_parity_err_int_st register.</description>
            <name>RS485_FRM_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_clash_int_st register.</description>
            <name>RS485_CLASH_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for at_cmd_char_det_int_st register.</description>
            <name>AT_CMD_CHAR_DET_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_full_int_raw interrupt.</description>
            <name>RXFIFO_FULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear txfifo_empty_int_raw interrupt.</description>
            <name>TXFIFO_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear parity_err_int_raw interrupt.</description>
            <name>PARITY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear frm_err_int_raw interrupt.</description>
            <name>FRM_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear rxfifo_ovf_int_raw interrupt.</description>
            <name>RXFIFO_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the dsr_chg_int_raw interrupt.</description>
            <name>DSR_CHG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the cts_chg_int_raw interrupt.</description>
            <name>CTS_CHG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the brk_det_int_raw interrupt.</description>
            <name>BRK_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_tout_int_raw interrupt.</description>
            <name>RXFIFO_TOUT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the sw_xon_int_raw interrupt.</description>
            <name>SW_XON_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the sw_xon_int_raw interrupt.</description>
            <name>SW_XOFF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the glitch_det_int_raw interrupt.</description>
            <name>GLITCH_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_brk_done_int_raw interrupt..</description>
            <name>TX_BRK_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_brk_idle_done_int_raw interrupt.</description>
            <name>TX_BRK_IDLE_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_done_int_raw interrupt.</description>
            <name>TX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_parity_err_int_raw interrupt.</description>
            <name>RS485_PARITY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_frm_err_int_raw interrupt.</description>
            <name>RS485_FRM_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_clash_int_raw interrupt.</description>
            <name>RS485_CLASH_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the at_cmd_char_det_int_raw interrupt.</description>
            <name>AT_CMD_CHAR_DET_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The register value is  the  integer part of the frequency divider's factor.</description>
            <name>CLKDIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The register  value is the decimal part of the frequency divider's factor.</description>
            <name>FRAG</name>
          </field>
        </fields>
        <name>CLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2B6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for detecting baudrate.</description>
            <name>EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>when input pulse width is lower then this value igore this pulse.this register is used in autobaud detect process.</description>
            <name>GLITCH_FILT</name>
          </field>
        </fields>
        <name>AUTOBAUD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>(rx_mem_cnt rxfifo_cnt) stores the byte num of valid datas in receiver's fifo. rx_mem_cnt register stores the 3 most significant bits  rxfifo_cnt stores the 8 least significant bits.</description>
            <name>RXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register stores the value of receiver's finite state machine. 0:RX_IDLE  1:RX_STRT  2:RX_DAT0  3:RX_DAT1  4:RX_DAT2  5:RX_DAT3  6:RX_DAT4  7:RX_DAT5  8:RX_DAT6  9:RX_DAT7   10:RX_PRTY   11:RX_STP1  12:RX_STP2 13:RX_DL1</description>
            <name>ST_URX_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the level value of the internal uart dsr signal.</description>
            <name>DSRN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the level value of the internal uart cts signal.</description>
            <name>CTSN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the level value of the internal uart rxd signal.</description>
            <name>RXD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>(tx_mem_cnt txfifo_cnt) stores the byte num of valid datas in transmitter's fifo.tx_mem_cnt stores the 3 most significant bits  txfifo_cnt stores the 8 least significant bits.</description>
            <name>TXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register stores the value of transmitter's finite state machine. 0:TX_IDLE  1:TX_STRT  2:TX_DAT0  3:TX_DAT1  4:TX_DAT2   5:TX_DAT3 6:TX_DAT4  7:TX_DAT5  8:TX_DAT6 9:TX_DAT7  10:TX_PRTY   11:TX_STP1  12:TX_STP2  13:TX_DL0   14:TX_DL1</description>
            <name>ST_UTX_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The register represent the level value of the internal uart dsr signal.</description>
            <name>DTRN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register represent the level value of the internal uart cts signal.</description>
            <name>RTSN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register represent the  level value of the internal uart rxd signal.</description>
            <name>TXD</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the parity check mode.  0:even 1:odd</description>
            <name>PARITY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable uart parity check.</description>
            <name>PARITY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This registe is used to set the length of data:  0:5bits 1:6bits 2:7bits 3:8bits</description>
            <name>BIT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to set the length of  stop bit. 1:1bit  2:1.5bits  3:2bits</description>
            <name>STOP_BIT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the software rts signal which is used in software flow control.</description>
            <name>SW_RTS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the software dtr signal which is used in software flow control..</description>
            <name>SW_DTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale transmitter to  send 0 when the process of sending data is done.</description>
            <name>TXD_BRK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable irda loopback mode.</description>
            <name>IRDA_DPLX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the start enable bit for irda transmitter.</description>
            <name>IRDA_TX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1.the irda transmitter's 11th bit is the same to the 10th bit. 0.set irda transmitter's 11th bit to 0.</description>
            <name>IRDA_WCTL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of  irda transmitter's level.</description>
            <name>IRDA_TX_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of irda receiver's level.</description>
            <name>IRDA_RX_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable uart loopback test mode.</description>
            <name>LOOPBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable transmitter's flow control function.</description>
            <name>TX_FLOW_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable irda protocol.</description>
            <name>IRDA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset uart receiver's fifo.</description>
            <name>RXFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset uart transmitter's fifo.</description>
            <name>TXFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart rxd signal.</description>
            <name>RXD_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart cts signal.</description>
            <name>CTS_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart dsr signal.</description>
            <name>DSR_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart txd signal.</description>
            <name>TXD_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart rts signal.</description>
            <name>RTS_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart dtr signal.</description>
            <name>DTR_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1.force clock on for registers.support clock only when write registers</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1.receiver stops storing data int fifo when data is wrong. 0.receiver stores the data even if the  received data is wrong.</description>
            <name>ERR_WR_MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to select the clock.1.apb clock 0:ref_tick</description>
            <name>TICK_REF_ALWAYS_ON</name>
          </field>
        </fields>
        <name>CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800001C</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>When receiver receives more data than its threshold value.receiver will produce rxfifo_full_int_raw interrupt.the threshold value is (rx_flow_thrhd_h3 rxfifo_full_thrhd).</description>
            <name>RXFIFO_FULL_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>when the data amount in transmitter fifo is less than its threshold value. it will produce txfifo_empty_int_raw interrupt. the threshold value is (tx_mem_empty_thrhd txfifo_empty_thrhd)</description>
            <name>TXFIFO_EMPTY_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>when receiver receives more data than its threshold value. receiver produce signal to tell the transmitter stop transferring data. the threshold value is (rx_flow_thrhd_h3 rx_flow_thrhd).</description>
            <name>RX_FLOW_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the flow enable bit for uart receiver. 1:choose software flow control with configuring sw_rts signal</description>
            <name>RX_FLOW_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>This register is used to configure the timeout value for uart receiver receiving a byte.</description>
            <name>RX_TOUT_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enble bit for uart receiver's timeout function.</description>
            <name>RX_TOUT_EN</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6060</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the value of the minimum duration time for the low level pulse. it is used in baudrate-detect process.</description>
            <name>MIN_CNT</name>
          </field>
        </fields>
        <name>LOWPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores  the value of the maxinum duration time for the high level pulse. it is used in baudrate-detect process.</description>
            <name>MIN_CNT</name>
          </field>
        </fields>
        <name>HIGHPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the count of rxd edge change. it is used in baudrate-detect process.</description>
            <name>RXD_EDGE_CNT</name>
          </field>
        </fields>
        <name>RXD_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable software  flow control. it is used with register sw_xon or sw_xoff .</description>
            <name>SW_FLOW_CON_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to remove flow control char from the received data.</description>
            <name>XONOFF_DEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear ctsn to stop the  transmitter from sending data.</description>
            <name>FORCE_XON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to set ctsn to enable the transmitter to go on sending data.</description>
            <name>FORCE_XOFF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send xon char. it is cleared by hardware automatically.</description>
            <name>SEND_XON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send xoff char. it is cleared by hardware automatically.</description>
            <name>SEND_XOFF</name>
          </field>
        </fields>
        <name>FLOW_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When the input rxd edge changes more than this register value. the uart is active from light sleeping mode.</description>
            <name>ACTIVE_THRESHOLD</name>
          </field>
        </fields>
        <name>SLEEP_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>when the data amount in receiver's fifo is more than this register value. it will send a xoff char with uart_sw_flow_con_en set to 1.</description>
            <name>XON_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>When the data amount in receiver's fifo is less than this register value. it will send a xon char with uart_sw_flow_con_en set to 1.</description>
            <name>XOFF_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the xon flow control char.</description>
            <name>XON_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the xoff flow control char.</description>
            <name>XOFF_CHAR</name>
          </field>
        </fields>
        <name>SWFC_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1311E000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>when receiver takes more time than this register value to receive a byte data. it will produce frame end signal for uhci to stop receiving data.</description>
            <name>RX_IDLE_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the duration time between transfers.</description>
            <name>TX_IDLE_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the num of 0 send after the process of sending data is done. it is active when txd_brk is set to 1.</description>
            <name>TX_BRK_NUM</name>
          </field>
        </fields>
        <name>IDLE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA40100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to choose rs485 mode.</description>
            <name>RS485_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to delay the stop bit by 1 bit.</description>
            <name>DL0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to delay the stop bit by 1 bit.</description>
            <name>DL1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable loopback transmitter's output data signal to receiver's input data signal.</description>
            <name>RS485TX_RX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: enable rs485's transmitter to send data when rs485's receiver is busy. 0:rs485's transmitter should not send data when its receiver is busy.</description>
            <name>RS485RXBY_TX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to delay the receiver's internal data signal.</description>
            <name>RS485_RX_DLY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to delay the transmitter's internal data signal.</description>
            <name>RS485_TX_DLY_NUM</name>
          </field>
        </fields>
        <name>RS485_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register is used to configure the idle duration time before the first at_cmd is received by receiver. when the the duration is less than this register value it will not take the next data received as at_cmd char.</description>
            <name>PRE_IDLE_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_PRECNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x186A00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register is used to configure the duration time between the last at_cmd and the next data. when the duration is less than this register value  it will not take the previous data as at_cmd char.</description>
            <name>POST_IDLE_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_POSTCNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x186A00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register is used to configure the duration time between the at_cmd chars. when the duration time is less than this register value it will not take the datas as continous at_cmd chars.</description>
            <name>RX_GAP_TOUT</name>
          </field>
        </fields>
        <name>AT_CMD_GAPTOUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1E00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the content of at_cmd char.</description>
            <name>AT_CMD_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the num of continous at_cmd chars received by receiver.</description>
            <name>CHAR_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_CHAR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x32B</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to power down mem.when reg_mem_pd registers in the 3 uarts are all set to 1  mem will enter low power mode.</description>
            <name>MEM_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the amount of mem allocated to receiver's fifo. the default byte num is 128.</description>
            <name>RX_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the amount of mem allocated to transmitter's fifo.the default byte num is 128.</description>
            <name>TX_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rx_flow_thrhd's describtion.</description>
            <name>RX_FLOW_THRHD_H3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rx_tout_thrhd's describtion.</description>
            <name>RX_TOUT_THRHD_H3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>refer to the uart_xon_threshold's describtion.</description>
            <name>XON_THRESHOLD_H2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>refer to the uart_xoff_threshold's describtion.</description>
            <name>XOFF_THRESHOLD_H2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rxfifo_full_thrhd's describtion.</description>
            <name>RX_MEM_FULL_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to txfifo_empty_thrhd 's describtion.</description>
            <name>TX_MEM_EMPTY_THRHD</name>
          </field>
        </fields>
        <name>MEM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x88</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <name>MEM_TX_STATUS</name>
          </field>
        </fields>
        <name>MEM_TX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register stores the current uart rx mem read address  and rx mem write address </description>
            <name>MEM_RX_STATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>This register stores the rx mem read address </description>
            <name>MEM_RX_RD_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>This register stores the rx mem write address </description>
            <name>MEM_RX_WR_ADDR</name>
          </field>
        </fields>
        <name>MEM_RX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rxfifo_cnt's describtion.</description>
            <name>RX_MEM_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the txfifo_cnt's describtion.</description>
            <name>TX_MEM_CNT</name>
          </field>
        </fields>
        <name>MEM_CNT_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the count of rxd posedge edge. it is used in boudrate-detect process.</description>
            <name>POSEDGE_MIN_CNT</name>
          </field>
        </fields>
        <name>POSPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the count of rxd negedge edge. it is used in boudrate-detect process.</description>
            <name>NEGEDGE_MIN_CNT</name>
          </field>
        </fields>
        <name>NEGPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x15122500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>ID</name>
          </field>
        </fields>
        <name>ID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x7C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF50000</baseAddress>
    <derivedFrom>UART0</derivedFrom>
    <description>UART (Universal Asynchronous Receiver-Transmitter) Controller</description>
    <groupName>UART</groupName>
    <interrupts>
      <interrupt>
        <name>UART1</name>
        <value>0x23</value>
      </interrupt>
    </interrupts>
    <name>UART1</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields></fields>
        <name>FIFO_AHB</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores one byte data  read by rx fifo.</description>
            <name>RXFIFO_RD_BYTE</name>
          </field>
        </fields>
        <name>FIFO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives more data than (rx_flow_thrhd_h3 rx_flow_thrhd).</description>
            <name>RXFIFO_FULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when the amount of data in transmitter's fifo is less than ((tx_mem_cnttxfifo_cnt) .</description>
            <name>TXFIFO_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the parity error of data.</description>
            <name>PARITY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects data's frame error .</description>
            <name>FRM_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives more data than the fifo can store.</description>
            <name>RXFIFO_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the edge change of dsrn signal.</description>
            <name>DSR_CHG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the edge change of ctsn signal.</description>
            <name>CTS_CHG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the 0 after the stop bit.</description>
            <name>BRK_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver takes more time than rx_tout_thrhd to receive a byte.</description>
            <name>RXFIFO_TOUT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives xoff char with uart_sw_flow_con_en is set to 1.</description>
            <name>SW_XON_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives xon char with uart_sw_flow_con_en is set to 1.</description>
            <name>SW_XOFF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the start bit.</description>
            <name>GLITCH_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter completes  sendding  0 after all the datas in transmitter's fifo are send.</description>
            <name>TX_BRK_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter has kept the shortest duration after the  last data has been send.</description>
            <name>TX_BRK_IDLE_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter has send all the data in fifo.</description>
            <name>TX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when rs485 detects the parity error.</description>
            <name>RS485_PARITY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when rs485 detects the data frame error.</description>
            <name>RS485_FRM_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when rs485 detects the clash between transmitter and receiver.</description>
            <name>RS485_CLASH_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the configured at_cmd chars.</description>
            <name>AT_CMD_CHAR_DET_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_full_int_raw when rxfifo_full_int_ena is set to 1.</description>
            <name>RXFIFO_FULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for  txfifo_empty_int_raw  when txfifo_empty_int_ena is set to 1.</description>
            <name>TXFIFO_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for parity_err_int_raw when parity_err_int_ena is set to 1.</description>
            <name>PARITY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for frm_err_int_raw when fm_err_int_ena is set to 1.</description>
            <name>FRM_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_ovf_int_raw when rxfifo_ovf_int_ena is set to 1.</description>
            <name>RXFIFO_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for dsr_chg_int_raw when dsr_chg_int_ena is set to 1.</description>
            <name>DSR_CHG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for cts_chg_int_raw when cts_chg_int_ena is set to 1.</description>
            <name>CTS_CHG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for brk_det_int_raw when brk_det_int_ena is set to 1.</description>
            <name>BRK_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_tout_int_raw when rxfifo_tout_int_ena is set to 1.</description>
            <name>RXFIFO_TOUT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for sw_xon_int_raw when sw_xon_int_ena is set to 1.</description>
            <name>SW_XON_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for sw_xoff_int_raw when sw_xoff_int_ena is set to 1.</description>
            <name>SW_XOFF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for glitch_det_int_raw when glitch_det_int_ena is set to 1.</description>
            <name>GLITCH_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for tx_brk_done_int_raw when tx_brk_done_int_ena is set to 1.</description>
            <name>TX_BRK_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the stauts bit for tx_brk_idle_done_int_raw when tx_brk_idle_done_int_ena is set to 1.</description>
            <name>TX_BRK_IDLE_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for tx_done_int_raw when tx_done_int_ena is set to 1.</description>
            <name>TX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_parity_err_int_raw when rs485_parity_int_ena is set to 1.</description>
            <name>RS485_PARITY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_fm_err_int_raw when rs485_fm_err_int_ena is set to 1.</description>
            <name>RS485_FRM_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_clash_int_raw when rs485_clash_int_ena is set to 1.</description>
            <name>RS485_CLASH_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for at_cmd_det_int_raw when at_cmd_char_det_int_ena is set to 1.</description>
            <name>AT_CMD_CHAR_DET_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_full_int_st register.</description>
            <name>RXFIFO_FULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_full_int_st register.</description>
            <name>TXFIFO_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for parity_err_int_st register.</description>
            <name>PARITY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for frm_err_int_st register.</description>
            <name>FRM_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_ovf_int_st register.</description>
            <name>RXFIFO_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for dsr_chg_int_st register.</description>
            <name>DSR_CHG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for cts_chg_int_st register.</description>
            <name>CTS_CHG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for brk_det_int_st register.</description>
            <name>BRK_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_tout_int_st register.</description>
            <name>RXFIFO_TOUT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for sw_xon_int_st register.</description>
            <name>SW_XON_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for sw_xoff_int_st register.</description>
            <name>SW_XOFF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for glitch_det_int_st register.</description>
            <name>GLITCH_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_brk_done_int_st register.</description>
            <name>TX_BRK_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_brk_idle_done_int_st register.</description>
            <name>TX_BRK_IDLE_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_done_int_st register.</description>
            <name>TX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_parity_err_int_st register.</description>
            <name>RS485_PARITY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_parity_err_int_st register.</description>
            <name>RS485_FRM_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_clash_int_st register.</description>
            <name>RS485_CLASH_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for at_cmd_char_det_int_st register.</description>
            <name>AT_CMD_CHAR_DET_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_full_int_raw interrupt.</description>
            <name>RXFIFO_FULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear txfifo_empty_int_raw interrupt.</description>
            <name>TXFIFO_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear parity_err_int_raw interrupt.</description>
            <name>PARITY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear frm_err_int_raw interrupt.</description>
            <name>FRM_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear rxfifo_ovf_int_raw interrupt.</description>
            <name>RXFIFO_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the dsr_chg_int_raw interrupt.</description>
            <name>DSR_CHG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the cts_chg_int_raw interrupt.</description>
            <name>CTS_CHG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the brk_det_int_raw interrupt.</description>
            <name>BRK_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_tout_int_raw interrupt.</description>
            <name>RXFIFO_TOUT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the sw_xon_int_raw interrupt.</description>
            <name>SW_XON_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the sw_xon_int_raw interrupt.</description>
            <name>SW_XOFF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the glitch_det_int_raw interrupt.</description>
            <name>GLITCH_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_brk_done_int_raw interrupt..</description>
            <name>TX_BRK_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_brk_idle_done_int_raw interrupt.</description>
            <name>TX_BRK_IDLE_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_done_int_raw interrupt.</description>
            <name>TX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_parity_err_int_raw interrupt.</description>
            <name>RS485_PARITY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_frm_err_int_raw interrupt.</description>
            <name>RS485_FRM_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_clash_int_raw interrupt.</description>
            <name>RS485_CLASH_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the at_cmd_char_det_int_raw interrupt.</description>
            <name>AT_CMD_CHAR_DET_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The register value is  the  integer part of the frequency divider's factor.</description>
            <name>CLKDIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The register  value is the decimal part of the frequency divider's factor.</description>
            <name>FRAG</name>
          </field>
        </fields>
        <name>CLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2B6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for detecting baudrate.</description>
            <name>EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>when input pulse width is lower then this value igore this pulse.this register is used in autobaud detect process.</description>
            <name>GLITCH_FILT</name>
          </field>
        </fields>
        <name>AUTOBAUD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>(rx_mem_cnt rxfifo_cnt) stores the byte num of valid datas in receiver's fifo. rx_mem_cnt register stores the 3 most significant bits  rxfifo_cnt stores the 8 least significant bits.</description>
            <name>RXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register stores the value of receiver's finite state machine. 0:RX_IDLE  1:RX_STRT  2:RX_DAT0  3:RX_DAT1  4:RX_DAT2  5:RX_DAT3  6:RX_DAT4  7:RX_DAT5  8:RX_DAT6  9:RX_DAT7   10:RX_PRTY   11:RX_STP1  12:RX_STP2 13:RX_DL1</description>
            <name>ST_URX_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the level value of the internal uart dsr signal.</description>
            <name>DSRN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the level value of the internal uart cts signal.</description>
            <name>CTSN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the level value of the internal uart rxd signal.</description>
            <name>RXD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>(tx_mem_cnt txfifo_cnt) stores the byte num of valid datas in transmitter's fifo.tx_mem_cnt stores the 3 most significant bits  txfifo_cnt stores the 8 least significant bits.</description>
            <name>TXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register stores the value of transmitter's finite state machine. 0:TX_IDLE  1:TX_STRT  2:TX_DAT0  3:TX_DAT1  4:TX_DAT2   5:TX_DAT3 6:TX_DAT4  7:TX_DAT5  8:TX_DAT6 9:TX_DAT7  10:TX_PRTY   11:TX_STP1  12:TX_STP2  13:TX_DL0   14:TX_DL1</description>
            <name>ST_UTX_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The register represent the level value of the internal uart dsr signal.</description>
            <name>DTRN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register represent the level value of the internal uart cts signal.</description>
            <name>RTSN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register represent the  level value of the internal uart rxd signal.</description>
            <name>TXD</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the parity check mode.  0:even 1:odd</description>
            <name>PARITY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable uart parity check.</description>
            <name>PARITY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This registe is used to set the length of data:  0:5bits 1:6bits 2:7bits 3:8bits</description>
            <name>BIT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to set the length of  stop bit. 1:1bit  2:1.5bits  3:2bits</description>
            <name>STOP_BIT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the software rts signal which is used in software flow control.</description>
            <name>SW_RTS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the software dtr signal which is used in software flow control..</description>
            <name>SW_DTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale transmitter to  send 0 when the process of sending data is done.</description>
            <name>TXD_BRK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable irda loopback mode.</description>
            <name>IRDA_DPLX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the start enable bit for irda transmitter.</description>
            <name>IRDA_TX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1.the irda transmitter's 11th bit is the same to the 10th bit. 0.set irda transmitter's 11th bit to 0.</description>
            <name>IRDA_WCTL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of  irda transmitter's level.</description>
            <name>IRDA_TX_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of irda receiver's level.</description>
            <name>IRDA_RX_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable uart loopback test mode.</description>
            <name>LOOPBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable transmitter's flow control function.</description>
            <name>TX_FLOW_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable irda protocol.</description>
            <name>IRDA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset uart receiver's fifo.</description>
            <name>RXFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset uart transmitter's fifo.</description>
            <name>TXFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart rxd signal.</description>
            <name>RXD_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart cts signal.</description>
            <name>CTS_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart dsr signal.</description>
            <name>DSR_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart txd signal.</description>
            <name>TXD_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart rts signal.</description>
            <name>RTS_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart dtr signal.</description>
            <name>DTR_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1.force clock on for registers.support clock only when write registers</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1.receiver stops storing data int fifo when data is wrong. 0.receiver stores the data even if the  received data is wrong.</description>
            <name>ERR_WR_MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to select the clock.1.apb clock 0:ref_tick</description>
            <name>TICK_REF_ALWAYS_ON</name>
          </field>
        </fields>
        <name>CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800001C</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>When receiver receives more data than its threshold value.receiver will produce rxfifo_full_int_raw interrupt.the threshold value is (rx_flow_thrhd_h3 rxfifo_full_thrhd).</description>
            <name>RXFIFO_FULL_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>when the data amount in transmitter fifo is less than its threshold value. it will produce txfifo_empty_int_raw interrupt. the threshold value is (tx_mem_empty_thrhd txfifo_empty_thrhd)</description>
            <name>TXFIFO_EMPTY_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>when receiver receives more data than its threshold value. receiver produce signal to tell the transmitter stop transferring data. the threshold value is (rx_flow_thrhd_h3 rx_flow_thrhd).</description>
            <name>RX_FLOW_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the flow enable bit for uart receiver. 1:choose software flow control with configuring sw_rts signal</description>
            <name>RX_FLOW_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>This register is used to configure the timeout value for uart receiver receiving a byte.</description>
            <name>RX_TOUT_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enble bit for uart receiver's timeout function.</description>
            <name>RX_TOUT_EN</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6060</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the value of the minimum duration time for the low level pulse. it is used in baudrate-detect process.</description>
            <name>MIN_CNT</name>
          </field>
        </fields>
        <name>LOWPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores  the value of the maxinum duration time for the high level pulse. it is used in baudrate-detect process.</description>
            <name>MIN_CNT</name>
          </field>
        </fields>
        <name>HIGHPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the count of rxd edge change. it is used in baudrate-detect process.</description>
            <name>RXD_EDGE_CNT</name>
          </field>
        </fields>
        <name>RXD_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable software  flow control. it is used with register sw_xon or sw_xoff .</description>
            <name>SW_FLOW_CON_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to remove flow control char from the received data.</description>
            <name>XONOFF_DEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear ctsn to stop the  transmitter from sending data.</description>
            <name>FORCE_XON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to set ctsn to enable the transmitter to go on sending data.</description>
            <name>FORCE_XOFF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send xon char. it is cleared by hardware automatically.</description>
            <name>SEND_XON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send xoff char. it is cleared by hardware automatically.</description>
            <name>SEND_XOFF</name>
          </field>
        </fields>
        <name>FLOW_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When the input rxd edge changes more than this register value. the uart is active from light sleeping mode.</description>
            <name>ACTIVE_THRESHOLD</name>
          </field>
        </fields>
        <name>SLEEP_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>when the data amount in receiver's fifo is more than this register value. it will send a xoff char with uart_sw_flow_con_en set to 1.</description>
            <name>XON_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>When the data amount in receiver's fifo is less than this register value. it will send a xon char with uart_sw_flow_con_en set to 1.</description>
            <name>XOFF_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the xon flow control char.</description>
            <name>XON_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the xoff flow control char.</description>
            <name>XOFF_CHAR</name>
          </field>
        </fields>
        <name>SWFC_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1311E000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>when receiver takes more time than this register value to receive a byte data. it will produce frame end signal for uhci to stop receiving data.</description>
            <name>RX_IDLE_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the duration time between transfers.</description>
            <name>TX_IDLE_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the num of 0 send after the process of sending data is done. it is active when txd_brk is set to 1.</description>
            <name>TX_BRK_NUM</name>
          </field>
        </fields>
        <name>IDLE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA40100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to choose rs485 mode.</description>
            <name>RS485_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to delay the stop bit by 1 bit.</description>
            <name>DL0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to delay the stop bit by 1 bit.</description>
            <name>DL1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable loopback transmitter's output data signal to receiver's input data signal.</description>
            <name>RS485TX_RX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: enable rs485's transmitter to send data when rs485's receiver is busy. 0:rs485's transmitter should not send data when its receiver is busy.</description>
            <name>RS485RXBY_TX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to delay the receiver's internal data signal.</description>
            <name>RS485_RX_DLY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to delay the transmitter's internal data signal.</description>
            <name>RS485_TX_DLY_NUM</name>
          </field>
        </fields>
        <name>RS485_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register is used to configure the idle duration time before the first at_cmd is received by receiver. when the the duration is less than this register value it will not take the next data received as at_cmd char.</description>
            <name>PRE_IDLE_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_PRECNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x186A00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register is used to configure the duration time between the last at_cmd and the next data. when the duration is less than this register value  it will not take the previous data as at_cmd char.</description>
            <name>POST_IDLE_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_POSTCNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x186A00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register is used to configure the duration time between the at_cmd chars. when the duration time is less than this register value it will not take the datas as continous at_cmd chars.</description>
            <name>RX_GAP_TOUT</name>
          </field>
        </fields>
        <name>AT_CMD_GAPTOUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1E00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the content of at_cmd char.</description>
            <name>AT_CMD_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the num of continous at_cmd chars received by receiver.</description>
            <name>CHAR_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_CHAR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x32B</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to power down mem.when reg_mem_pd registers in the 3 uarts are all set to 1  mem will enter low power mode.</description>
            <name>MEM_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the amount of mem allocated to receiver's fifo. the default byte num is 128.</description>
            <name>RX_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the amount of mem allocated to transmitter's fifo.the default byte num is 128.</description>
            <name>TX_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rx_flow_thrhd's describtion.</description>
            <name>RX_FLOW_THRHD_H3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rx_tout_thrhd's describtion.</description>
            <name>RX_TOUT_THRHD_H3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>refer to the uart_xon_threshold's describtion.</description>
            <name>XON_THRESHOLD_H2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>refer to the uart_xoff_threshold's describtion.</description>
            <name>XOFF_THRESHOLD_H2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rxfifo_full_thrhd's describtion.</description>
            <name>RX_MEM_FULL_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to txfifo_empty_thrhd 's describtion.</description>
            <name>TX_MEM_EMPTY_THRHD</name>
          </field>
        </fields>
        <name>MEM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x88</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <name>MEM_TX_STATUS</name>
          </field>
        </fields>
        <name>MEM_TX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register stores the current uart rx mem read address  and rx mem write address </description>
            <name>MEM_RX_STATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>This register stores the rx mem read address </description>
            <name>MEM_RX_RD_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>This register stores the rx mem write address </description>
            <name>MEM_RX_WR_ADDR</name>
          </field>
        </fields>
        <name>MEM_RX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rxfifo_cnt's describtion.</description>
            <name>RX_MEM_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the txfifo_cnt's describtion.</description>
            <name>TX_MEM_CNT</name>
          </field>
        </fields>
        <name>MEM_CNT_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the count of rxd posedge edge. it is used in boudrate-detect process.</description>
            <name>POSEDGE_MIN_CNT</name>
          </field>
        </fields>
        <name>POSPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the count of rxd negedge edge. it is used in boudrate-detect process.</description>
            <name>NEGEDGE_MIN_CNT</name>
          </field>
        </fields>
        <name>NEGPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x15122500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>ID</name>
          </field>
        </fields>
        <name>ID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x7C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF6E000</baseAddress>
    <derivedFrom>UART0</derivedFrom>
    <description>UART (Universal Asynchronous Receiver-Transmitter) Controller</description>
    <groupName>UART</groupName>
    <interrupts>
      <interrupt>
        <name>UART2</name>
        <value>0x24</value>
      </interrupt>
    </interrupts>
    <name>UART2</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields></fields>
        <name>FIFO_AHB</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores one byte data  read by rx fifo.</description>
            <name>RXFIFO_RD_BYTE</name>
          </field>
        </fields>
        <name>FIFO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives more data than (rx_flow_thrhd_h3 rx_flow_thrhd).</description>
            <name>RXFIFO_FULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when the amount of data in transmitter's fifo is less than ((tx_mem_cnttxfifo_cnt) .</description>
            <name>TXFIFO_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the parity error of data.</description>
            <name>PARITY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects data's frame error .</description>
            <name>FRM_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives more data than the fifo can store.</description>
            <name>RXFIFO_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the edge change of dsrn signal.</description>
            <name>DSR_CHG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the edge change of ctsn signal.</description>
            <name>CTS_CHG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the 0 after the stop bit.</description>
            <name>BRK_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver takes more time than rx_tout_thrhd to receive a byte.</description>
            <name>RXFIFO_TOUT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives xoff char with uart_sw_flow_con_en is set to 1.</description>
            <name>SW_XON_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives xon char with uart_sw_flow_con_en is set to 1.</description>
            <name>SW_XOFF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the start bit.</description>
            <name>GLITCH_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter completes  sendding  0 after all the datas in transmitter's fifo are send.</description>
            <name>TX_BRK_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter has kept the shortest duration after the  last data has been send.</description>
            <name>TX_BRK_IDLE_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter has send all the data in fifo.</description>
            <name>TX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when rs485 detects the parity error.</description>
            <name>RS485_PARITY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when rs485 detects the data frame error.</description>
            <name>RS485_FRM_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when rs485 detects the clash between transmitter and receiver.</description>
            <name>RS485_CLASH_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the configured at_cmd chars.</description>
            <name>AT_CMD_CHAR_DET_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_full_int_raw when rxfifo_full_int_ena is set to 1.</description>
            <name>RXFIFO_FULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for  txfifo_empty_int_raw  when txfifo_empty_int_ena is set to 1.</description>
            <name>TXFIFO_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for parity_err_int_raw when parity_err_int_ena is set to 1.</description>
            <name>PARITY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for frm_err_int_raw when fm_err_int_ena is set to 1.</description>
            <name>FRM_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_ovf_int_raw when rxfifo_ovf_int_ena is set to 1.</description>
            <name>RXFIFO_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for dsr_chg_int_raw when dsr_chg_int_ena is set to 1.</description>
            <name>DSR_CHG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for cts_chg_int_raw when cts_chg_int_ena is set to 1.</description>
            <name>CTS_CHG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for brk_det_int_raw when brk_det_int_ena is set to 1.</description>
            <name>BRK_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_tout_int_raw when rxfifo_tout_int_ena is set to 1.</description>
            <name>RXFIFO_TOUT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for sw_xon_int_raw when sw_xon_int_ena is set to 1.</description>
            <name>SW_XON_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for sw_xoff_int_raw when sw_xoff_int_ena is set to 1.</description>
            <name>SW_XOFF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for glitch_det_int_raw when glitch_det_int_ena is set to 1.</description>
            <name>GLITCH_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for tx_brk_done_int_raw when tx_brk_done_int_ena is set to 1.</description>
            <name>TX_BRK_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the stauts bit for tx_brk_idle_done_int_raw when tx_brk_idle_done_int_ena is set to 1.</description>
            <name>TX_BRK_IDLE_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for tx_done_int_raw when tx_done_int_ena is set to 1.</description>
            <name>TX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_parity_err_int_raw when rs485_parity_int_ena is set to 1.</description>
            <name>RS485_PARITY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_fm_err_int_raw when rs485_fm_err_int_ena is set to 1.</description>
            <name>RS485_FRM_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_clash_int_raw when rs485_clash_int_ena is set to 1.</description>
            <name>RS485_CLASH_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for at_cmd_det_int_raw when at_cmd_char_det_int_ena is set to 1.</description>
            <name>AT_CMD_CHAR_DET_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_full_int_st register.</description>
            <name>RXFIFO_FULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_full_int_st register.</description>
            <name>TXFIFO_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for parity_err_int_st register.</description>
            <name>PARITY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for frm_err_int_st register.</description>
            <name>FRM_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_ovf_int_st register.</description>
            <name>RXFIFO_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for dsr_chg_int_st register.</description>
            <name>DSR_CHG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for cts_chg_int_st register.</description>
            <name>CTS_CHG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for brk_det_int_st register.</description>
            <name>BRK_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_tout_int_st register.</description>
            <name>RXFIFO_TOUT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for sw_xon_int_st register.</description>
            <name>SW_XON_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for sw_xoff_int_st register.</description>
            <name>SW_XOFF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for glitch_det_int_st register.</description>
            <name>GLITCH_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_brk_done_int_st register.</description>
            <name>TX_BRK_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_brk_idle_done_int_st register.</description>
            <name>TX_BRK_IDLE_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_done_int_st register.</description>
            <name>TX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_parity_err_int_st register.</description>
            <name>RS485_PARITY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_parity_err_int_st register.</description>
            <name>RS485_FRM_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_clash_int_st register.</description>
            <name>RS485_CLASH_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for at_cmd_char_det_int_st register.</description>
            <name>AT_CMD_CHAR_DET_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_full_int_raw interrupt.</description>
            <name>RXFIFO_FULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear txfifo_empty_int_raw interrupt.</description>
            <name>TXFIFO_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear parity_err_int_raw interrupt.</description>
            <name>PARITY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear frm_err_int_raw interrupt.</description>
            <name>FRM_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear rxfifo_ovf_int_raw interrupt.</description>
            <name>RXFIFO_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the dsr_chg_int_raw interrupt.</description>
            <name>DSR_CHG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the cts_chg_int_raw interrupt.</description>
            <name>CTS_CHG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the brk_det_int_raw interrupt.</description>
            <name>BRK_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_tout_int_raw interrupt.</description>
            <name>RXFIFO_TOUT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the sw_xon_int_raw interrupt.</description>
            <name>SW_XON_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the sw_xon_int_raw interrupt.</description>
            <name>SW_XOFF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the glitch_det_int_raw interrupt.</description>
            <name>GLITCH_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_brk_done_int_raw interrupt..</description>
            <name>TX_BRK_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_brk_idle_done_int_raw interrupt.</description>
            <name>TX_BRK_IDLE_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_done_int_raw interrupt.</description>
            <name>TX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_parity_err_int_raw interrupt.</description>
            <name>RS485_PARITY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_frm_err_int_raw interrupt.</description>
            <name>RS485_FRM_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_clash_int_raw interrupt.</description>
            <name>RS485_CLASH_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the at_cmd_char_det_int_raw interrupt.</description>
            <name>AT_CMD_CHAR_DET_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>The register value is  the  integer part of the frequency divider's factor.</description>
            <name>CLKDIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The register  value is the decimal part of the frequency divider's factor.</description>
            <name>FRAG</name>
          </field>
        </fields>
        <name>CLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2B6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for detecting baudrate.</description>
            <name>EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>when input pulse width is lower then this value igore this pulse.this register is used in autobaud detect process.</description>
            <name>GLITCH_FILT</name>
          </field>
        </fields>
        <name>AUTOBAUD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>(rx_mem_cnt rxfifo_cnt) stores the byte num of valid datas in receiver's fifo. rx_mem_cnt register stores the 3 most significant bits  rxfifo_cnt stores the 8 least significant bits.</description>
            <name>RXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register stores the value of receiver's finite state machine. 0:RX_IDLE  1:RX_STRT  2:RX_DAT0  3:RX_DAT1  4:RX_DAT2  5:RX_DAT3  6:RX_DAT4  7:RX_DAT5  8:RX_DAT6  9:RX_DAT7   10:RX_PRTY   11:RX_STP1  12:RX_STP2 13:RX_DL1</description>
            <name>ST_URX_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the level value of the internal uart dsr signal.</description>
            <name>DSRN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the level value of the internal uart cts signal.</description>
            <name>CTSN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register stores the level value of the internal uart rxd signal.</description>
            <name>RXD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>(tx_mem_cnt txfifo_cnt) stores the byte num of valid datas in transmitter's fifo.tx_mem_cnt stores the 3 most significant bits  txfifo_cnt stores the 8 least significant bits.</description>
            <name>TXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register stores the value of transmitter's finite state machine. 0:TX_IDLE  1:TX_STRT  2:TX_DAT0  3:TX_DAT1  4:TX_DAT2   5:TX_DAT3 6:TX_DAT4  7:TX_DAT5  8:TX_DAT6 9:TX_DAT7  10:TX_PRTY   11:TX_STP1  12:TX_STP2  13:TX_DL0   14:TX_DL1</description>
            <name>ST_UTX_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The register represent the level value of the internal uart dsr signal.</description>
            <name>DTRN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register represent the level value of the internal uart cts signal.</description>
            <name>RTSN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register represent the  level value of the internal uart rxd signal.</description>
            <name>TXD</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the parity check mode.  0:even 1:odd</description>
            <name>PARITY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable uart parity check.</description>
            <name>PARITY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This registe is used to set the length of data:  0:5bits 1:6bits 2:7bits 3:8bits</description>
            <name>BIT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to set the length of  stop bit. 1:1bit  2:1.5bits  3:2bits</description>
            <name>STOP_BIT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the software rts signal which is used in software flow control.</description>
            <name>SW_RTS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the software dtr signal which is used in software flow control..</description>
            <name>SW_DTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale transmitter to  send 0 when the process of sending data is done.</description>
            <name>TXD_BRK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable irda loopback mode.</description>
            <name>IRDA_DPLX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the start enable bit for irda transmitter.</description>
            <name>IRDA_TX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1.the irda transmitter's 11th bit is the same to the 10th bit. 0.set irda transmitter's 11th bit to 0.</description>
            <name>IRDA_WCTL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of  irda transmitter's level.</description>
            <name>IRDA_TX_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of irda receiver's level.</description>
            <name>IRDA_RX_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable uart loopback test mode.</description>
            <name>LOOPBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable transmitter's flow control function.</description>
            <name>TX_FLOW_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable irda protocol.</description>
            <name>IRDA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset uart receiver's fifo.</description>
            <name>RXFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset uart transmitter's fifo.</description>
            <name>TXFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart rxd signal.</description>
            <name>RXD_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart cts signal.</description>
            <name>CTS_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart dsr signal.</description>
            <name>DSR_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart txd signal.</description>
            <name>TXD_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart rts signal.</description>
            <name>RTS_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart dtr signal.</description>
            <name>DTR_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1.force clock on for registers.support clock only when write registers</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1.receiver stops storing data int fifo when data is wrong. 0.receiver stores the data even if the  received data is wrong.</description>
            <name>ERR_WR_MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to select the clock.1.apb clock 0:ref_tick</description>
            <name>TICK_REF_ALWAYS_ON</name>
          </field>
        </fields>
        <name>CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800001C</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>When receiver receives more data than its threshold value.receiver will produce rxfifo_full_int_raw interrupt.the threshold value is (rx_flow_thrhd_h3 rxfifo_full_thrhd).</description>
            <name>RXFIFO_FULL_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>when the data amount in transmitter fifo is less than its threshold value. it will produce txfifo_empty_int_raw interrupt. the threshold value is (tx_mem_empty_thrhd txfifo_empty_thrhd)</description>
            <name>TXFIFO_EMPTY_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>when receiver receives more data than its threshold value. receiver produce signal to tell the transmitter stop transferring data. the threshold value is (rx_flow_thrhd_h3 rx_flow_thrhd).</description>
            <name>RX_FLOW_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the flow enable bit for uart receiver. 1:choose software flow control with configuring sw_rts signal</description>
            <name>RX_FLOW_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>This register is used to configure the timeout value for uart receiver receiving a byte.</description>
            <name>RX_TOUT_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enble bit for uart receiver's timeout function.</description>
            <name>RX_TOUT_EN</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6060</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the value of the minimum duration time for the low level pulse. it is used in baudrate-detect process.</description>
            <name>MIN_CNT</name>
          </field>
        </fields>
        <name>LOWPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores  the value of the maxinum duration time for the high level pulse. it is used in baudrate-detect process.</description>
            <name>MIN_CNT</name>
          </field>
        </fields>
        <name>HIGHPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the count of rxd edge change. it is used in baudrate-detect process.</description>
            <name>RXD_EDGE_CNT</name>
          </field>
        </fields>
        <name>RXD_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable software  flow control. it is used with register sw_xon or sw_xoff .</description>
            <name>SW_FLOW_CON_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to remove flow control char from the received data.</description>
            <name>XONOFF_DEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear ctsn to stop the  transmitter from sending data.</description>
            <name>FORCE_XON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to set ctsn to enable the transmitter to go on sending data.</description>
            <name>FORCE_XOFF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send xon char. it is cleared by hardware automatically.</description>
            <name>SEND_XON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send xoff char. it is cleared by hardware automatically.</description>
            <name>SEND_XOFF</name>
          </field>
        </fields>
        <name>FLOW_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When the input rxd edge changes more than this register value. the uart is active from light sleeping mode.</description>
            <name>ACTIVE_THRESHOLD</name>
          </field>
        </fields>
        <name>SLEEP_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>when the data amount in receiver's fifo is more than this register value. it will send a xoff char with uart_sw_flow_con_en set to 1.</description>
            <name>XON_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>When the data amount in receiver's fifo is less than this register value. it will send a xon char with uart_sw_flow_con_en set to 1.</description>
            <name>XOFF_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the xon flow control char.</description>
            <name>XON_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the xoff flow control char.</description>
            <name>XOFF_CHAR</name>
          </field>
        </fields>
        <name>SWFC_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1311E000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>when receiver takes more time than this register value to receive a byte data. it will produce frame end signal for uhci to stop receiving data.</description>
            <name>RX_IDLE_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the duration time between transfers.</description>
            <name>TX_IDLE_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the num of 0 send after the process of sending data is done. it is active when txd_brk is set to 1.</description>
            <name>TX_BRK_NUM</name>
          </field>
        </fields>
        <name>IDLE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA40100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to choose rs485 mode.</description>
            <name>RS485_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to delay the stop bit by 1 bit.</description>
            <name>DL0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to delay the stop bit by 1 bit.</description>
            <name>DL1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable loopback transmitter's output data signal to receiver's input data signal.</description>
            <name>RS485TX_RX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: enable rs485's transmitter to send data when rs485's receiver is busy. 0:rs485's transmitter should not send data when its receiver is busy.</description>
            <name>RS485RXBY_TX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to delay the receiver's internal data signal.</description>
            <name>RS485_RX_DLY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to delay the transmitter's internal data signal.</description>
            <name>RS485_TX_DLY_NUM</name>
          </field>
        </fields>
        <name>RS485_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register is used to configure the idle duration time before the first at_cmd is received by receiver. when the the duration is less than this register value it will not take the next data received as at_cmd char.</description>
            <name>PRE_IDLE_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_PRECNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x186A00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register is used to configure the duration time between the last at_cmd and the next data. when the duration is less than this register value  it will not take the previous data as at_cmd char.</description>
            <name>POST_IDLE_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_POSTCNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x186A00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register is used to configure the duration time between the at_cmd chars. when the duration time is less than this register value it will not take the datas as continous at_cmd chars.</description>
            <name>RX_GAP_TOUT</name>
          </field>
        </fields>
        <name>AT_CMD_GAPTOUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1E00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the content of at_cmd char.</description>
            <name>AT_CMD_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the num of continous at_cmd chars received by receiver.</description>
            <name>CHAR_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_CHAR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x32B</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to power down mem.when reg_mem_pd registers in the 3 uarts are all set to 1  mem will enter low power mode.</description>
            <name>MEM_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the amount of mem allocated to receiver's fifo. the default byte num is 128.</description>
            <name>RX_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to configure the amount of mem allocated to transmitter's fifo.the default byte num is 128.</description>
            <name>TX_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rx_flow_thrhd's describtion.</description>
            <name>RX_FLOW_THRHD_H3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rx_tout_thrhd's describtion.</description>
            <name>RX_TOUT_THRHD_H3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>refer to the uart_xon_threshold's describtion.</description>
            <name>XON_THRESHOLD_H2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>refer to the uart_xoff_threshold's describtion.</description>
            <name>XOFF_THRESHOLD_H2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rxfifo_full_thrhd's describtion.</description>
            <name>RX_MEM_FULL_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to txfifo_empty_thrhd 's describtion.</description>
            <name>TX_MEM_EMPTY_THRHD</name>
          </field>
        </fields>
        <name>MEM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x88</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <name>MEM_TX_STATUS</name>
          </field>
        </fields>
        <name>MEM_TX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>This register stores the current uart rx mem read address  and rx mem write address </description>
            <name>MEM_RX_STATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>This register stores the rx mem read address </description>
            <name>MEM_RX_RD_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>This register stores the rx mem write address </description>
            <name>MEM_RX_WR_ADDR</name>
          </field>
        </fields>
        <name>MEM_RX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the rxfifo_cnt's describtion.</description>
            <name>RX_MEM_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>refer to the txfifo_cnt's describtion.</description>
            <name>TX_MEM_CNT</name>
          </field>
        </fields>
        <name>MEM_CNT_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the count of rxd posedge edge. it is used in boudrate-detect process.</description>
            <name>POSEDGE_MIN_CNT</name>
          </field>
        </fields>
        <name>POSPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the count of rxd negedge edge. it is used in boudrate-detect process.</description>
            <name>NEGEDGE_MIN_CNT</name>
          </field>
        </fields>
        <name>NEGPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x15122500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>ID</name>
          </field>
        </fields>
        <name>ID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xC8</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x3FF54000</baseAddress>
    <description>Peripheral UHCI0</description>
    <groupName>UHCI</groupName>
    <interrupts>
      <interrupt>
        <name>UHCI0</name>
        <value>0xC</value>
      </interrupt>
    </interrupts>
    <name>UHCI0</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset in link operations.</description>
            <name>IN_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset out link operations.</description>
            <name>OUT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset dma ahb fifo.</description>
            <name>AHBM_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset dma  ahb interface.</description>
            <name>AHBM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable loop test for in links.</description>
            <name>IN_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable loop test for out links.</description>
            <name>OUT_LOOP_TEST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when in link's length is 0  go on to use the next in link automatically.</description>
            <name>OUT_AUTO_WRBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>don't use</description>
            <name>OUT_NO_RESTART_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to produce eof after DMA pops all data  clear this bit to produce eof after DMA pushes all data</description>
            <name>OUT_EOF_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to use UART to transmit or receive data.</description>
            <name>UART0_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to use UART1 to transmit or receive data.</description>
            <name>UART1_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to use UART2 to transmit or receive data.</description>
            <name>UART2_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable DMA in links to use burst mode.</description>
            <name>OUTDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable DMA out links to use burst mode.</description>
            <name>INDSCR_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable DMA burst MODE</description>
            <name>OUT_DATA_BURST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>MEM_TRANS_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to use special char to separate the data frame.</description>
            <name>SEPER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable to use head packet  before the data frame.</description>
            <name>HEAD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable receiver''s ability of crc calculation  when crc_en bit in head packet is 1 then there will be crc bytes after data_frame</description>
            <name>CRC_REC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable to use idle time  when the idle time after data frame is satisfied  this means the end of a data frame.</description>
            <name>UART_IDLE_EOF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable to use packet_len in packet head  when the received data is equal to packet_len  this means the end of a data frame.</description>
            <name>LEN_EOF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable crc calculation for data frame when bit6 in the head packet is 1.</description>
            <name>ENCODE_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable clock-gating for read or write registers.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable to use brk char as the end of a data frame.</description>
            <name>UART_RX_BRK_EOF_EN</name>
          </field>
        </fields>
        <name>CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x370100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when a separator char has been send  it will produce uhci_rx_start_int interrupt.</description>
            <name>RX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when DMA detects a separator char it will produce uhci_tx_start_int interrupt.</description>
            <name>TX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when DMA takes a lot of time to receive a data   it will produce uhci_rx_hung_int interrupt.</description>
            <name>RX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when DMA takes a lot of time to read a data from RAM  it will produce uhci_tx_hung_int interrupt.</description>
            <name>TX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when a in link descriptor has been completed it will produce uhci_in_done_int interrupt.</description>
            <name>IN_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when a data packet has been received  it will produce uhci_in_suc_eof_int interrupt.</description>
            <name>IN_SUC_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when there are some errors about eof in in link descriptor  it will produce uhci_in_err_eof_int interrupt.</description>
            <name>IN_ERR_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when a out link descriptor is completed  it will produce uhci_out_done_int interrupt.</description>
            <name>OUT_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when the current descriptor's eof bit is 1  it will produce uhci_out_eof_int interrupt.</description>
            <name>OUT_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when there are some errors about the out link descriptor  it will produce uhci_in_dscr_err_int interrupt.</description>
            <name>IN_DSCR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when there are some errors about the in link descriptor  it will produce uhci_out_dscr_err_int interrupt.</description>
            <name>OUT_DSCR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when there are not enough in links for DMA it will produce uhci_in_dscr_err_int interrupt.</description>
            <name>IN_DSCR_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>when there are some errors about eof in outlink descriptor  it will produce uhci_outlink_eof_err_int interrupt.</description>
            <name>OUTLINK_EOF_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When all data have been send  it will produce uhci_out_total_eof_int interrupt.</description>
            <name>OUT_TOTAL_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When use single send registers to send a short packets it will produce this interrupt when dma has send the short packet.</description>
            <name>SEND_S_Q_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When use always_send registers to send a series of short packets it will produce this interrupt when dma has send the short packet.</description>
            <name>SEND_A_Q_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DMA_INFIFO_FULL_WM_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_EOF_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SEND_S_Q_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SEND_A_Q_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DMA_INFIFO_FULL_WM_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_EOF_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SEND_S_Q_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SEND_A_Q_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DMA_INFIFO_FULL_WM_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>RX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>TX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_SUC_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_ERR_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_DSCR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_DSCR_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUTLINK_EOF_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>OUT_TOTAL_EOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SEND_S_Q_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>SEND_A_Q_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DMA_INFIFO_FULL_WM_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1:DMA out link descriptor's fifo is full.</description>
            <name>OUT_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1:DMA in link descriptor's fifo is empty.</description>
            <name>OUT_EMPTY</name>
          </field>
        </fields>
        <name>DMA_OUT_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>This is the data need to be pushed into out link descriptor's fifo.</description>
            <name>OUTFIFO_WDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to push data in out link descriptor's fifo.</description>
            <name>OUTFIFO_PUSH</name>
          </field>
        </fields>
        <name>DMA_OUT_PUSH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>IN_EMPTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This register stores the errors caused in out link descriptor's data packet.</description>
            <name>RX_ERR_CAUSE</name>
          </field>
        </fields>
        <name>DMA_IN_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores the data pop from in link descriptor's fifo.</description>
            <name>INFIFO_RDATA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pop data in in link descriptor's fifo.</description>
            <name>INFIFO_POP</name>
          </field>
        </fields>
        <name>DMA_IN_POP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the least 20 bits of the first out link descriptor's address.</description>
            <name>OUTLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop dealing with the out link descriptors.</description>
            <name>OUTLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start dealing with the out link descriptors.</description>
            <name>OUTLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to mount on new out link descriptors</description>
            <name>OUTLINK_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1£º the out link descriptor's fsm is in idle state. 0:the out link descriptor's fsm is working.</description>
            <name>OUTLINK_PARK</name>
          </field>
        </fields>
        <name>DMA_OUT_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the least 20 bits of the first in link descriptor's address.</description>
            <name>INLINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1:when a packet is wrong in link descriptor returns to the descriptor which is lately used.</description>
            <name>INLINK_AUTO_RET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop dealing with the in link descriptors.</description>
            <name>INLINK_STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start dealing with the in link descriptors.</description>
            <name>INLINK_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to mount on new in link descriptors</description>
            <name>INLINK_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1:the in link descriptor's fsm is in idle state.   0:the in link descriptor's fsm is working</description>
            <name>INLINK_PARK</name>
          </field>
        </fields>
        <name>DMA_IN_LINK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x100000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable decoder to check  check_sum in packet header.</description>
            <name>CHECK_SUM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable decoder to check seq num in packet header.</description>
            <name>CHECK_SEQ_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable crc calculation.</description>
            <name>CRC_DISABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to save packet header .</description>
            <name>SAVE_HEAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable hardware replace check_sum in packet header automatically.</description>
            <name>TX_CHECK_SUM_RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable hardware replace ack num in packet header automatically.</description>
            <name>TX_ACK_NUM_RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to check the owner bit in link descriptor.</description>
            <name>CHECK_OWNER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable software way to add packet header.</description>
            <name>WAIT_SW_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start inserting the packet header.</description>
            <name>SW_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>when data amount in link descriptor's fifo is more than this register value  it will produce uhci_dma_infifo_full_wm_int interrupt.</description>
            <name>DMA_INFIFO_FULL_THRS</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x33</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>STATE0</name>
          </field>
        </fields>
        <name>STATE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>STATE1</name>
          </field>
        </fields>
        <name>STATE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of out link descriptoir when eof bit in this descriptor is 1.</description>
            <name>OUT_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>DMA_OUT_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of in link descriptor when eof bit in this descriptor is 1.</description>
            <name>IN_SUC_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>DMA_IN_SUC_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of in link descriptor when there are some errors in this descriptor.</description>
            <name>IN_ERR_EOF_DES_ADDR</name>
          </field>
        </fields>
        <name>DMA_IN_ERR_EOF_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of out link descriptor when there are some errors in this descriptor.</description>
            <name>OUT_EOF_BFR_DES_ADDR</name>
          </field>
        </fields>
        <name>DMA_OUT_EOF_BFR_DES_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>bit2 is ahb bus test enable ,bit1 is used to choose wrtie(1) or read(0) mode. bit0 is used to choose test only once(1) or continue(0)</description>
            <name>AHB_TESTMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The two bits represent ahb bus address bit[20:19]</description>
            <name>AHB_TESTADDR</name>
          </field>
        </fields>
        <name>AHB_TEST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in link descriptor's third dword</description>
            <name>INLINK_DSCR</name>
          </field>
        </fields>
        <name>DMA_IN_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in link descriptor's first dword</description>
            <name>INLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>DMA_IN_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current in link descriptor's second dword</description>
            <name>INLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>DMA_IN_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out link descriptor's third dword</description>
            <name>OUTLINK_DSCR</name>
          </field>
        </fields>
        <name>DMA_OUT_DSCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out link descriptor's first dword</description>
            <name>OUTLINK_DSCR_BF0</name>
          </field>
        </fields>
        <name>DMA_OUT_DSCR_BF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of current out link descriptor's second dword</description>
            <name>OUTLINK_DSCR_BF1</name>
          </field>
        </fields>
        <name>DMA_OUT_DSCR_BF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable  0xc0 char decode when DMA receives data.</description>
            <name>TX_C0_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable  0xdb char decode when DMA receives data.</description>
            <name>TX_DB_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable  flow control char 0x11 decode when DMA receives data.</description>
            <name>TX_11_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable flow control char 0x13 decode when DMA receives data.</description>
            <name>TX_13_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable  0xc0 char replace when DMA sends data.</description>
            <name>RX_C0_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable  0xdb char replace when DMA sends data.</description>
            <name>RX_DB_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable  flow control char 0x11 replace when DMA sends data.</description>
            <name>RX_11_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable  flow control char 0x13 replace when DMA sends data.</description>
            <name>RX_13_ESC_EN</name>
          </field>
        </fields>
        <name>ESCAPE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x33</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the timeout value.when DMA takes more time than this register value to receive a data  it will produce  uhci_tx_hung_int interrupt.</description>
            <name>TXFIFO_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The tick count is cleared when its value &gt;=(17'd8000&gt;&gt;reg_txfifo_timeout_shift)</description>
            <name>TXFIFO_TIMEOUT_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for txfifo receive data  timeout</description>
            <name>TXFIFO_TIMEOUT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the timeout value.when DMA takes more time than this register value to read a data from RAM  it will produce  uhci_rx_hung_int interrupt.</description>
            <name>RXFIFO_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The tick count is cleared when its value &gt;=(17'd8000&gt;&gt;reg_rxfifo_timeout_shift)</description>
            <name>RXFIFO_TIMEOUT_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for DMA  send data timeout</description>
            <name>RXFIFO_TIMEOUT_ENA</name>
          </field>
        </fields>
        <name>HUNG_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x810810</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <fields></fields>
        <name>ACK_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the packet header received by DMA</description>
            <name>RX_HEAD</name>
          </field>
        </fields>
        <name>RX_HEAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The bits are used to choose which short packet</description>
            <name>SINGLE_SEND_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable  send a short packet</description>
            <name>SINGLE_SEND_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The bits are used to choose which short packet</description>
            <name>ALWAYS_SEND_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable continuously send the same short packet</description>
            <name>ALWAYS_SEND_EN</name>
          </field>
        </fields>
        <name>QUICK_SENT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's first dword</description>
            <name>SEND_Q0_WORD0</name>
          </field>
        </fields>
        <name>Q0_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's second dword</description>
            <name>SEND_Q0_WORD1</name>
          </field>
        </fields>
        <name>Q0_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's first dword</description>
            <name>SEND_Q1_WORD0</name>
          </field>
        </fields>
        <name>Q1_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's second dword</description>
            <name>SEND_Q1_WORD1</name>
          </field>
        </fields>
        <name>Q1_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's first dword</description>
            <name>SEND_Q2_WORD0</name>
          </field>
        </fields>
        <name>Q2_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's second dword</description>
            <name>SEND_Q2_WORD1</name>
          </field>
        </fields>
        <name>Q2_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's first dword</description>
            <name>SEND_Q3_WORD0</name>
          </field>
        </fields>
        <name>Q3_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's second dword</description>
            <name>SEND_Q3_WORD1</name>
          </field>
        </fields>
        <name>Q3_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's first dword</description>
            <name>SEND_Q4_WORD0</name>
          </field>
        </fields>
        <name>Q4_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's second dword</description>
            <name>SEND_Q4_WORD1</name>
          </field>
        </fields>
        <name>Q4_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's first dword</description>
            <name>SEND_Q5_WORD0</name>
          </field>
        </fields>
        <name>Q5_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's second dword</description>
            <name>SEND_Q5_WORD1</name>
          </field>
        </fields>
        <name>Q5_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's first dword</description>
            <name>SEND_Q6_WORD0</name>
          </field>
        </fields>
        <name>Q6_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the content of short packet's second dword</description>
            <name>SEND_Q6_WORD1</name>
          </field>
        </fields>
        <name>Q6_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the seperator char  seperator char is used to seperate the data frame.</description>
            <name>SEPER_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores thee first char used to replace seperator char in data.</description>
            <name>SEPER_ESC_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the second char used to replace seperator char in data . 0xdc 0xdb replace 0xc0 by default.</description>
            <name>SEPER_ESC_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDCDBC0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the first substitute char used to replace the seperator char.</description>
            <name>ESC_SEQ0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the first char used to replace reg_esc_seq0 in data.</description>
            <name>ESC_SEQ0_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the second char used to replace the reg_esc_seq0 in data</description>
            <name>ESC_SEQ0_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDDDBDB</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the flow control char to turn on the flow_control</description>
            <name>ESC_SEQ1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the first char used to replace the reg_esc_seq1 in data.</description>
            <name>ESC_SEQ1_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the second char used to replace the reg_esc_seq1 in data.</description>
            <name>ESC_SEQ1_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDEDB11</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the flow_control char to turn off the flow_control</description>
            <name>ESC_SEQ2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the first char used to replace the reg_esc_seq2 in data.</description>
            <name>ESC_SEQ2_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores  the second char used to replace the reg_esc_seq2 in data.</description>
            <name>ESC_SEQ2_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDFDB13</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>when the amount of packet payload is greater than this value the process of receiving data is done.</description>
            <name>PKT_THRS</name>
          </field>
        </fields>
        <name>PKT_THRES</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>version information</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x16041001</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x4</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60035144</baseAddress>
    <description>Peripheral WDEV</description>
    <groupName>WDEV</groupName>
    <interrupts></interrupts>
    <name>WDEV</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>Hardware random number generator register</description>
        <fields></fields>
        <name>RND</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<resetMask>0xFFFFFFFF</resetMask>
<resetValue>0x0</resetValue>
<vendor>ESPRESSIF SYSTEMS (SHANGHAI) CO., LTD.</vendor>
<vendorId>ESPRESSIF</vendorId>
<version>2</version>
<width>0x20</width></device>
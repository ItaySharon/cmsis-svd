<?xml version="1.0" encoding="UTF-8"?>
<device xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"><addressUnitBits>0x20</addressUnitBits>
<cpu>
  <dcachePresent>
    <dcachePresen></dcachePresen>
  </dcachePresent>
  <deviceNumInterrupts>0x0</deviceNumInterrupts>
  <dtcmPresent>
    <dtcmPresen></dtcmPresen>
  </dtcmPresent>
  <endian>little</endian>
  <fpuPresent>0x0</fpuPresent>
  <icachePresent>
    <icachePresen></icachePresen>
  </icachePresent>
  <itcmPresent>
    <itcmPresen></itcmPresen>
  </itcmPresent>
  <mpuPresent>0x0</mpuPresent>
  <name>RV32IMC</name>
  <nvicPrioBits>0x4</nvicPrioBits>
  <revision>r0p0</revision>
  <sauNumRegions>0x0</sauNumRegions>
  <vendorSystickConfig>0x0</vendorSystickConfig>
</cpu>
<description>32-bit RISC-V MCU &amp; 2.4 GHz Wi-Fi &amp; Bluetooth 5 (LE)</description>
<name>ESP32-C3</name>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xBC</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x6003A000</baseAddress>
    <description>AES (Advanced Encryption Standard) Accelerator</description>
    <groupName>AES</groupName>
    <interrupts>
      <interrupt>
        <name>AES</name>
        <value>0x30</value>
      </interrupt>
    </interrupts>
    <name>AES</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>Key material key_0 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores key_0 that is a part of key material.</description>
            <name>KEY_0</name>
          </field>
        </fields>
        <name>KEY_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>Key material key_1 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores key_1 that is a part of key material.</description>
            <name>KEY_1</name>
          </field>
        </fields>
        <name>KEY_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>Key material key_2 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores key_2 that is a part of key material.</description>
            <name>KEY_2</name>
          </field>
        </fields>
        <name>KEY_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>Key material key_3 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores key_3 that is a part of key material.</description>
            <name>KEY_3</name>
          </field>
        </fields>
        <name>KEY_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>Key material key_4 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores key_4 that is a part of key material.</description>
            <name>KEY_4</name>
          </field>
        </fields>
        <name>KEY_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>Key material key_5 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores key_5 that is a part of key material.</description>
            <name>KEY_5</name>
          </field>
        </fields>
        <name>KEY_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>Key material key_6 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores key_6 that is a part of key material.</description>
            <name>KEY_6</name>
          </field>
        </fields>
        <name>KEY_6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>Key material key_7 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores key_7 that is a part of key material.</description>
            <name>KEY_7</name>
          </field>
        </fields>
        <name>KEY_7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>source text material text_in_0 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores text_in_0 that is a part of source text material.</description>
            <name>TEXT_IN_0</name>
          </field>
        </fields>
        <name>TEXT_IN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>source text material text_in_1 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores text_in_1 that is a part of source text material.</description>
            <name>TEXT_IN_1</name>
          </field>
        </fields>
        <name>TEXT_IN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>source text material text_in_2 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores text_in_2 that is a part of source text material.</description>
            <name>TEXT_IN_2</name>
          </field>
        </fields>
        <name>TEXT_IN_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>source text material text_in_3 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores text_in_3 that is a part of source text material.</description>
            <name>TEXT_IN_3</name>
          </field>
        </fields>
        <name>TEXT_IN_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>result text material text_out_0 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores text_out_0 that is a part of result text material.</description>
            <name>TEXT_OUT_0</name>
          </field>
        </fields>
        <name>TEXT_OUT_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>result text material text_out_1 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores text_out_1 that is a part of result text material.</description>
            <name>TEXT_OUT_1</name>
          </field>
        </fields>
        <name>TEXT_OUT_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>result text material text_out_2 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores text_out_2 that is a part of result text material.</description>
            <name>TEXT_OUT_2</name>
          </field>
        </fields>
        <name>TEXT_OUT_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>result text material text_out_3 configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This bits stores text_out_3 that is a part of result text material.</description>
            <name>TEXT_OUT_3</name>
          </field>
        </fields>
        <name>TEXT_OUT_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>AES Mode register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This bits decides which one operation mode will be used. 3'd0: AES-EN-128, 3'd1: AES-EN-192, 3'd2: AES-EN-256, 3'd4: AES-DE-128, 3'd5: AES-DE-192, 3'd6: AES-DE-256.</description>
            <name>MODE</name>
          </field>
        </fields>
        <name>MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>AES Endian configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>endian. [1:0] key endian, [3:2] text_in endian or in_stream endian,  [5:4] text_out endian or out_stream endian</description>
            <name>ENDIAN</name>
          </field>
        </fields>
        <name>ENDIAN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>AES trigger register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start AES calculation.</description>
            <name>TRIGGER</name>
          </field>
        </fields>
        <name>TRIGGER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>AES state register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Those bits shows AES status. For typical AES, 0: idle, 1: busy. For DMA-AES, 0: idle, 1: busy, 2: calculation_done.</description>
            <name>STATE</name>
          </field>
        </fields>
        <name>STATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>DMA-AES working mode register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'b0: typical AES working mode, 1'b1: DMA-AES working mode.</description>
            <name>DMA_ENABLE</name>
          </field>
        </fields>
        <name>DMA_ENABLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>AES cipher block mode register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Those bits decides which block mode will be used. 0x0: ECB, 0x1: CBC, 0x2: OFB, 0x3: CTR, 0x4: CFB-8, 0x5: CFB-128, 0x6: GCM, 0x7: reserved.</description>
            <name>BLOCK_MODE</name>
          </field>
        </fields>
        <name>BLOCK_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>AES block number register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Those bits stores the number of Plaintext/ciphertext block.</description>
            <name>BLOCK_NUM</name>
          </field>
        </fields>
        <name>BLOCK_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>Standard incrementing function configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit decides the standard incrementing function. 0: INC32. 1: INC128.</description>
            <name>INC_SEL</name>
          </field>
        </fields>
        <name>INC_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>Additional Authential Data block number register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Those bits stores the number of AAD block.</description>
            <name>AAD_BLOCK_NUM</name>
          </field>
        </fields>
        <name>AAD_BLOCK_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>AES remainder bit number register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Those bits stores the number of remainder bit.</description>
            <name>REMAINDER_BIT_NUM</name>
          </field>
        </fields>
        <name>REMAINDER_BIT_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>AES continue register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to continue GCM operation.</description>
            <name>CONTINUE</name>
          </field>
        </fields>
        <name>CONTINUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>AES Interrupt clear register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the AES interrupt.</description>
            <name>INT_CLEAR</name>
          </field>
        </fields>
        <name>INT_CLEAR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>AES Interrupt enable register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable interrupt that occurs when DMA-AES calculation is done.</description>
            <name>INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>AES version control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>This bits stores the version information of AES.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20191210</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>AES-DMA exit config</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this register to leave calculation done stage. Recommend to use it after software finishes reading DMA's output buffer.</description>
            <name>DMA_EXIT</name>
          </field>
        </fields>
        <name>DMA_EXIT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F</addressOffset>
        <description>The memory that stores initialization vector</description>
        <fields></fields>
        <name>IV_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x61</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x62</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x63</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x65</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x66</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x67</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x69</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6A</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6B</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6D</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6E</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6F</addressOffset>
        <description>The memory that stores GCM hash subkey</description>
        <fields></fields>
        <name>H_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x71</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x72</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x73</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x75</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x76</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x77</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x79</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7A</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7B</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7D</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7E</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7F</addressOffset>
        <description>The memory that stores J0</description>
        <fields></fields>
        <name>J0_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x83</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x85</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x86</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x87</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x89</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F</addressOffset>
        <description>The memory that stores T0</description>
        <fields></fields>
        <name>T0_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xA0</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60026000</baseAddress>
    <description>Advanced Peripheral Bus Controller</description>
    <groupName>APB_CTRL</groupName>
    <interrupts>
      <interrupt>
        <name>APB_CTRL</name>
        <value>0xE</value>
      </interrupt>
    </interrupts>
    <name>APB_CTRL</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>APB_CTRL_SYSCLK_CONF_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_pre_div_cnt</description>
            <name>PRE_DIV_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_320m_en</description>
            <name>CLK_320M_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_en</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rst_tick_cnt</description>
            <name>RST_TICK_CNT</name>
          </field>
        </fields>
        <name>SYSCLK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>APB_CTRL_TICK_CONF_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_xtal_tick_num</description>
            <name>XTAL_TICK_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_ck8m_tick_num</description>
            <name>CK8M_TICK_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tick_enable</description>
            <name>TICK_ENABLE</name>
          </field>
        </fields>
        <name>TICK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10727</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>APB_CTRL_CLK_OUT_EN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk20_oen</description>
            <name>CLK20_OEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk22_oen</description>
            <name>CLK22_OEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk44_oen</description>
            <name>CLK44_OEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_bb_oen</description>
            <name>CLK_BB_OEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk80_oen</description>
            <name>CLK80_OEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk160_oen</description>
            <name>CLK160_OEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_320m_oen</description>
            <name>CLK_320M_OEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_adc_inf_oen</description>
            <name>CLK_ADC_INF_OEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_dac_cpu_oen</description>
            <name>CLK_DAC_CPU_OEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk40x_bb_oen</description>
            <name>CLK40X_BB_OEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_xtal_oen</description>
            <name>CLK_XTAL_OEN</name>
          </field>
        </fields>
        <name>CLK_OUT_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>APB_CTRL_WIFI_BB_CFG_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wifi_bb_cfg</description>
            <name>WIFI_BB_CFG</name>
          </field>
        </fields>
        <name>WIFI_BB_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>APB_CTRL_WIFI_BB_CFG_2_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wifi_bb_cfg_2</description>
            <name>WIFI_BB_CFG_2</name>
          </field>
        </fields>
        <name>WIFI_BB_CFG_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>APB_CTRL_WIFI_CLK_EN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wifi_clk_en</description>
            <name>WIFI_CLK_EN</name>
          </field>
        </fields>
        <name>WIFI_CLK_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFCE030</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>APB_CTRL_WIFI_RST_EN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wifi_rst</description>
            <name>WIFI_RST</name>
          </field>
        </fields>
        <name>WIFI_RST_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>APB_CTRL_HOST_INF_SEL_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_peri_io_swap</description>
            <name>PERI_IO_SWAP</name>
          </field>
        </fields>
        <name>HOST_INF_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>APB_CTRL_EXT_MEM_PMS_LOCK_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ext_mem_pms_lock</description>
            <name>EXT_MEM_PMS_LOCK</name>
          </field>
        </fields>
        <name>EXT_MEM_PMS_LOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>APB_CTRL_FLASH_ACE0_ATTR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_flash_ace0_attr</description>
            <name>FLASH_ACE0_ATTR</name>
          </field>
        </fields>
        <name>FLASH_ACE0_ATTR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>APB_CTRL_FLASH_ACE1_ATTR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_flash_ace1_attr</description>
            <name>FLASH_ACE1_ATTR</name>
          </field>
        </fields>
        <name>FLASH_ACE1_ATTR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>APB_CTRL_FLASH_ACE2_ATTR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_flash_ace2_attr</description>
            <name>FLASH_ACE2_ATTR</name>
          </field>
        </fields>
        <name>FLASH_ACE2_ATTR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>APB_CTRL_FLASH_ACE3_ATTR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_flash_ace3_attr</description>
            <name>FLASH_ACE3_ATTR</name>
          </field>
        </fields>
        <name>FLASH_ACE3_ATTR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>APB_CTRL_FLASH_ACE0_ADDR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_flash_ace0_addr_s</description>
            <name>S</name>
          </field>
        </fields>
        <name>FLASH_ACE0_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>APB_CTRL_FLASH_ACE1_ADDR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_flash_ace1_addr_s</description>
            <name>S</name>
          </field>
        </fields>
        <name>FLASH_ACE1_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>APB_CTRL_FLASH_ACE2_ADDR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_flash_ace2_addr_s</description>
            <name>S</name>
          </field>
        </fields>
        <name>FLASH_ACE2_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>APB_CTRL_FLASH_ACE3_ADDR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_flash_ace3_addr_s</description>
            <name>S</name>
          </field>
        </fields>
        <name>FLASH_ACE3_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC00000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>APB_CTRL_FLASH_ACE0_SIZE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>reg_flash_ace0_size</description>
            <name>FLASH_ACE0_SIZE</name>
          </field>
        </fields>
        <name>FLASH_ACE0_SIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>APB_CTRL_FLASH_ACE1_SIZE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>reg_flash_ace1_size</description>
            <name>FLASH_ACE1_SIZE</name>
          </field>
        </fields>
        <name>FLASH_ACE1_SIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>APB_CTRL_FLASH_ACE2_SIZE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>reg_flash_ace2_size</description>
            <name>FLASH_ACE2_SIZE</name>
          </field>
        </fields>
        <name>FLASH_ACE2_SIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>APB_CTRL_FLASH_ACE3_SIZE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>reg_flash_ace3_size</description>
            <name>FLASH_ACE3_SIZE</name>
          </field>
        </fields>
        <name>FLASH_ACE3_SIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>APB_CTRL_SPI_MEM_PMS_CTRL_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi_mem_reject_int</description>
            <name>SPI_MEM_REJECT_INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi_mem_reject_clr</description>
            <name>SPI_MEM_REJECT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_spi_mem_reject_cde</description>
            <name>SPI_MEM_REJECT_CDE</name>
          </field>
        </fields>
        <name>SPI_MEM_PMS_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>APB_CTRL_SPI_MEM_REJECT_ADDR_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_spi_mem_reject_addr</description>
            <name>SPI_MEM_REJECT_ADDR</name>
          </field>
        </fields>
        <name>SPI_MEM_REJECT_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>APB_CTRL_SDIO_CTRL_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sdio_win_access_en</description>
            <name>SDIO_WIN_ACCESS_EN</name>
          </field>
        </fields>
        <name>SDIO_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>APB_CTRL_REDCY_SIG0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1F</bitWidth>
            <description>reg_redcy_sig0</description>
            <name>REDCY_SIG0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_redcy_andor</description>
            <name>REDCY_ANDOR</name>
          </field>
        </fields>
        <name>REDCY_SIG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>APB_CTRL_REDCY_SIG1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1F</bitWidth>
            <description>reg_redcy_sig1</description>
            <name>REDCY_SIG1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_redcy_nandor</description>
            <name>REDCY_NANDOR</name>
          </field>
        </fields>
        <name>REDCY_SIG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>APB_CTRL_FRONT_END_MEM_PD_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_agc_mem_force_pu</description>
            <name>AGC_MEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_agc_mem_force_pd</description>
            <name>AGC_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pbus_mem_force_pu</description>
            <name>PBUS_MEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pbus_mem_force_pd</description>
            <name>PBUS_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_dc_mem_force_pu</description>
            <name>DC_MEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_dc_mem_force_pd</description>
            <name>DC_MEM_FORCE_PD</name>
          </field>
        </fields>
        <name>FRONT_END_MEM_PD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x15</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>APB_CTRL_RETENTION_CTRL_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1B</bitWidth>
            <description>reg_retention_link_addr</description>
            <name>RETENTION_LINK_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_nobypass_cpu_iso_rst</description>
            <name>NOBYPASS_CPU_ISO_RST</name>
          </field>
        </fields>
        <name>RETENTION_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>APB_CTRL_CLKGATE_FORCE_ON_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_rom_clkgate_force_on</description>
            <name>ROM_CLKGATE_FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_sram_clkgate_force_on</description>
            <name>SRAM_CLKGATE_FORCE_ON</name>
          </field>
        </fields>
        <name>CLKGATE_FORCE_ON</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>APB_CTRL_MEM_POWER_DOWN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_rom_power_down</description>
            <name>ROM_POWER_DOWN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_sram_power_down</description>
            <name>SRAM_POWER_DOWN</name>
          </field>
        </fields>
        <name>MEM_POWER_DOWN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>APB_CTRL_MEM_POWER_UP_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_rom_power_up</description>
            <name>ROM_POWER_UP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_sram_power_up</description>
            <name>SRAM_POWER_UP</name>
          </field>
        </fields>
        <name>MEM_POWER_UP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>APB_CTRL_RND_DATA_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_rnd_data</description>
            <name>RND_DATA</name>
          </field>
        </fields>
        <name>RND_DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>APB_CTRL_PERI_BACKUP_CONFIG_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_peri_backup_flow_err</description>
            <name>PERI_BACKUP_FLOW_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_peri_backup_burst_limit</description>
            <name>PERI_BACKUP_BURST_LIMIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_peri_backup_tout_thres</description>
            <name>PERI_BACKUP_TOUT_THRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_peri_backup_size</description>
            <name>PERI_BACKUP_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_start</description>
            <name>PERI_BACKUP_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_to_mem</description>
            <name>PERI_BACKUP_TO_MEM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_ena</description>
            <name>PERI_BACKUP_ENA</name>
          </field>
        </fields>
        <name>PERI_BACKUP_CONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6480</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>APB_CTRL_PERI_BACKUP_APB_ADDR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_backup_apb_start_addr</description>
            <name>BACKUP_APB_START_ADDR</name>
          </field>
        </fields>
        <name>PERI_BACKUP_APB_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>APB_CTRL_PERI_BACKUP_MEM_ADDR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_backup_mem_start_addr</description>
            <name>BACKUP_MEM_START_ADDR</name>
          </field>
        </fields>
        <name>PERI_BACKUP_MEM_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>APB_CTRL_PERI_BACKUP_INT_RAW_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_done_int_raw</description>
            <name>PERI_BACKUP_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_err_int_raw</description>
            <name>PERI_BACKUP_ERR_INT_RAW</name>
          </field>
        </fields>
        <name>PERI_BACKUP_INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>APB_CTRL_PERI_BACKUP_INT_ST_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_done_int_st</description>
            <name>PERI_BACKUP_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_err_int_st</description>
            <name>PERI_BACKUP_ERR_INT_ST</name>
          </field>
        </fields>
        <name>PERI_BACKUP_INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>APB_CTRL_PERI_BACKUP_INT_ENA_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_done_int_ena</description>
            <name>PERI_BACKUP_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_err_int_ena</description>
            <name>PERI_BACKUP_ERR_INT_ENA</name>
          </field>
        </fields>
        <name>PERI_BACKUP_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>APB_CTRL_PERI_BACKUP_INT_CLR_REG</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_done_int_clr</description>
            <name>PERI_BACKUP_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_peri_backup_err_int_clr</description>
            <name>PERI_BACKUP_ERR_INT_CLR</name>
          </field>
        </fields>
        <name>PERI_BACKUP_INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <description>APB_CTRL_DATE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_dateVersion control</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007210</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x68</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60040000</baseAddress>
    <description>Successive Approximation Register Analog to Digital Converter</description>
    <groupName>APB_SARADC</groupName>
    <interrupts>
      <interrupt>
        <name>APB_ADC</name>
        <value>0x2B</value>
      </interrupt>
    </interrupts>
    <name>APB_SARADC</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>select software enable saradc sample</description>
            <name>SARADC_START_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>software enable saradc sample</description>
            <name>SARADC_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SAR clock gated</description>
            <name>SARADC_SAR_CLK_GATED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SAR clock divider</description>
            <name>SARADC_SAR_CLK_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>0 ~ 15 means length 1 ~ 16</description>
            <name>SARADC_SAR_PATT_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear the pointer of pattern table for DIG ADC1 CTRL</description>
            <name>SARADC_SAR_PATT_P_CLEAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>force option to xpd sar blocks</description>
            <name>SARADC_XPD_SAR_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>wait arbit signal stable after sar_done</description>
            <name>SARADC_WAIT_ARB_CYCLE</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40038240</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable max meas num</description>
            <name>SARADC_MEAS_NUM_LIMIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>max conversion number</description>
            <name>SARADC_MAX_MEAS_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: data to DIG ADC1 CTRL is inverted, otherwise not</description>
            <name>SARADC_SAR1_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: data to DIG ADC2 CTRL is inverted, otherwise not</description>
            <name>SARADC_SAR2_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>to set saradc timer target</description>
            <name>SARADC_TIMER_TARGET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>to enable saradc timer trigger</description>
            <name>SARADC_TIMER_EN</name>
          </field>
        </fields>
        <name>CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA1FE</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Factor of saradc filter1</description>
            <name>APB_SARADC_FILTER_FACTOR1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Factor of saradc filter0</description>
            <name>APB_SARADC_FILTER_FACTOR0</name>
          </field>
        </fields>
        <name>FILTER_CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>saradc_xpd_wait</description>
            <name>SARADC_XPD_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>saradc_rstb_wait</description>
            <name>SARADC_RSTB_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>saradc_standby_wait</description>
            <name>SARADC_STANDBY_WAIT</name>
          </field>
        </fields>
        <name>FSM_WAIT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF0808</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>saradc1 status about data and channel</description>
            <name>SARADC_SAR1_STATUS</name>
          </field>
        </fields>
        <name>SAR1_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>saradc2 status about data and channel</description>
            <name>SARADC_SAR2_STATUS</name>
          </field>
        </fields>
        <name>SAR2_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>item 0 ~ 3 for pattern table 1 (each item one byte)</description>
            <name>SARADC_SAR_PATT_TAB1</name>
          </field>
        </fields>
        <name>SAR_PATT_TAB1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>Item 4 ~ 7 for pattern table 1 (each item one byte)</description>
            <name>SARADC_SAR_PATT_TAB2</name>
          </field>
        </fields>
        <name>SAR_PATT_TAB2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>configure onetime atten</description>
            <name>SARADC_ONETIME_ATTEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>configure onetime channel</description>
            <name>SARADC_ONETIME_CHANNEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>trigger adc onetime sample</description>
            <name>SARADC_ONETIME_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable adc2 onetime sample</description>
            <name>SARADC2_ONETIME_SAMPLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable adc1 onetime sample</description>
            <name>SARADC1_ONETIME_SAMPLE</name>
          </field>
        </fields>
        <name>ONETIME_SAMPLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1A000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>adc2 arbiter force to enableapb controller</description>
            <name>ADC_ARB_APB_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>adc2 arbiter force to enable rtc controller</description>
            <name>ADC_ARB_RTC_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>adc2 arbiter force to enable wifi controller</description>
            <name>ADC_ARB_WIFI_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>adc2 arbiter force grant</description>
            <name>ADC_ARB_GRANT_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Set adc2 arbiterapb priority</description>
            <name>ADC_ARB_APB_PRIORITY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Set adc2 arbiter rtc priority</description>
            <name>ADC_ARB_RTC_PRIORITY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Set adc2 arbiter wifi priority</description>
            <name>ADC_ARB_WIFI_PRIORITY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>adc2 arbiter uses fixed priority</description>
            <name>ADC_ARB_FIX_PRIORITY</name>
          </field>
        </fields>
        <name>ARB_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x900</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>configure filter1 to adc channel</description>
            <name>APB_SARADC_FILTER_CHANNEL1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>configure filter0 to adc channel</description>
            <name>APB_SARADC_FILTER_CHANNEL0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable apb_adc1_filter</description>
            <name>APB_SARADC_FILTER_RESET</name>
          </field>
        </fields>
        <name>FILTER_CTRL0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3740000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x11</bitWidth>
            <description>saradc1 data</description>
            <name>APB_SARADC1_DATA</name>
          </field>
        </fields>
        <name>SAR1DATA_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x11</bitWidth>
            <description>saradc2 data</description>
            <name>APB_SARADC2_DATA</name>
          </field>
        </fields>
        <name>SAR2DATA_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>configure thres0 to adc channel</description>
            <name>APB_SARADC_THRES0_CHANNEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>saradc thres0 monitor thres</description>
            <name>APB_SARADC_THRES0_HIGH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>saradc thres0 monitor thres</description>
            <name>APB_SARADC_THRES0_LOW</name>
          </field>
        </fields>
        <name>THRES0_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3FFED</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>configure thres1 to adc channel</description>
            <name>APB_SARADC_THRES1_CHANNEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>saradc thres1 monitor thres</description>
            <name>APB_SARADC_THRES1_HIGH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>saradc thres1 monitor thres</description>
            <name>APB_SARADC_THRES1_LOW</name>
          </field>
        </fields>
        <name>THRES1_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3FFED</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable thres to all channel</description>
            <name>APB_SARADC_THRES_ALL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable thres1</description>
            <name>APB_SARADC_THRES1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable thres0</description>
            <name>APB_SARADC_THRES0_EN</name>
          </field>
        </fields>
        <name>THRES_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>digital saradc int register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres1 low  interrupt enable</description>
            <name>APB_SARADC_THRES1_LOW_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres0 low interrupt enable</description>
            <name>APB_SARADC_THRES0_LOW_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres1 high interrupt enable</description>
            <name>APB_SARADC_THRES1_HIGH_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres0 high interrupt enable</description>
            <name>APB_SARADC_THRES0_HIGH_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc2 done interrupt enable</description>
            <name>APB_SARADC2_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc1 done interrupt enable</description>
            <name>APB_SARADC1_DONE_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>digital saradc int register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres1 low  interrupt raw</description>
            <name>APB_SARADC_THRES1_LOW_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres0 low interrupt raw</description>
            <name>APB_SARADC_THRES0_LOW_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres1 high interrupt raw</description>
            <name>APB_SARADC_THRES1_HIGH_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres0 high interrupt raw</description>
            <name>APB_SARADC_THRES0_HIGH_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc2 done interrupt raw</description>
            <name>APB_SARADC2_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc1 done interrupt raw</description>
            <name>APB_SARADC1_DONE_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>digital saradc int register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres1 low  interrupt state</description>
            <name>APB_SARADC_THRES1_LOW_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres0 low interrupt state</description>
            <name>APB_SARADC_THRES0_LOW_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres1 high interrupt state</description>
            <name>APB_SARADC_THRES1_HIGH_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres0 high interrupt state</description>
            <name>APB_SARADC_THRES0_HIGH_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc2 done interrupt state</description>
            <name>APB_SARADC2_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc1 done interrupt state</description>
            <name>APB_SARADC1_DONE_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>digital saradc int register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres1 low  interrupt clear</description>
            <name>APB_SARADC_THRES1_LOW_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres0 low interrupt clear</description>
            <name>APB_SARADC_THRES0_LOW_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres1 high interrupt clear</description>
            <name>APB_SARADC_THRES1_HIGH_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc thres0 high interrupt clear</description>
            <name>APB_SARADC_THRES0_HIGH_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc2 done interrupt clear</description>
            <name>APB_SARADC2_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>saradc1 done interrupt clear</description>
            <name>APB_SARADC1_DONE_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>the dma_in_suc_eof gen when sample cnt = spi_eof_num</description>
            <name>APB_ADC_EOF_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reset_apb_adc_state</description>
            <name>APB_ADC_RESET_FSM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable apb_adc use spi_dma</description>
            <name>APB_ADC_TRANS</name>
          </field>
        </fields>
        <name>DMA_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Integral I2S clock divider value</description>
            <name>CLKM_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Fractional clock divider numerator value</description>
            <name>CLKM_DIV_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Fractional clock divider denominator value</description>
            <name>CLKM_DIV_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg clk en</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Set this bit to enable clk_apll</description>
            <name>CLK_SEL</name>
          </field>
        </fields>
        <name>CLKM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>digital tsens configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>temperature sensor data out</description>
            <name>TSENS_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>invert temperature sensor data</description>
            <name>TSENS_IN_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>temperature sensor clock divider</description>
            <name>TSENS_CLK_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>temperature sensor power up</description>
            <name>TSENS_PU</name>
          </field>
        </fields>
        <name>APB_TSENS_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>digital tsens configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>the time that power up tsens need wait</description>
            <name>TSENS_XPD_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>force power up tsens</description>
            <name>TSENS_XPD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>inv tsens clk</description>
            <name>TSENS_CLK_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>tsens clk select</description>
            <name>TSENS_CLK_SEL</name>
          </field>
        </fields>
        <name>TSENS_CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>digital saradc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x11</bitWidth>
            <description>saradc cali factor</description>
            <name>APB_SARADC_CALI_CFG</name>
          </field>
        </fields>
        <name>CALI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <description>version</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>version</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>CTRL_DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007171</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xA0</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x600CE000</baseAddress>
    <description>Debug Assist</description>
    <groupName>ASSIST_DEBUG</groupName>
    <interrupts>
      <interrupt>
        <name>ASSIST_DEBUG</name>
        <value>0x36</value>
      </interrupt>
    </interrupts>
    <name>ASSIST_DEBUG</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>ASSIST_DEBUG_C0RE_0_MONTR_ENA_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_0_rd_ena</description>
            <name>CORE_0_AREA_DRAM0_0_RD_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_0_wr_ena</description>
            <name>CORE_0_AREA_DRAM0_0_WR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_1_rd_ena</description>
            <name>CORE_0_AREA_DRAM0_1_RD_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_1_wr_ena</description>
            <name>CORE_0_AREA_DRAM0_1_WR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_0_rd_ena</description>
            <name>CORE_0_AREA_PIF_0_RD_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_0_wr_ena</description>
            <name>CORE_0_AREA_PIF_0_WR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_1_rd_ena</description>
            <name>CORE_0_AREA_PIF_1_RD_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_1_wr_ena</description>
            <name>CORE_0_AREA_PIF_1_WR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_sp_spill_min_ena</description>
            <name>CORE_0_SP_SPILL_MIN_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_sp_spill_max_ena</description>
            <name>CORE_0_SP_SPILL_MAX_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_iram0_exception_monitor_ena</description>
            <name>CORE_0_IRAM0_EXCEPTION_MONITOR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_dram0_exception_monitor_ena</description>
            <name>CORE_0_DRAM0_EXCEPTION_MONITOR_ENA</name>
          </field>
        </fields>
        <name>C0RE_0_MONTR_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_INTR_RAW_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_0_rd_raw</description>
            <name>CORE_0_AREA_DRAM0_0_RD_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_0_wr_raw</description>
            <name>CORE_0_AREA_DRAM0_0_WR_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_1_rd_raw</description>
            <name>CORE_0_AREA_DRAM0_1_RD_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_1_wr_raw</description>
            <name>CORE_0_AREA_DRAM0_1_WR_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_0_rd_raw</description>
            <name>CORE_0_AREA_PIF_0_RD_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_0_wr_raw</description>
            <name>CORE_0_AREA_PIF_0_WR_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_1_rd_raw</description>
            <name>CORE_0_AREA_PIF_1_RD_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_1_wr_raw</description>
            <name>CORE_0_AREA_PIF_1_WR_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_sp_spill_min_raw</description>
            <name>CORE_0_SP_SPILL_MIN_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_sp_spill_max_raw</description>
            <name>CORE_0_SP_SPILL_MAX_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_iram0_exception_monitor_raw</description>
            <name>CORE_0_IRAM0_EXCEPTION_MONITOR_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_dram0_exception_monitor_raw</description>
            <name>CORE_0_DRAM0_EXCEPTION_MONITOR_RAW</name>
          </field>
        </fields>
        <name>CORE_0_INTR_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_INTR_ENA_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_0_rd_intr_ena</description>
            <name>CORE_0_AREA_DRAM0_0_RD_INTR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_0_wr_intr_ena</description>
            <name>CORE_0_AREA_DRAM0_0_WR_INTR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_1_rd_intr_ena</description>
            <name>CORE_0_AREA_DRAM0_1_RD_INTR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_1_wr_intr_ena</description>
            <name>CORE_0_AREA_DRAM0_1_WR_INTR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_0_rd_intr_ena</description>
            <name>CORE_0_AREA_PIF_0_RD_INTR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_0_wr_intr_ena</description>
            <name>CORE_0_AREA_PIF_0_WR_INTR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_1_rd_intr_ena</description>
            <name>CORE_0_AREA_PIF_1_RD_INTR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_1_wr_intr_ena</description>
            <name>CORE_0_AREA_PIF_1_WR_INTR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_sp_spill_min_intr_ena</description>
            <name>CORE_0_SP_SPILL_MIN_INTR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_sp_spill_max_intr_ena</description>
            <name>CORE_0_SP_SPILL_MAX_INTR_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_iram0_exception_monitor_ena</description>
            <name>CORE_0_IRAM0_EXCEPTION_MONITOR_RLS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_dram0_exception_monitor_ena</description>
            <name>CORE_0_DRAM0_EXCEPTION_MONITOR_RLS</name>
          </field>
        </fields>
        <name>CORE_0_INTR_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_INTR_CLR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_0_rd_clr</description>
            <name>CORE_0_AREA_DRAM0_0_RD_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_0_wr_clr</description>
            <name>CORE_0_AREA_DRAM0_0_WR_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_1_rd_clr</description>
            <name>CORE_0_AREA_DRAM0_1_RD_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_dram0_1_wr_clr</description>
            <name>CORE_0_AREA_DRAM0_1_WR_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_0_rd_clr</description>
            <name>CORE_0_AREA_PIF_0_RD_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_0_wr_clr</description>
            <name>CORE_0_AREA_PIF_0_WR_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_1_rd_clr</description>
            <name>CORE_0_AREA_PIF_1_RD_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_area_pif_1_wr_clr</description>
            <name>CORE_0_AREA_PIF_1_WR_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_sp_spill_min_clr</description>
            <name>CORE_0_SP_SPILL_MIN_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_sp_spill_max_clr</description>
            <name>CORE_0_SP_SPILL_MAX_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_iram0_exception_monitor_clr</description>
            <name>CORE_0_IRAM0_EXCEPTION_MONITOR_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_dram0_exception_monitor_clr</description>
            <name>CORE_0_DRAM0_EXCEPTION_MONITOR_CLR</name>
          </field>
        </fields>
        <name>CORE_0_INTR_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_area_dram0_0_min</description>
            <name>CORE_0_AREA_DRAM0_0_MIN</name>
          </field>
        </fields>
        <name>CORE_0_AREA_DRAM0_0_MIN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_area_dram0_0_max</description>
            <name>CORE_0_AREA_DRAM0_0_MAX</name>
          </field>
        </fields>
        <name>CORE_0_AREA_DRAM0_0_MAX</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_area_dram0_1_min</description>
            <name>CORE_0_AREA_DRAM0_1_MIN</name>
          </field>
        </fields>
        <name>CORE_0_AREA_DRAM0_1_MIN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_area_dram0_1_max</description>
            <name>CORE_0_AREA_DRAM0_1_MAX</name>
          </field>
        </fields>
        <name>CORE_0_AREA_DRAM0_1_MAX</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_area_pif_0_min</description>
            <name>CORE_0_AREA_PIF_0_MIN</name>
          </field>
        </fields>
        <name>CORE_0_AREA_PIF_0_MIN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_area_pif_0_max</description>
            <name>CORE_0_AREA_PIF_0_MAX</name>
          </field>
        </fields>
        <name>CORE_0_AREA_PIF_0_MAX</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_area_pif_1_min</description>
            <name>CORE_0_AREA_PIF_1_MIN</name>
          </field>
        </fields>
        <name>CORE_0_AREA_PIF_1_MIN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_area_pif_1_max</description>
            <name>CORE_0_AREA_PIF_1_MAX</name>
          </field>
        </fields>
        <name>CORE_0_AREA_PIF_1_MAX</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_AREA_PC_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_area_pc</description>
            <name>CORE_0_AREA_PC</name>
          </field>
        </fields>
        <name>CORE_0_AREA_PC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_AREA_SP_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_area_sp</description>
            <name>CORE_0_AREA_SP</name>
          </field>
        </fields>
        <name>CORE_0_AREA_SP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_SP_MIN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_sp_min</description>
            <name>CORE_0_SP_MIN</name>
          </field>
        </fields>
        <name>CORE_0_SP_MIN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_SP_MAX_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_sp_max</description>
            <name>CORE_0_SP_MAX</name>
          </field>
        </fields>
        <name>CORE_0_SP_MAX</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_SP_PC_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_sp_pc</description>
            <name>CORE_0_SP_PC</name>
          </field>
        </fields>
        <name>CORE_0_SP_PC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_RCD_EN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_rcd_recorden</description>
            <name>CORE_0_RCD_RECORDEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_rcd_pdebugen</description>
            <name>CORE_0_RCD_PDEBUGEN</name>
          </field>
        </fields>
        <name>CORE_0_RCD_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_rcd_pdebugpc</description>
            <name>CORE_0_RCD_PDEBUGPC</name>
          </field>
        </fields>
        <name>CORE_0_RCD_PDEBUGPC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_rcd_pdebugsp</description>
            <name>CORE_0_RCD_PDEBUGSP</name>
          </field>
        </fields>
        <name>CORE_0_RCD_PDEBUGSP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>reg_core_0_iram0_recording_addr_0</description>
            <name>CORE_0_IRAM0_RECORDING_ADDR_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_iram0_recording_wr_0</description>
            <name>CORE_0_IRAM0_RECORDING_WR_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_iram0_recording_loadstore_0</description>
            <name>CORE_0_IRAM0_RECORDING_LOADSTORE_0</name>
          </field>
        </fields>
        <name>CORE_0_IRAM0_EXCEPTION_MONITOR_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>reg_core_0_iram0_recording_addr_1</description>
            <name>CORE_0_IRAM0_RECORDING_ADDR_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_iram0_recording_wr_1</description>
            <name>CORE_0_IRAM0_RECORDING_WR_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_iram0_recording_loadstore_1</description>
            <name>CORE_0_IRAM0_RECORDING_LOADSTORE_1</name>
          </field>
        </fields>
        <name>CORE_0_IRAM0_EXCEPTION_MONITOR_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>reg_core_0_dram0_recording_addr_0</description>
            <name>CORE_0_DRAM0_RECORDING_ADDR_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_dram0_recording_wr_0</description>
            <name>CORE_0_DRAM0_RECORDING_WR_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core_0_dram0_recording_byteen_0</description>
            <name>CORE_0_DRAM0_RECORDING_BYTEEN_0</name>
          </field>
        </fields>
        <name>CORE_0_DRAM0_EXCEPTION_MONITOR_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_dram0_recording_pc_0</description>
            <name>CORE_0_DRAM0_RECORDING_PC_0</name>
          </field>
        </fields>
        <name>CORE_0_DRAM0_EXCEPTION_MONITOR_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>reg_core_0_dram0_recording_addr_1</description>
            <name>CORE_0_DRAM0_RECORDING_ADDR_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_dram0_recording_wr_1</description>
            <name>CORE_0_DRAM0_RECORDING_WR_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core_0_dram0_recording_byteen_1</description>
            <name>CORE_0_DRAM0_RECORDING_BYTEEN_1</name>
          </field>
        </fields>
        <name>CORE_0_DRAM0_EXCEPTION_MONITOR_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_3_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_dram0_recording_pc_1</description>
            <name>CORE_0_DRAM0_RECORDING_PC_1</name>
          </field>
        </fields>
        <name>CORE_0_DRAM0_EXCEPTION_MONITOR_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>reg_core_x_iram0_dram0_limit_cycle_0</description>
            <name>CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>reg_core_x_iram0_dram0_limit_cycle_1</description>
            <name>CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>ASSIST_DEBUG_LOG_SETTING</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_log_ena</description>
            <name>LOG_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_log_mode</description>
            <name>LOG_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_log_mem_loop_enable</description>
            <name>LOG_MEM_LOOP_ENABLE</name>
          </field>
        </fields>
        <name>LOG_SETTING</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>ASSIST_DEBUG_LOG_DATA_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_log_data_0</description>
            <name>LOG_DATA_0</name>
          </field>
        </fields>
        <name>LOG_DATA_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>ASSIST_DEBUG_LOG_DATA_MASK_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_log_data_size</description>
            <name>LOG_DATA_SIZE</name>
          </field>
        </fields>
        <name>LOG_DATA_MASK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>ASSIST_DEBUG_LOG_MIN_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_log_min</description>
            <name>LOG_MIN</name>
          </field>
        </fields>
        <name>LOG_MIN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>ASSIST_DEBUG_LOG_MAX_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_log_max</description>
            <name>LOG_MAX</name>
          </field>
        </fields>
        <name>LOG_MAX</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>ASSIST_DEBUG_LOG_MEM_START_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_log_mem_start</description>
            <name>LOG_MEM_START</name>
          </field>
        </fields>
        <name>LOG_MEM_START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>ASSIST_DEBUG_LOG_MEM_END_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_log_mem_end</description>
            <name>LOG_MEM_END</name>
          </field>
        </fields>
        <name>LOG_MEM_END</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_log_mem_writing_addr</description>
            <name>LOG_MEM_WRITING_ADDR</name>
          </field>
        </fields>
        <name>LOG_MEM_WRITING_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>ASSIST_DEBUG_LOG_MEM_FULL_FLAG_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_log_mem_full_flag</description>
            <name>LOG_MEM_FULL_FLAG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clr_log_mem_full_flag</description>
            <name>CLR_LOG_MEM_FULL_FLAG</name>
          </field>
        </fields>
        <name>LOG_MEM_FULL_FLAG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>ASSIST_DEBUG_C0RE_0_LASTPC_BEFORE_EXCEPTION</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core_0_lastpc_before_exc</description>
            <name>CORE_0_LASTPC_BEFORE_EXC</name>
          </field>
        </fields>
        <name>C0RE_0_LASTPC_BEFORE_EXCEPTION</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>ASSIST_DEBUG_C0RE_0_DEBUG_MODE</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_debug_mode</description>
            <name>CORE_0_DEBUG_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core_0_debug_module_active</description>
            <name>CORE_0_DEBUG_MODULE_ACTIVE</name>
          </field>
        </fields>
        <name>C0RE_0_DEBUG_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <description>ASSIST_DEBUG_DATE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>reg_assist_debug_date</description>
            <name>ASSIST_DEBUG_DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2008010</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x174</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x6003F000</baseAddress>
    <description>DMA (Direct Memory Access) Controller</description>
    <groupName>DMA</groupName>
    <interrupts>
      <interrupt>
        <name>DMA_CH0</name>
        <value>0x2C</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>DMA_CH1</name>
        <value>0x2D</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>DMA_CH2</name>
        <value>0x2E</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>DMA_APBPERI_PMS</name>
        <value>0x37</value>
      </interrupt>
    </interrupts>
    <name>DMA</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>DMA_INT_RAW_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 0.</description>
            <name>IN_DONE_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 0. For UHCI0, the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 0.</description>
            <name>IN_SUC_EOF_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 0. For other peripherals, this raw interrupt is reserved.</description>
            <name>IN_ERR_EOF_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 0.</description>
            <name>OUT_DONE_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 0.</description>
            <name>OUT_EOF_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when detecting inlink descriptor error, including owner error, the second and third word error of inlink descriptor for Rx channel 0.</description>
            <name>IN_DSCR_ERR_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when detecting outlink descriptor error, including owner error, the second and third word error of outlink descriptor for Tx channel 0.</description>
            <name>OUT_DSCR_ERR_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed, but there is no more inlink for Rx channel 0.</description>
            <name>IN_DSCR_EMPTY_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 0.</description>
            <name>OUT_TOTAL_EOF_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 0 is overflow.</description>
            <name>INFIFO_OVF_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 0 is underflow.</description>
            <name>INFIFO_UDF_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 0 is overflow.</description>
            <name>OUTFIFO_OVF_CH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 0 is underflow.</description>
            <name>OUTFIFO_UDF_CH0_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>DMA_INT_ST_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_DONE_CH_INT interrupt.</description>
            <name>IN_DONE_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt.</description>
            <name>IN_SUC_EOF_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt.</description>
            <name>IN_ERR_EOF_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_DONE_CH_INT interrupt.</description>
            <name>OUT_DONE_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_EOF_CH_INT interrupt.</description>
            <name>OUT_EOF_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
            <name>IN_DSCR_ERR_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
            <name>OUT_DSCR_ERR_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
            <name>IN_DSCR_EMPTY_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
            <name>OUT_TOTAL_EOF_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>INFIFO_OVF_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>INFIFO_UDF_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_OVF_CH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_UDF_CH0_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>DMA_INT_ENA_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_DONE_CH_INT interrupt.</description>
            <name>IN_DONE_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt.</description>
            <name>IN_SUC_EOF_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt.</description>
            <name>IN_ERR_EOF_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_DONE_CH_INT interrupt.</description>
            <name>OUT_DONE_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_EOF_CH_INT interrupt.</description>
            <name>OUT_EOF_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
            <name>IN_DSCR_ERR_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
            <name>OUT_DSCR_ERR_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
            <name>IN_DSCR_EMPTY_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
            <name>OUT_TOTAL_EOF_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>INFIFO_OVF_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>INFIFO_UDF_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_OVF_CH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_UDF_CH0_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>DMA_INT_CLR_CH0_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_DONE_CH_INT interrupt.</description>
            <name>IN_DONE_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_SUC_EOF_CH_INT interrupt.</description>
            <name>IN_SUC_EOF_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_ERR_EOF_CH_INT interrupt.</description>
            <name>IN_ERR_EOF_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_DONE_CH_INT interrupt.</description>
            <name>OUT_DONE_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_EOF_CH_INT interrupt.</description>
            <name>OUT_EOF_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt.</description>
            <name>IN_DSCR_ERR_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt.</description>
            <name>OUT_DSCR_ERR_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt.</description>
            <name>IN_DSCR_EMPTY_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt.</description>
            <name>OUT_TOTAL_EOF_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>INFIFO_OVF_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>INFIFO_UDF_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_OVF_CH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_UDF_CH0_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>DMA_INT_RAW_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 1.</description>
            <name>IN_DONE_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 1. For UHCI0, the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 1.</description>
            <name>IN_SUC_EOF_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 1. For other peripherals, this raw interrupt is reserved.</description>
            <name>IN_ERR_EOF_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 1.</description>
            <name>OUT_DONE_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 1.</description>
            <name>OUT_EOF_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when detecting inlink descriptor error, including owner error, the second and third word error of inlink descriptor for Rx channel 1.</description>
            <name>IN_DSCR_ERR_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when detecting outlink descriptor error, including owner error, the second and third word error of outlink descriptor for Tx channel 1.</description>
            <name>OUT_DSCR_ERR_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed, but there is no more inlink for Rx channel 1.</description>
            <name>IN_DSCR_EMPTY_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 1.</description>
            <name>OUT_TOTAL_EOF_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 1 is overflow.</description>
            <name>INFIFO_OVF_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 1 is underflow.</description>
            <name>INFIFO_UDF_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 1 is overflow.</description>
            <name>OUTFIFO_OVF_CH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 1 is underflow.</description>
            <name>OUTFIFO_UDF_CH1_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>DMA_INT_ST_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_DONE_CH_INT interrupt.</description>
            <name>IN_DONE_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt.</description>
            <name>IN_SUC_EOF_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt.</description>
            <name>IN_ERR_EOF_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_DONE_CH_INT interrupt.</description>
            <name>OUT_DONE_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_EOF_CH_INT interrupt.</description>
            <name>OUT_EOF_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
            <name>IN_DSCR_ERR_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
            <name>OUT_DSCR_ERR_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
            <name>IN_DSCR_EMPTY_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
            <name>OUT_TOTAL_EOF_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>INFIFO_OVF_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>INFIFO_UDF_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_OVF_CH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_UDF_CH1_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>DMA_INT_ENA_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_DONE_CH_INT interrupt.</description>
            <name>IN_DONE_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt.</description>
            <name>IN_SUC_EOF_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt.</description>
            <name>IN_ERR_EOF_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_DONE_CH_INT interrupt.</description>
            <name>OUT_DONE_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_EOF_CH_INT interrupt.</description>
            <name>OUT_EOF_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
            <name>IN_DSCR_ERR_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
            <name>OUT_DSCR_ERR_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
            <name>IN_DSCR_EMPTY_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
            <name>OUT_TOTAL_EOF_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>INFIFO_OVF_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>INFIFO_UDF_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_OVF_CH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_UDF_CH1_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>DMA_INT_CLR_CH1_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_DONE_CH_INT interrupt.</description>
            <name>IN_DONE_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_SUC_EOF_CH_INT interrupt.</description>
            <name>IN_SUC_EOF_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_ERR_EOF_CH_INT interrupt.</description>
            <name>IN_ERR_EOF_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_DONE_CH_INT interrupt.</description>
            <name>OUT_DONE_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_EOF_CH_INT interrupt.</description>
            <name>OUT_EOF_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt.</description>
            <name>IN_DSCR_ERR_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt.</description>
            <name>OUT_DSCR_ERR_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt.</description>
            <name>IN_DSCR_EMPTY_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt.</description>
            <name>OUT_TOTAL_EOF_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>INFIFO_OVF_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>INFIFO_UDF_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_OVF_CH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_UDF_CH1_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>DMA_INT_RAW_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 2.</description>
            <name>IN_DONE_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 2. For UHCI0, the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 2.</description>
            <name>IN_SUC_EOF_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 2. For other peripherals, this raw interrupt is reserved.</description>
            <name>IN_ERR_EOF_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 2.</description>
            <name>OUT_DONE_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 2.</description>
            <name>OUT_EOF_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when detecting inlink descriptor error, including owner error, the second and third word error of inlink descriptor for Rx channel 2.</description>
            <name>IN_DSCR_ERR_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when detecting outlink descriptor error, including owner error, the second and third word error of outlink descriptor for Tx channel 2.</description>
            <name>OUT_DSCR_ERR_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed, but there is no more inlink for Rx channel 2.</description>
            <name>IN_DSCR_EMPTY_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 2.</description>
            <name>OUT_TOTAL_EOF_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 2 is overflow.</description>
            <name>INFIFO_OVF_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 2 is underflow.</description>
            <name>INFIFO_UDF_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 2 is overflow.</description>
            <name>OUTFIFO_OVF_CH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 2 is underflow.</description>
            <name>OUTFIFO_UDF_CH2_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>DMA_INT_ST_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_DONE_CH_INT interrupt.</description>
            <name>IN_DONE_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt.</description>
            <name>IN_SUC_EOF_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt.</description>
            <name>IN_ERR_EOF_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_DONE_CH_INT interrupt.</description>
            <name>OUT_DONE_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_EOF_CH_INT interrupt.</description>
            <name>OUT_EOF_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
            <name>IN_DSCR_ERR_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
            <name>OUT_DSCR_ERR_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
            <name>IN_DSCR_EMPTY_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
            <name>OUT_TOTAL_EOF_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>INFIFO_OVF_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>INFIFO_UDF_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_OVF_CH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_UDF_CH2_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>DMA_INT_ENA_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_DONE_CH_INT interrupt.</description>
            <name>IN_DONE_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt.</description>
            <name>IN_SUC_EOF_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt.</description>
            <name>IN_ERR_EOF_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_DONE_CH_INT interrupt.</description>
            <name>OUT_DONE_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_EOF_CH_INT interrupt.</description>
            <name>OUT_EOF_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
            <name>IN_DSCR_ERR_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
            <name>OUT_DSCR_ERR_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
            <name>IN_DSCR_EMPTY_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
            <name>OUT_TOTAL_EOF_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>INFIFO_OVF_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>INFIFO_UDF_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_OVF_CH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_UDF_CH2_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>DMA_INT_CLR_CH2_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_DONE_CH_INT interrupt.</description>
            <name>IN_DONE_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_SUC_EOF_CH_INT interrupt.</description>
            <name>IN_SUC_EOF_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_ERR_EOF_CH_INT interrupt.</description>
            <name>IN_ERR_EOF_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_DONE_CH_INT interrupt.</description>
            <name>OUT_DONE_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_EOF_CH_INT interrupt.</description>
            <name>OUT_EOF_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt.</description>
            <name>IN_DSCR_ERR_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt.</description>
            <name>OUT_DSCR_ERR_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt.</description>
            <name>IN_DSCR_EMPTY_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt.</description>
            <name>OUT_TOTAL_EOF_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>INFIFO_OVF_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>INFIFO_UDF_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_OVF_CH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
            <name>OUTFIFO_UDF_CH2_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>DMA_AHB_TEST_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reserved</description>
            <name>AHB_TESTMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>AHB_TESTADDR</name>
          </field>
        </fields>
        <name>AHB_TEST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>DMA_MISC_CONF_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit, then clear this bit to reset the internal ahb FSM.</description>
            <name>AHBM_RST_INTER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable priority arbitration function.</description>
            <name>ARB_PRI_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_en</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>MISC_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>DMA_DATE_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>register version.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2008250</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>DMA_IN_CONF0_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset DMA channel 0 Rx FSM and Rx FIFO pointer.</description>
            <name>IN_RST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_LOOP_TEST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 0 reading link descriptor when accessing internal SRAM.</description>
            <name>INDSCR_BURST_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 0 receiving data when accessing internal SRAM.</description>
            <name>IN_DATA_BURST_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit 1 to enable automatic transmitting data from memory to memory via DMA.</description>
            <name>MEM_TRANS_EN_CH0</name>
          </field>
        </fields>
        <name>IN_CONF0_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>DMA_IN_CONF1_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
            <name>IN_CHECK_OWNER_CH0</name>
          </field>
        </fields>
        <name>IN_CONF1_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>DMA_INFIFO_STATUS_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Rx FIFO full signal for Rx channel 0.</description>
            <name>INFIFO_FULL_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Rx FIFO empty signal for Rx channel 0.</description>
            <name>INFIFO_EMPTY_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The register stores the byte number of the data in L1 Rx FIFO for Rx channel 0.</description>
            <name>INFIFO_CNT_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_1B_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_2B_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_3B_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_4B_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_BUF_HUNGRY_CH0</name>
          </field>
        </fields>
        <name>INFIFO_STATUS_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7800003</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>DMA_IN_POP_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores the data popping from DMA FIFO.</description>
            <name>INFIFO_RDATA_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pop data from DMA FIFO.</description>
            <name>INFIFO_POP_CH0</name>
          </field>
        </fields>
        <name>IN_POP_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>DMA_IN_LINK_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the 20 least significant bits of the first inlink descriptor's address.</description>
            <name>INLINK_ADDR_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to return to current inlink descriptor's address, when there are some errors in current receiving data.</description>
            <name>INLINK_AUTO_RET_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop dealing with the inlink descriptors.</description>
            <name>INLINK_STOP_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start dealing with the inlink descriptors.</description>
            <name>INLINK_START_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to mount a new inlink descriptor.</description>
            <name>INLINK_RESTART_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working.</description>
            <name>INLINK_PARK_CH0</name>
          </field>
        </fields>
        <name>IN_LINK_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1100000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>DMA_IN_STATE_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register stores the current inlink descriptor's address.</description>
            <name>INLINK_DSCR_ADDR_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>IN_DSCR_STATE_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reserved</description>
            <name>IN_STATE_CH0</name>
          </field>
        </fields>
        <name>IN_STATE_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>DMA_IN_SUC_EOF_DES_ADDR_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1.</description>
            <name>IN_SUC_EOF_DES_ADDR_CH0</name>
          </field>
        </fields>
        <name>IN_SUC_EOF_DES_ADDR_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>DMA_IN_ERR_EOF_DES_ADDR_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0.</description>
            <name>IN_ERR_EOF_DES_ADDR_CH0</name>
          </field>
        </fields>
        <name>IN_ERR_EOF_DES_ADDR_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>DMA_IN_DSCR_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the current inlink descriptor x.</description>
            <name>INLINK_DSCR_CH0</name>
          </field>
        </fields>
        <name>IN_DSCR_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>DMA_IN_DSCR_BF0_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the last inlink descriptor x-1.</description>
            <name>INLINK_DSCR_BF0_CH0</name>
          </field>
        </fields>
        <name>IN_DSCR_BF0_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>DMA_IN_DSCR_BF1_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the second-to-last inlink descriptor x-2.</description>
            <name>INLINK_DSCR_BF1_CH0</name>
          </field>
        </fields>
        <name>IN_DSCR_BF1_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>DMA_IN_PRI_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The priority of Rx channel 0. The larger of the value, the higher of the priority.</description>
            <name>RX_PRI_CH0</name>
          </field>
        </fields>
        <name>IN_PRI_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>DMA_IN_PERI_SEL_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>This register is used to select peripheral for Rx channel 0. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
            <name>PERI_IN_SEL_CH0</name>
          </field>
        </fields>
        <name>IN_PERI_SEL_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>DMA_OUT_CONF0_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset DMA channel 0 Tx FSM and Tx FIFO pointer.</description>
            <name>OUT_RST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_LOOP_TEST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted.</description>
            <name>OUT_AUTO_WRBACK_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 0 is generated when data need to transmit has been popped from FIFO in DMA</description>
            <name>OUT_EOF_MODE_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 0 reading link descriptor when accessing internal SRAM.</description>
            <name>OUTDSCR_BURST_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 0 transmitting data when accessing internal SRAM.</description>
            <name>OUT_DATA_BURST_EN_CH0</name>
          </field>
        </fields>
        <name>OUT_CONF0_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>DMA_OUT_CONF1_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
            <name>OUT_CHECK_OWNER_CH0</name>
          </field>
        </fields>
        <name>OUT_CONF1_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <description>DMA_OUTFIFO_STATUS_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Tx FIFO full signal for Tx channel 0.</description>
            <name>OUTFIFO_FULL_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Tx FIFO empty signal for Tx channel 0.</description>
            <name>OUTFIFO_EMPTY_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The register stores the byte number of the data in L1 Tx FIFO for Tx channel 0.</description>
            <name>OUTFIFO_CNT_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_1B_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_2B_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_3B_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_4B_CH0</name>
          </field>
        </fields>
        <name>OUTFIFO_STATUS_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7800002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <description>DMA_OUT_PUSH_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>This register stores the data that need to be pushed into DMA FIFO.</description>
            <name>OUTFIFO_WDATA_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to push data into DMA FIFO.</description>
            <name>OUTFIFO_PUSH_CH0</name>
          </field>
        </fields>
        <name>OUT_PUSH_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <description>DMA_OUT_LINK_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the 20 least significant bits of the first outlink descriptor's address.</description>
            <name>OUTLINK_ADDR_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop dealing with the outlink descriptors.</description>
            <name>OUTLINK_STOP_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start dealing with the outlink descriptors.</description>
            <name>OUTLINK_START_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to restart a new outlink from the last address.</description>
            <name>OUTLINK_RESTART_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working.</description>
            <name>OUTLINK_PARK_CH0</name>
          </field>
        </fields>
        <name>OUT_LINK_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <description>DMA_OUT_STATE_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register stores the current outlink descriptor's address.</description>
            <name>OUTLINK_DSCR_ADDR_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>OUT_DSCR_STATE_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reserved</description>
            <name>OUT_STATE_CH0</name>
          </field>
        </fields>
        <name>OUT_STATE_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <description>DMA_OUT_EOF_DES_ADDR_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1.</description>
            <name>OUT_EOF_DES_ADDR_CH0</name>
          </field>
        </fields>
        <name>OUT_EOF_DES_ADDR_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <description>DMA_OUT_EOF_BFR_DES_ADDR_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the outlink descriptor before the last outlink descriptor.</description>
            <name>OUT_EOF_BFR_DES_ADDR_CH0</name>
          </field>
        </fields>
        <name>OUT_EOF_BFR_DES_ADDR_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <description>DMA_OUT_DSCR_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the current outlink descriptor y.</description>
            <name>OUTLINK_DSCR_CH0</name>
          </field>
        </fields>
        <name>OUT_DSCR_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <description>DMA_OUT_DSCR_BF0_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the last outlink descriptor y-1.</description>
            <name>OUTLINK_DSCR_BF0_CH0</name>
          </field>
        </fields>
        <name>OUT_DSCR_BF0_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>DMA_OUT_DSCR_BF1_CH0_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the second-to-last inlink descriptor x-2.</description>
            <name>OUTLINK_DSCR_BF1_CH0</name>
          </field>
        </fields>
        <name>OUT_DSCR_BF1_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>DMA_OUT_PRI_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The priority of Tx channel 0. The larger of the value, the higher of the priority.</description>
            <name>TX_PRI_CH0</name>
          </field>
        </fields>
        <name>OUT_PRI_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <description>DMA_OUT_PERI_SEL_CH0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>This register is used to select peripheral for Tx channel 0. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
            <name>PERI_OUT_SEL_CH0</name>
          </field>
        </fields>
        <name>OUT_PERI_SEL_CH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <description>DMA_IN_CONF0_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset DMA channel 1 Rx FSM and Rx FIFO pointer.</description>
            <name>IN_RST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_LOOP_TEST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 1 reading link descriptor when accessing internal SRAM.</description>
            <name>INDSCR_BURST_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 1 receiving data when accessing internal SRAM.</description>
            <name>IN_DATA_BURST_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit 1 to enable automatic transmitting data from memory to memory via DMA.</description>
            <name>MEM_TRANS_EN_CH1</name>
          </field>
        </fields>
        <name>IN_CONF0_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <description>DMA_IN_CONF1_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
            <name>IN_CHECK_OWNER_CH1</name>
          </field>
        </fields>
        <name>IN_CONF1_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <description>DMA_INFIFO_STATUS_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Rx FIFO full signal for Rx channel 1.</description>
            <name>INFIFO_FULL_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Rx FIFO empty signal for Rx channel 1.</description>
            <name>INFIFO_EMPTY_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The register stores the byte number of the data in L1 Rx FIFO for Rx channel 1.</description>
            <name>INFIFO_CNT_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_1B_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_2B_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_3B_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_4B_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_BUF_HUNGRY_CH1</name>
          </field>
        </fields>
        <name>INFIFO_STATUS_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7800003</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <description>DMA_IN_POP_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores the data popping from DMA FIFO.</description>
            <name>INFIFO_RDATA_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pop data from DMA FIFO.</description>
            <name>INFIFO_POP_CH1</name>
          </field>
        </fields>
        <name>IN_POP_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <description>DMA_IN_LINK_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the 20 least significant bits of the first inlink descriptor's address.</description>
            <name>INLINK_ADDR_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to return to current inlink descriptor's address, when there are some errors in current receiving data.</description>
            <name>INLINK_AUTO_RET_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop dealing with the inlink descriptors.</description>
            <name>INLINK_STOP_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start dealing with the inlink descriptors.</description>
            <name>INLINK_START_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to mount a new inlink descriptor.</description>
            <name>INLINK_RESTART_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working.</description>
            <name>INLINK_PARK_CH1</name>
          </field>
        </fields>
        <name>IN_LINK_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1100000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <description>DMA_IN_STATE_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register stores the current inlink descriptor's address.</description>
            <name>INLINK_DSCR_ADDR_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>IN_DSCR_STATE_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reserved</description>
            <name>IN_STATE_CH1</name>
          </field>
        </fields>
        <name>IN_STATE_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <description>DMA_IN_SUC_EOF_DES_ADDR_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1.</description>
            <name>IN_SUC_EOF_DES_ADDR_CH1</name>
          </field>
        </fields>
        <name>IN_SUC_EOF_DES_ADDR_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <description>DMA_IN_ERR_EOF_DES_ADDR_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0.</description>
            <name>IN_ERR_EOF_DES_ADDR_CH1</name>
          </field>
        </fields>
        <name>IN_ERR_EOF_DES_ADDR_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x150</addressOffset>
        <description>DMA_IN_DSCR_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the current inlink descriptor x.</description>
            <name>INLINK_DSCR_CH1</name>
          </field>
        </fields>
        <name>IN_DSCR_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x154</addressOffset>
        <description>DMA_IN_DSCR_BF0_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the last inlink descriptor x-1.</description>
            <name>INLINK_DSCR_BF0_CH1</name>
          </field>
        </fields>
        <name>IN_DSCR_BF0_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x158</addressOffset>
        <description>DMA_IN_DSCR_BF1_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the second-to-last inlink descriptor x-2.</description>
            <name>INLINK_DSCR_BF1_CH1</name>
          </field>
        </fields>
        <name>IN_DSCR_BF1_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15C</addressOffset>
        <description>DMA_IN_PRI_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The priority of Rx channel 1. The larger of the value, the higher of the priority.</description>
            <name>RX_PRI_CH1</name>
          </field>
        </fields>
        <name>IN_PRI_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x160</addressOffset>
        <description>DMA_IN_PERI_SEL_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>This register is used to select peripheral for Rx channel 1. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
            <name>PERI_IN_SEL_CH1</name>
          </field>
        </fields>
        <name>IN_PERI_SEL_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x190</addressOffset>
        <description>DMA_OUT_CONF0_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset DMA channel 1 Tx FSM and Tx FIFO pointer.</description>
            <name>OUT_RST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_LOOP_TEST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted.</description>
            <name>OUT_AUTO_WRBACK_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 1 is generated when data need to transmit has been popped from FIFO in DMA</description>
            <name>OUT_EOF_MODE_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 1 reading link descriptor when accessing internal SRAM.</description>
            <name>OUTDSCR_BURST_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 1 transmitting data when accessing internal SRAM.</description>
            <name>OUT_DATA_BURST_EN_CH1</name>
          </field>
        </fields>
        <name>OUT_CONF0_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x194</addressOffset>
        <description>DMA_OUT_CONF1_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
            <name>OUT_CHECK_OWNER_CH1</name>
          </field>
        </fields>
        <name>OUT_CONF1_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x198</addressOffset>
        <description>DMA_OUTFIFO_STATUS_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Tx FIFO full signal for Tx channel 1.</description>
            <name>OUTFIFO_FULL_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Tx FIFO empty signal for Tx channel 1.</description>
            <name>OUTFIFO_EMPTY_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The register stores the byte number of the data in L1 Tx FIFO for Tx channel 1.</description>
            <name>OUTFIFO_CNT_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_1B_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_2B_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_3B_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_4B_CH1</name>
          </field>
        </fields>
        <name>OUTFIFO_STATUS_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7800002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19C</addressOffset>
        <description>DMA_OUT_PUSH_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>This register stores the data that need to be pushed into DMA FIFO.</description>
            <name>OUTFIFO_WDATA_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to push data into DMA FIFO.</description>
            <name>OUTFIFO_PUSH_CH1</name>
          </field>
        </fields>
        <name>OUT_PUSH_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A0</addressOffset>
        <description>DMA_OUT_LINK_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the 20 least significant bits of the first outlink descriptor's address.</description>
            <name>OUTLINK_ADDR_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop dealing with the outlink descriptors.</description>
            <name>OUTLINK_STOP_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start dealing with the outlink descriptors.</description>
            <name>OUTLINK_START_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to restart a new outlink from the last address.</description>
            <name>OUTLINK_RESTART_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working.</description>
            <name>OUTLINK_PARK_CH1</name>
          </field>
        </fields>
        <name>OUT_LINK_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A4</addressOffset>
        <description>DMA_OUT_STATE_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register stores the current outlink descriptor's address.</description>
            <name>OUTLINK_DSCR_ADDR_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>OUT_DSCR_STATE_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reserved</description>
            <name>OUT_STATE_CH1</name>
          </field>
        </fields>
        <name>OUT_STATE_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A8</addressOffset>
        <description>DMA_OUT_EOF_DES_ADDR_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1.</description>
            <name>OUT_EOF_DES_ADDR_CH1</name>
          </field>
        </fields>
        <name>OUT_EOF_DES_ADDR_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1AC</addressOffset>
        <description>DMA_OUT_EOF_BFR_DES_ADDR_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the outlink descriptor before the last outlink descriptor.</description>
            <name>OUT_EOF_BFR_DES_ADDR_CH1</name>
          </field>
        </fields>
        <name>OUT_EOF_BFR_DES_ADDR_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B0</addressOffset>
        <description>DMA_OUT_DSCR_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the current outlink descriptor y.</description>
            <name>OUTLINK_DSCR_CH1</name>
          </field>
        </fields>
        <name>OUT_DSCR_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B4</addressOffset>
        <description>DMA_OUT_DSCR_BF0_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the last outlink descriptor y-1.</description>
            <name>OUTLINK_DSCR_BF0_CH1</name>
          </field>
        </fields>
        <name>OUT_DSCR_BF0_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B8</addressOffset>
        <description>DMA_OUT_DSCR_BF1_CH1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the second-to-last inlink descriptor x-2.</description>
            <name>OUTLINK_DSCR_BF1_CH1</name>
          </field>
        </fields>
        <name>OUT_DSCR_BF1_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1BC</addressOffset>
        <description>DMA_OUT_PRI_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The priority of Tx channel 1. The larger of the value, the higher of the priority.</description>
            <name>TX_PRI_CH1</name>
          </field>
        </fields>
        <name>OUT_PRI_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C0</addressOffset>
        <description>DMA_OUT_PERI_SEL_CH1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>This register is used to select peripheral for Tx channel 1. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
            <name>PERI_OUT_SEL_CH1</name>
          </field>
        </fields>
        <name>OUT_PERI_SEL_CH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F0</addressOffset>
        <description>DMA_IN_CONF0_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset DMA channel 2 Rx FSM and Rx FIFO pointer.</description>
            <name>IN_RST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_LOOP_TEST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 2 reading link descriptor when accessing internal SRAM.</description>
            <name>INDSCR_BURST_EN_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 2 receiving data when accessing internal SRAM.</description>
            <name>IN_DATA_BURST_EN_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit 1 to enable automatic transmitting data from memory to memory via DMA.</description>
            <name>MEM_TRANS_EN_CH2</name>
          </field>
        </fields>
        <name>IN_CONF0_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F4</addressOffset>
        <description>DMA_IN_CONF1_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
            <name>IN_CHECK_OWNER_CH2</name>
          </field>
        </fields>
        <name>IN_CONF1_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F8</addressOffset>
        <description>DMA_INFIFO_STATUS_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Rx FIFO full signal for Rx channel 2.</description>
            <name>INFIFO_FULL_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Rx FIFO empty signal for Rx channel 2.</description>
            <name>INFIFO_EMPTY_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The register stores the byte number of the data in L1 Rx FIFO for Rx channel 2.</description>
            <name>INFIFO_CNT_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_1B_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_2B_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_3B_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_REMAIN_UNDER_4B_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>IN_BUF_HUNGRY_CH2</name>
          </field>
        </fields>
        <name>INFIFO_STATUS_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7800003</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <description>DMA_IN_POP_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores the data popping from DMA FIFO.</description>
            <name>INFIFO_RDATA_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to pop data from DMA FIFO.</description>
            <name>INFIFO_POP_CH2</name>
          </field>
        </fields>
        <name>IN_POP_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x200</addressOffset>
        <description>DMA_IN_LINK_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the 20 least significant bits of the first inlink descriptor's address.</description>
            <name>INLINK_ADDR_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to return to current inlink descriptor's address, when there are some errors in current receiving data.</description>
            <name>INLINK_AUTO_RET_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop dealing with the inlink descriptors.</description>
            <name>INLINK_STOP_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start dealing with the inlink descriptors.</description>
            <name>INLINK_START_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to mount a new inlink descriptor.</description>
            <name>INLINK_RESTART_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working.</description>
            <name>INLINK_PARK_CH2</name>
          </field>
        </fields>
        <name>IN_LINK_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1100000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x204</addressOffset>
        <description>DMA_IN_STATE_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register stores the current inlink descriptor's address.</description>
            <name>INLINK_DSCR_ADDR_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>IN_DSCR_STATE_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reserved</description>
            <name>IN_STATE_CH2</name>
          </field>
        </fields>
        <name>IN_STATE_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x208</addressOffset>
        <description>DMA_IN_SUC_EOF_DES_ADDR_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1.</description>
            <name>IN_SUC_EOF_DES_ADDR_CH2</name>
          </field>
        </fields>
        <name>IN_SUC_EOF_DES_ADDR_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20C</addressOffset>
        <description>DMA_IN_ERR_EOF_DES_ADDR_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0.</description>
            <name>IN_ERR_EOF_DES_ADDR_CH2</name>
          </field>
        </fields>
        <name>IN_ERR_EOF_DES_ADDR_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x210</addressOffset>
        <description>DMA_IN_DSCR_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the current inlink descriptor x.</description>
            <name>INLINK_DSCR_CH2</name>
          </field>
        </fields>
        <name>IN_DSCR_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x214</addressOffset>
        <description>DMA_IN_DSCR_BF0_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the last inlink descriptor x-1.</description>
            <name>INLINK_DSCR_BF0_CH2</name>
          </field>
        </fields>
        <name>IN_DSCR_BF0_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x218</addressOffset>
        <description>DMA_IN_DSCR_BF1_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the second-to-last inlink descriptor x-2.</description>
            <name>INLINK_DSCR_BF1_CH2</name>
          </field>
        </fields>
        <name>IN_DSCR_BF1_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21C</addressOffset>
        <description>DMA_IN_PRI_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The priority of Rx channel 2. The larger of the value, the higher of the priority.</description>
            <name>RX_PRI_CH2</name>
          </field>
        </fields>
        <name>IN_PRI_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x220</addressOffset>
        <description>DMA_IN_PERI_SEL_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>This register is used to select peripheral for Rx channel 2. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
            <name>PERI_IN_SEL_CH2</name>
          </field>
        </fields>
        <name>IN_PERI_SEL_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x250</addressOffset>
        <description>DMA_OUT_CONF0_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to reset DMA channel 2 Tx FSM and Tx FIFO pointer.</description>
            <name>OUT_RST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_LOOP_TEST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted.</description>
            <name>OUT_AUTO_WRBACK_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 2 is generated when data need to transmit has been popped from FIFO in DMA</description>
            <name>OUT_EOF_MODE_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 2 reading link descriptor when accessing internal SRAM.</description>
            <name>OUTDSCR_BURST_EN_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 2 transmitting data when accessing internal SRAM.</description>
            <name>OUT_DATA_BURST_EN_CH2</name>
          </field>
        </fields>
        <name>OUT_CONF0_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x254</addressOffset>
        <description>DMA_OUT_CONF1_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
            <name>OUT_CHECK_OWNER_CH2</name>
          </field>
        </fields>
        <name>OUT_CONF1_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x258</addressOffset>
        <description>DMA_OUTFIFO_STATUS_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Tx FIFO full signal for Tx channel 2.</description>
            <name>OUTFIFO_FULL_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>L1 Tx FIFO empty signal for Tx channel 2.</description>
            <name>OUTFIFO_EMPTY_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The register stores the byte number of the data in L1 Tx FIFO for Tx channel 2.</description>
            <name>OUTFIFO_CNT_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_1B_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_2B_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_3B_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>OUT_REMAIN_UNDER_4B_CH2</name>
          </field>
        </fields>
        <name>OUTFIFO_STATUS_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7800002</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25C</addressOffset>
        <description>DMA_OUT_PUSH_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>This register stores the data that need to be pushed into DMA FIFO.</description>
            <name>OUTFIFO_WDATA_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to push data into DMA FIFO.</description>
            <name>OUTFIFO_PUSH_CH2</name>
          </field>
        </fields>
        <name>OUT_PUSH_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x260</addressOffset>
        <description>DMA_OUT_LINK_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>This register stores the 20 least significant bits of the first outlink descriptor's address.</description>
            <name>OUTLINK_ADDR_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop dealing with the outlink descriptors.</description>
            <name>OUTLINK_STOP_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start dealing with the outlink descriptors.</description>
            <name>OUTLINK_START_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to restart a new outlink from the last address.</description>
            <name>OUTLINK_RESTART_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working.</description>
            <name>OUTLINK_PARK_CH2</name>
          </field>
        </fields>
        <name>OUT_LINK_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x264</addressOffset>
        <description>DMA_OUT_STATE_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>This register stores the current outlink descriptor's address.</description>
            <name>OUTLINK_DSCR_ADDR_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>OUT_DSCR_STATE_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reserved</description>
            <name>OUT_STATE_CH2</name>
          </field>
        </fields>
        <name>OUT_STATE_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x268</addressOffset>
        <description>DMA_OUT_EOF_DES_ADDR_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1.</description>
            <name>OUT_EOF_DES_ADDR_CH2</name>
          </field>
        </fields>
        <name>OUT_EOF_DES_ADDR_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26C</addressOffset>
        <description>DMA_OUT_EOF_BFR_DES_ADDR_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This register stores the address of the outlink descriptor before the last outlink descriptor.</description>
            <name>OUT_EOF_BFR_DES_ADDR_CH2</name>
          </field>
        </fields>
        <name>OUT_EOF_BFR_DES_ADDR_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x270</addressOffset>
        <description>DMA_OUT_DSCR_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the current outlink descriptor y.</description>
            <name>OUTLINK_DSCR_CH2</name>
          </field>
        </fields>
        <name>OUT_DSCR_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x274</addressOffset>
        <description>DMA_OUT_DSCR_BF0_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the last outlink descriptor y-1.</description>
            <name>OUTLINK_DSCR_BF0_CH2</name>
          </field>
        </fields>
        <name>OUT_DSCR_BF0_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x278</addressOffset>
        <description>DMA_OUT_DSCR_BF1_CH2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The address of the second-to-last inlink descriptor x-2.</description>
            <name>OUTLINK_DSCR_BF1_CH2</name>
          </field>
        </fields>
        <name>OUT_DSCR_BF1_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27C</addressOffset>
        <description>DMA_OUT_PRI_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The priority of Tx channel 2. The larger of the value, the higher of the priority.</description>
            <name>TX_PRI_CH2</name>
          </field>
        </fields>
        <name>OUT_PRI_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x280</addressOffset>
        <description>DMA_OUT_PERI_SEL_CH2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>This register is used to select peripheral for Tx channel 2. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC.</description>
            <name>PERI_OUT_SEL_CH2</name>
          </field>
        </fields>
        <name>OUT_PERI_SEL_CH2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xA4C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x6003D000</baseAddress>
    <description>Digital Signature</description>
    <groupName>DS</groupName>
    <interrupts></interrupts>
    <name>DS</name>
    <registers>
      <register>
        <addressOffset>0xE00</addressOffset>
        <description>DS start control register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to start DS operation.</description>
            <name>SET_START</name>
          </field>
        </fields>
        <name>SET_START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE04</addressOffset>
        <description>DS continue control register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to continue DS operation.</description>
            <name>SET_CONTINUE</name>
          </field>
        </fields>
        <name>SET_CONTINUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE08</addressOffset>
        <description>DS finish control register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to finish DS process.</description>
            <name>SET_FINISH</name>
          </field>
        </fields>
        <name>SET_FINISH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0C</addressOffset>
        <description>DS query busy register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital signature state. 1'b0: idle, 1'b1: busy</description>
            <name>QUERY_BUSY</name>
          </field>
        </fields>
        <name>QUERY_BUSY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE10</addressOffset>
        <description>DS query key-wrong counter register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>digital signature key wrong counter</description>
            <name>QUERY_KEY_WRONG</name>
          </field>
        </fields>
        <name>QUERY_KEY_WRONG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE14</addressOffset>
        <description>DS query check result register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>MD checkout result. 1'b0: MD check pass, 1'b1: MD check fail</description>
            <name>MD_ERROR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>padding checkout result. 1'b0: a good padding, 1'b1: a bad padding</description>
            <name>PADDING_BAD</name>
          </field>
        </fields>
        <name>QUERY_CHECK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE20</addressOffset>
        <description>DS version control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>ds version information</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20200618</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[16]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[17]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[18]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[19]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[20]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[21]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[22]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[23]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[24]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[25]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[26]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[27]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[28]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[29]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[30]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[31]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[32]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[33]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x22</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[34]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x23</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[35]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[36]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[37]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[38]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[39]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[40]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x29</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[41]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[42]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[43]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[44]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[45]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[46]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[47]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[48]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x31</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[49]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x32</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[50]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x33</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[51]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[52]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x35</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[53]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x36</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[54]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x37</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[55]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[56]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x39</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[57]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[58]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[59]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[60]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[61]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[62]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[63]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[64]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x41</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[65]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x42</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[66]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x43</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[67]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[68]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x45</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[69]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x46</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[70]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x47</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[71]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[72]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x49</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[73]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[74]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[75]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[76]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[77]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[78]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[79]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[80]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[81]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[82]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[83]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[84]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[85]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[86]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[87]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[88]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[89]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[90]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[91]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[92]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[93]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[94]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[95]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[96]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x61</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[97]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x62</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[98]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x63</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[99]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[100]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x65</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[101]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x66</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[102]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x67</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[103]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[104]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x69</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[105]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[106]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[107]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[108]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[109]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[110]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[111]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[112]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x71</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[113]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x72</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[114]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x73</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[115]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[116]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x75</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[117]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x76</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[118]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x77</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[119]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[120]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x79</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[121]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[122]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[123]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[124]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[125]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[126]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[127]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[128]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[129]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[130]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x83</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[131]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[132]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x85</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[133]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x86</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[134]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x87</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[135]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[136]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x89</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[137]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[138]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[139]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[140]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[141]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[142]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[143]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[144]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x91</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[145]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x92</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[146]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x93</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[147]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[148]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x95</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[149]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x96</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[150]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x97</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[151]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[152]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x99</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[153]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[154]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[155]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[156]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[157]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[158]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[159]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[160]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[161]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[162]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[163]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[164]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[165]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[166]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[167]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[168]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[169]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[170]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[171]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[172]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[173]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[174]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[175]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[176]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[177]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[178]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[179]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[180]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[181]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[182]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[183]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[184]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[185]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[186]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[187]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[188]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[189]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[190]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[191]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[192]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[193]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[194]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[195]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[196]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[197]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[198]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[199]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[200]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[201]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[202]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[203]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[204]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[205]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[206]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[207]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[208]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[209]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[210]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[211]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[212]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[213]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[214]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[215]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[216]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[217]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[218]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[219]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[220]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[221]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[222]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[223]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[224]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[225]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[226]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[227]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[228]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[229]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[230]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[231]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[232]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[233]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[234]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[235]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[236]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xED</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[237]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[238]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[239]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[240]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[241]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[242]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[243]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[244]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[245]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[246]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[247]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[248]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[249]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[250]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[251]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[252]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[253]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[254]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[255]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[256]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x101</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[257]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x102</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[258]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x103</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[259]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[260]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x105</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[261]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x106</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[262]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x107</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[263]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[264]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x109</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[265]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[266]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[267]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[268]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[269]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[270]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[271]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[272]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x111</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[273]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x112</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[274]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x113</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[275]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[276]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x115</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[277]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x116</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[278]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x117</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[279]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[280]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x119</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[281]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[282]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[283]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[284]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[285]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[286]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[287]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[288]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x121</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[289]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x122</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[290]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x123</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[291]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[292]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x125</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[293]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x126</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[294]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x127</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[295]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[296]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x129</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[297]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[298]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[299]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[300]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[301]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[302]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[303]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[304]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x131</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[305]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x132</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[306]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x133</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[307]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[308]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x135</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[309]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x136</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[310]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x137</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[311]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[312]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x139</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[313]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[314]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[315]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[316]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[317]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[318]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[319]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[320]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x141</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[321]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x142</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[322]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x143</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[323]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[324]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x145</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[325]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x146</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[326]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x147</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[327]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[328]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x149</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[329]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[330]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[331]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[332]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[333]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[334]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[335]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x150</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[336]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x151</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[337]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x152</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[338]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x153</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[339]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x154</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[340]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x155</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[341]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x156</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[342]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x157</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[343]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x158</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[344]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x159</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[345]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[346]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[347]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[348]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[349]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[350]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[351]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x160</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[352]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x161</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[353]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x162</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[354]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x163</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[355]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x164</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[356]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x165</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[357]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x166</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[358]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x167</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[359]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x168</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[360]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x169</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[361]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[362]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[363]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[364]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[365]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[366]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[367]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x170</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[368]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x171</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[369]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x172</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[370]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x173</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[371]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x174</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[372]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x175</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[373]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x176</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[374]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x177</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[375]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x178</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[376]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x179</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[377]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[378]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[379]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[380]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[381]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[382]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[383]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x180</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[384]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x181</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[385]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x182</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[386]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x183</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[387]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x184</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[388]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x185</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[389]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x186</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[390]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x187</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[391]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x188</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[392]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x189</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[393]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[394]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[395]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[396]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[397]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[398]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[399]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x190</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[400]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x191</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[401]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x192</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[402]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x193</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[403]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x194</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[404]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x195</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[405]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x196</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[406]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x197</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[407]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x198</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[408]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x199</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[409]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19A</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[410]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19B</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[411]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19C</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[412]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19D</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[413]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19E</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[414]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19F</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[415]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[416]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[417]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[418]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[419]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[420]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[421]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[422]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[423]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[424]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[425]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1AA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[426]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1AB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[427]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1AC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[428]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1AD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[429]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1AE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[430]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1AF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[431]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[432]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[433]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[434]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[435]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[436]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[437]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[438]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[439]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[440]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[441]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1BA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[442]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1BB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[443]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1BC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[444]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1BD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[445]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1BE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[446]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1BF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[447]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[448]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[449]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[450]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[451]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[452]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[453]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[454]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[455]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[456]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[457]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1CA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[458]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1CB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[459]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1CC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[460]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1CD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[461]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1CE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[462]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1CF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[463]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[464]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[465]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[466]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[467]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[468]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[469]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[470]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[471]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[472]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[473]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1DA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[474]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1DB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[475]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1DC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[476]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1DD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[477]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1DE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[478]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1DF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[479]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[480]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[481]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[482]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[483]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[484]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[485]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[486]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[487]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[488]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[489]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1EA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[490]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1EB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[491]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1EC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[492]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1ED</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[493]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1EE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[494]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1EF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[495]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F0</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[496]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F1</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[497]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F2</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[498]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F3</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[499]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F4</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[500]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F5</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[501]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F6</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[502]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F7</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[503]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F8</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[504]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F9</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[505]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FA</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[506]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FB</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[507]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[508]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FD</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[509]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FE</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[510]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FF</addressOffset>
        <description>memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[511]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x200</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x201</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x202</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x203</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x204</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x205</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x206</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x207</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x208</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x209</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x210</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[16]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x211</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[17]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x212</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[18]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x213</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[19]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x214</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[20]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x215</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[21]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x216</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[22]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x217</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[23]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x218</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[24]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x219</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[25]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[26]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[27]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[28]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[29]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[30]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[31]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x220</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[32]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x221</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[33]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x222</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[34]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x223</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[35]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x224</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[36]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x225</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[37]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x226</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[38]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x227</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[39]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x228</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[40]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x229</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[41]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x22A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[42]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x22B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[43]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x22C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[44]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x22D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[45]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x22E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[46]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x22F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[47]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x230</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[48]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x231</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[49]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x232</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[50]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x233</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[51]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x234</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[52]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x235</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[53]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x236</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[54]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x237</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[55]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x238</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[56]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x239</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[57]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x23A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[58]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x23B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[59]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x23C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[60]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x23D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[61]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x23E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[62]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x23F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[63]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x240</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[64]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x241</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[65]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x242</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[66]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x243</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[67]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x244</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[68]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x245</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[69]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x246</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[70]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x247</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[71]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x248</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[72]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x249</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[73]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[74]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[75]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[76]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[77]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[78]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[79]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x250</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[80]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x251</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[81]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x252</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[82]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x253</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[83]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x254</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[84]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x255</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[85]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x256</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[86]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x257</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[87]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x258</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[88]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x259</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[89]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[90]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[91]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[92]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[93]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[94]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[95]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x260</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[96]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x261</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[97]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x262</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[98]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x263</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[99]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x264</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[100]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x265</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[101]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x266</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[102]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x267</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[103]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x268</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[104]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x269</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[105]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[106]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[107]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[108]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[109]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[110]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[111]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x270</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[112]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x271</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[113]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x272</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[114]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x273</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[115]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x274</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[116]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x275</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[117]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x276</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[118]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x277</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[119]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x278</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[120]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x279</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[121]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[122]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[123]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[124]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[125]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[126]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[127]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x280</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[128]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x281</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[129]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x282</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[130]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x283</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[131]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x284</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[132]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x285</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[133]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x286</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[134]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x287</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[135]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x288</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[136]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x289</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[137]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[138]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[139]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[140]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[141]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[142]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[143]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x290</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[144]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x291</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[145]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x292</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[146]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x293</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[147]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x294</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[148]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x295</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[149]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x296</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[150]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x297</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[151]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x298</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[152]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x299</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[153]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x29A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[154]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x29B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[155]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x29C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[156]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x29D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[157]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x29E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[158]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x29F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[159]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[160]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[161]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[162]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[163]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[164]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[165]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[166]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[167]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[168]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[169]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2AA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[170]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2AB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[171]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2AC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[172]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2AD</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[173]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2AE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[174]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2AF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[175]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[176]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[177]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[178]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[179]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[180]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[181]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[182]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[183]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[184]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[185]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2BA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[186]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2BB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[187]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2BC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[188]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2BD</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[189]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2BE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[190]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2BF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[191]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[192]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[193]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[194]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[195]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[196]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[197]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[198]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[199]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[200]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[201]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2CA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[202]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2CB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[203]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2CC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[204]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2CD</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[205]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2CE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[206]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2CF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[207]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[208]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[209]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[210]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[211]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[212]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[213]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[214]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[215]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[216]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[217]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2DA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[218]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2DB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[219]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2DC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[220]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2DD</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[221]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2DE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[222]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2DF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[223]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[224]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[225]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[226]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[227]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[228]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[229]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[230]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[231]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[232]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[233]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2EA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[234]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2EB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[235]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2EC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[236]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2ED</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[237]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2EE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[238]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2EF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[239]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[240]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[241]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[242]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[243]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[244]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[245]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[246]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[247]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[248]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[249]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2FA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[250]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2FB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[251]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2FC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[252]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2FD</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[253]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2FE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[254]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2FF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[255]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x300</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[256]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x301</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[257]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x302</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[258]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x303</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[259]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x304</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[260]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x305</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[261]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x306</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[262]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x307</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[263]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x308</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[264]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x309</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[265]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[266]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[267]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[268]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[269]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[270]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[271]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x310</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[272]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x311</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[273]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x312</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[274]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x313</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[275]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x314</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[276]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x315</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[277]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x316</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[278]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x317</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[279]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x318</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[280]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x319</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[281]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x31A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[282]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x31B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[283]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x31C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[284]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x31D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[285]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x31E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[286]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x31F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[287]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x320</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[288]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x321</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[289]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x322</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[290]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x323</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[291]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x324</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[292]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x325</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[293]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x326</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[294]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x327</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[295]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x328</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[296]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x329</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[297]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x32A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[298]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x32B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[299]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x32C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[300]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x32D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[301]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x32E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[302]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x32F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[303]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x330</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[304]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x331</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[305]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x332</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[306]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x333</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[307]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x334</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[308]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x335</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[309]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x336</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[310]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x337</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[311]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x338</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[312]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x339</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[313]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x33A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[314]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x33B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[315]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x33C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[316]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x33D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[317]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x33E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[318]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x33F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[319]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x340</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[320]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x341</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[321]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x342</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[322]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x343</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[323]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x344</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[324]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x345</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[325]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x346</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[326]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x347</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[327]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x348</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[328]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x349</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[329]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[330]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[331]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[332]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[333]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[334]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[335]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x350</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[336]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x351</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[337]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x352</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[338]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x353</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[339]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x354</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[340]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x355</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[341]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x356</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[342]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x357</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[343]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x358</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[344]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x359</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[345]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x35A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[346]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x35B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[347]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x35C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[348]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x35D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[349]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x35E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[350]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x35F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[351]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x360</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[352]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x361</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[353]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x362</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[354]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x363</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[355]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x364</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[356]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x365</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[357]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x366</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[358]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x367</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[359]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x368</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[360]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x369</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[361]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x36A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[362]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x36B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[363]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x36C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[364]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x36D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[365]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x36E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[366]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x36F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[367]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x370</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[368]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x371</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[369]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x372</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[370]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x373</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[371]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x374</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[372]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x375</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[373]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x376</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[374]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x377</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[375]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x378</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[376]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x379</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[377]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x37A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[378]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x37B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[379]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x37C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[380]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x37D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[381]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x37E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[382]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x37F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[383]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x380</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[384]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x381</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[385]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x382</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[386]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x383</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[387]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x384</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[388]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x385</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[389]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x386</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[390]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x387</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[391]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x388</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[392]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x389</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[393]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[394]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[395]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[396]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[397]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[398]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[399]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x390</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[400]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x391</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[401]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x392</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[402]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x393</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[403]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x394</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[404]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x395</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[405]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x396</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[406]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x397</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[407]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x398</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[408]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x399</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[409]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x39A</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[410]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x39B</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[411]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x39C</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[412]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x39D</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[413]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x39E</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[414]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x39F</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[415]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[416]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[417]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[418]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[419]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[420]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[421]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[422]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[423]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[424]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3A9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[425]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3AA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[426]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3AB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[427]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3AC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[428]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3AD</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[429]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3AE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[430]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3AF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[431]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[432]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[433]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[434]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[435]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[436]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[437]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[438]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[439]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[440]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3B9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[441]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3BA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[442]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3BB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[443]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3BC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[444]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3BD</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[445]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3BE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[446]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3BF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[447]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[448]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[449]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[450]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[451]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[452]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[453]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[454]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[455]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[456]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[457]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3CA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[458]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3CB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[459]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3CC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[460]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3CD</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[461]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3CE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[462]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3CF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[463]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[464]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[465]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[466]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[467]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[468]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[469]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[470]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[471]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[472]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3D9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[473]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3DA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[474]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3DB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[475]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3DC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[476]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3DD</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[477]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3DE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[478]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3DF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[479]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[480]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[481]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[482]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[483]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[484]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[485]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[486]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[487]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[488]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3E9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[489]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3EA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[490]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3EB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[491]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3EC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[492]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3ED</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[493]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3EE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[494]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3EF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[495]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F0</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[496]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F1</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[497]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F2</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[498]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F3</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[499]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F4</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[500]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F5</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[501]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F6</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[502]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F7</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[503]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F8</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[504]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3F9</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[505]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FA</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[506]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FB</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[507]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[508]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FD</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[509]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FE</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[510]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FF</addressOffset>
        <description>memory that stores M</description>
        <fields></fields>
        <name>M_MEM[511]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x400</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x401</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x402</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x403</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x404</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x405</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x406</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x407</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x408</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x409</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x410</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[16]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x411</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[17]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x412</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[18]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x413</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[19]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x414</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[20]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x415</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[21]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x416</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[22]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x417</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[23]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x418</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[24]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x419</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[25]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x41A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[26]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x41B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[27]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x41C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[28]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x41D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[29]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x41E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[30]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x41F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[31]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x420</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[32]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x421</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[33]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x422</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[34]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x423</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[35]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x424</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[36]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x425</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[37]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x426</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[38]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x427</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[39]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x428</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[40]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x429</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[41]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x42A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[42]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x42B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[43]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x42C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[44]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x42D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[45]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x42E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[46]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x42F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[47]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x430</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[48]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x431</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[49]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x432</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[50]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x433</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[51]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x434</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[52]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x435</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[53]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x436</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[54]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x437</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[55]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x438</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[56]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x439</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[57]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x43A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[58]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x43B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[59]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x43C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[60]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x43D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[61]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x43E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[62]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x43F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[63]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x440</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[64]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x441</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[65]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x442</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[66]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x443</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[67]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x444</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[68]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x445</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[69]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x446</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[70]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x447</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[71]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x448</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[72]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x449</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[73]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[74]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[75]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[76]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[77]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[78]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[79]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x450</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[80]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x451</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[81]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x452</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[82]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x453</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[83]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x454</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[84]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x455</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[85]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x456</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[86]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x457</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[87]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x458</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[88]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x459</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[89]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x45A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[90]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x45B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[91]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x45C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[92]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x45D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[93]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x45E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[94]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x45F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[95]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x460</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[96]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x461</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[97]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x462</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[98]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x463</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[99]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x464</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[100]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x465</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[101]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x466</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[102]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x467</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[103]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x468</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[104]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x469</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[105]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x46A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[106]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x46B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[107]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x46C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[108]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x46D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[109]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x46E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[110]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x46F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[111]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x470</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[112]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x471</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[113]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x472</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[114]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x473</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[115]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x474</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[116]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x475</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[117]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x476</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[118]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x477</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[119]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x478</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[120]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x479</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[121]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x47A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[122]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x47B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[123]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x47C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[124]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x47D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[125]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x47E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[126]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x47F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[127]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x480</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[128]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x481</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[129]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x482</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[130]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x483</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[131]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x484</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[132]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x485</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[133]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x486</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[134]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x487</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[135]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x488</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[136]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x489</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[137]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[138]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[139]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[140]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[141]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[142]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[143]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x490</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[144]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x491</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[145]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x492</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[146]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x493</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[147]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x494</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[148]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x495</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[149]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x496</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[150]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x497</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[151]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x498</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[152]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x499</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[153]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x49A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[154]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x49B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[155]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x49C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[156]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x49D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[157]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x49E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[158]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x49F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[159]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[160]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[161]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[162]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[163]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[164]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[165]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[166]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[167]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[168]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[169]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4AA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[170]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4AB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[171]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4AC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[172]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4AD</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[173]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4AE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[174]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4AF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[175]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[176]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[177]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[178]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[179]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[180]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[181]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[182]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[183]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[184]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[185]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4BA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[186]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4BB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[187]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4BC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[188]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4BD</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[189]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4BE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[190]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4BF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[191]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[192]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[193]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[194]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[195]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[196]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[197]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[198]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[199]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[200]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[201]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4CA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[202]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4CB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[203]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4CC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[204]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4CD</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[205]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4CE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[206]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4CF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[207]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[208]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[209]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[210]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[211]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[212]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[213]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[214]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[215]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[216]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[217]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4DA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[218]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4DB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[219]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4DC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[220]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4DD</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[221]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4DE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[222]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4DF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[223]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[224]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[225]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[226]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[227]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[228]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[229]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[230]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[231]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[232]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[233]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4EA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[234]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4EB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[235]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4EC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[236]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4ED</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[237]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4EE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[238]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4EF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[239]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[240]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[241]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[242]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[243]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[244]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[245]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[246]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[247]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[248]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[249]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4FA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[250]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4FB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[251]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4FC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[252]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4FD</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[253]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4FE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[254]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4FF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[255]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x500</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[256]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x501</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[257]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x502</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[258]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x503</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[259]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x504</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[260]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x505</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[261]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x506</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[262]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x507</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[263]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x508</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[264]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x509</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[265]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[266]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[267]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[268]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[269]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[270]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[271]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x510</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[272]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x511</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[273]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x512</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[274]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x513</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[275]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x514</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[276]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x515</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[277]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x516</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[278]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x517</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[279]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x518</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[280]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x519</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[281]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[282]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[283]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[284]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[285]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[286]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[287]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x520</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[288]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x521</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[289]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x522</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[290]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x523</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[291]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x524</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[292]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x525</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[293]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x526</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[294]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x527</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[295]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x528</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[296]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x529</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[297]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[298]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[299]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[300]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[301]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[302]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[303]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x530</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[304]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x531</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[305]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x532</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[306]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x533</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[307]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x534</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[308]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x535</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[309]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x536</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[310]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x537</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[311]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x538</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[312]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x539</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[313]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[314]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[315]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[316]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[317]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[318]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[319]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x540</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[320]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x541</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[321]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x542</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[322]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x543</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[323]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x544</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[324]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x545</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[325]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x546</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[326]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x547</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[327]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x548</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[328]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x549</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[329]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[330]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[331]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[332]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[333]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[334]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[335]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x550</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[336]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x551</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[337]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x552</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[338]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x553</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[339]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x554</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[340]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x555</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[341]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x556</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[342]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x557</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[343]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x558</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[344]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x559</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[345]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[346]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[347]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[348]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[349]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[350]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[351]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x560</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[352]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x561</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[353]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x562</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[354]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x563</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[355]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x564</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[356]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x565</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[357]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x566</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[358]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x567</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[359]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x568</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[360]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x569</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[361]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[362]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[363]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[364]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[365]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[366]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[367]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x570</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[368]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x571</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[369]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x572</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[370]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x573</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[371]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x574</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[372]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x575</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[373]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x576</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[374]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x577</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[375]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x578</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[376]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x579</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[377]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[378]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[379]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[380]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[381]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[382]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[383]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x580</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[384]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x581</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[385]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x582</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[386]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x583</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[387]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x584</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[388]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x585</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[389]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x586</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[390]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x587</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[391]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x588</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[392]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x589</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[393]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[394]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[395]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[396]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[397]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[398]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[399]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x590</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[400]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x591</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[401]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x592</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[402]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x593</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[403]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x594</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[404]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x595</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[405]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x596</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[406]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x597</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[407]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x598</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[408]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x599</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[409]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59A</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[410]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59B</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[411]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59C</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[412]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59D</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[413]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59E</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[414]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59F</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[415]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[416]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[417]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[418]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[419]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[420]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[421]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[422]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[423]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[424]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[425]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5AA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[426]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5AB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[427]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5AC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[428]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5AD</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[429]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5AE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[430]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5AF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[431]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[432]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[433]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[434]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[435]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[436]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[437]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[438]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[439]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[440]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[441]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5BA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[442]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5BB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[443]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5BC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[444]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5BD</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[445]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5BE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[446]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5BF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[447]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[448]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[449]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[450]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[451]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[452]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[453]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[454]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[455]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[456]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[457]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5CA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[458]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5CB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[459]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5CC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[460]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5CD</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[461]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5CE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[462]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5CF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[463]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[464]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[465]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[466]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[467]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[468]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[469]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[470]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[471]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[472]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[473]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5DA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[474]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5DB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[475]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5DC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[476]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5DD</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[477]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5DE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[478]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5DF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[479]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[480]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[481]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[482]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[483]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[484]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[485]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[486]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[487]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[488]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[489]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5EA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[490]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5EB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[491]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5EC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[492]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5ED</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[493]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5EE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[494]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5EF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[495]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F0</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[496]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F1</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[497]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F2</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[498]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F3</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[499]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F4</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[500]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F5</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[501]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F6</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[502]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F7</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[503]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F8</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[504]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F9</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[505]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5FA</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[506]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5FB</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[507]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5FC</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[508]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5FD</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[509]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5FE</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[510]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5FF</addressOffset>
        <description>memory that stores Rb</description>
        <fields></fields>
        <name>RB_MEM[511]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x600</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x601</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x602</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x603</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x604</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x605</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x606</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x607</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x608</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x609</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60A</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60B</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60C</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60D</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60E</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60F</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x610</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[16]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x611</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[17]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x612</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[18]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x613</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[19]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x614</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[20]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x615</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[21]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x616</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[22]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x617</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[23]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x618</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[24]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x619</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[25]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x61A</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[26]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x61B</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[27]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x61C</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[28]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x61D</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[29]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x61E</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[30]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x61F</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[31]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x620</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[32]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x621</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[33]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x622</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[34]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x623</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[35]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x624</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[36]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x625</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[37]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x626</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[38]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x627</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[39]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x628</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[40]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x629</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[41]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x62A</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[42]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x62B</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[43]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x62C</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[44]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x62D</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[45]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x62E</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[46]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x62F</addressOffset>
        <description>memory that stores BOX</description>
        <fields></fields>
        <name>BOX_MEM[47]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x800</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x801</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x802</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x803</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x804</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x805</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x806</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x807</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x808</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x809</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x810</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[16]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x811</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[17]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x812</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[18]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x813</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[19]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x814</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[20]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x815</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[21]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x816</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[22]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x817</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[23]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x818</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[24]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x819</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[25]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[26]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[27]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[28]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[29]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[30]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[31]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x820</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[32]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x821</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[33]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x822</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[34]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x823</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[35]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x824</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[36]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x825</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[37]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x826</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[38]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x827</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[39]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x828</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[40]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x829</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[41]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[42]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[43]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[44]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[45]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[46]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[47]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x830</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[48]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x831</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[49]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x832</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[50]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x833</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[51]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x834</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[52]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x835</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[53]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x836</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[54]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x837</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[55]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x838</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[56]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x839</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[57]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x83A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[58]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x83B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[59]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x83C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[60]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x83D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[61]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x83E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[62]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x83F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[63]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x840</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[64]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x841</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[65]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x842</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[66]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x843</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[67]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x844</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[68]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x845</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[69]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x846</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[70]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x847</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[71]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x848</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[72]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x849</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[73]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[74]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[75]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[76]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[77]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[78]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[79]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x850</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[80]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x851</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[81]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x852</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[82]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x853</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[83]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x854</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[84]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x855</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[85]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x856</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[86]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x857</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[87]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x858</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[88]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x859</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[89]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x85A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[90]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x85B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[91]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x85C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[92]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x85D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[93]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x85E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[94]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x85F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[95]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x860</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[96]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x861</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[97]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x862</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[98]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x863</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[99]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x864</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[100]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x865</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[101]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x866</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[102]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x867</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[103]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x868</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[104]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x869</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[105]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x86A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[106]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x86B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[107]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x86C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[108]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x86D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[109]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x86E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[110]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x86F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[111]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x870</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[112]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x871</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[113]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x872</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[114]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x873</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[115]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x874</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[116]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x875</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[117]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x876</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[118]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x877</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[119]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x878</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[120]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x879</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[121]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x87A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[122]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x87B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[123]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x87C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[124]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x87D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[125]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x87E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[126]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x87F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[127]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x880</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[128]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x881</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[129]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x882</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[130]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x883</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[131]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x884</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[132]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x885</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[133]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x886</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[134]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x887</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[135]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x888</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[136]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x889</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[137]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[138]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[139]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[140]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[141]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[142]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[143]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x890</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[144]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x891</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[145]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x892</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[146]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x893</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[147]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x894</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[148]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x895</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[149]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x896</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[150]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x897</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[151]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x898</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[152]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x899</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[153]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x89A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[154]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x89B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[155]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x89C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[156]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x89D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[157]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x89E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[158]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x89F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[159]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[160]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[161]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[162]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[163]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[164]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[165]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[166]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[167]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[168]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[169]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8AA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[170]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8AB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[171]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8AC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[172]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8AD</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[173]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8AE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[174]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8AF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[175]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[176]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[177]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[178]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[179]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[180]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[181]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[182]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[183]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[184]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[185]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8BA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[186]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8BB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[187]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8BC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[188]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8BD</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[189]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8BE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[190]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8BF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[191]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[192]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[193]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[194]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[195]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[196]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[197]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[198]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[199]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[200]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[201]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8CA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[202]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8CB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[203]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8CC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[204]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8CD</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[205]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8CE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[206]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8CF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[207]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[208]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[209]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[210]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[211]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[212]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[213]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[214]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[215]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[216]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[217]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8DA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[218]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8DB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[219]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8DC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[220]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8DD</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[221]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8DE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[222]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8DF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[223]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[224]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[225]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[226]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[227]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[228]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[229]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[230]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[231]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[232]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[233]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8EA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[234]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8EB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[235]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8EC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[236]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8ED</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[237]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8EE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[238]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8EF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[239]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[240]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[241]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[242]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[243]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[244]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[245]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[246]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[247]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[248]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[249]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8FA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[250]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8FB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[251]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8FC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[252]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8FD</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[253]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8FE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[254]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8FF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[255]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x900</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[256]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x901</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[257]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x902</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[258]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x903</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[259]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x904</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[260]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x905</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[261]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x906</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[262]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x907</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[263]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x908</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[264]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x909</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[265]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[266]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[267]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[268]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[269]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[270]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[271]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x910</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[272]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x911</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[273]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x912</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[274]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x913</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[275]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x914</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[276]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x915</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[277]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x916</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[278]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x917</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[279]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x918</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[280]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x919</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[281]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x91A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[282]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x91B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[283]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x91C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[284]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x91D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[285]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x91E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[286]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x91F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[287]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x920</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[288]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x921</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[289]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x922</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[290]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x923</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[291]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x924</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[292]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x925</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[293]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x926</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[294]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x927</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[295]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x928</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[296]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x929</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[297]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x92A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[298]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x92B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[299]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x92C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[300]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x92D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[301]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x92E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[302]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x92F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[303]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x930</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[304]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x931</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[305]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x932</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[306]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x933</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[307]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x934</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[308]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x935</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[309]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x936</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[310]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x937</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[311]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x938</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[312]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x939</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[313]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x93A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[314]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x93B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[315]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x93C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[316]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x93D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[317]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x93E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[318]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x93F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[319]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x940</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[320]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x941</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[321]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x942</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[322]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x943</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[323]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x944</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[324]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x945</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[325]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x946</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[326]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x947</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[327]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x948</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[328]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x949</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[329]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[330]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[331]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[332]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[333]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[334]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[335]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x950</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[336]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x951</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[337]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x952</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[338]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x953</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[339]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x954</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[340]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x955</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[341]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x956</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[342]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x957</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[343]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x958</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[344]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x959</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[345]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x95A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[346]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x95B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[347]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x95C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[348]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x95D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[349]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x95E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[350]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x95F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[351]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x960</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[352]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x961</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[353]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x962</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[354]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x963</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[355]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x964</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[356]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x965</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[357]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x966</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[358]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x967</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[359]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x968</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[360]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x969</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[361]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x96A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[362]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x96B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[363]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x96C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[364]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x96D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[365]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x96E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[366]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x96F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[367]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x970</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[368]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x971</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[369]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x972</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[370]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x973</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[371]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x974</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[372]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x975</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[373]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x976</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[374]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x977</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[375]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x978</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[376]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x979</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[377]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x97A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[378]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x97B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[379]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x97C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[380]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x97D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[381]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x97E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[382]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x97F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[383]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x980</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[384]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x981</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[385]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x982</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[386]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x983</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[387]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x984</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[388]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x985</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[389]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x986</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[390]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x987</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[391]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x988</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[392]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x989</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[393]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[394]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[395]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[396]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[397]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[398]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[399]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x990</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[400]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x991</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[401]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x992</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[402]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x993</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[403]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x994</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[404]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x995</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[405]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x996</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[406]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x997</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[407]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x998</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[408]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x999</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[409]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x99A</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[410]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x99B</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[411]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x99C</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[412]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x99D</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[413]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x99E</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[414]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x99F</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[415]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[416]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[417]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[418]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[419]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[420]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[421]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[422]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[423]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[424]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[425]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9AA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[426]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9AB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[427]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9AC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[428]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9AD</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[429]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9AE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[430]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9AF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[431]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[432]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[433]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[434]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[435]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[436]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[437]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[438]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[439]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[440]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[441]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9BA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[442]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9BB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[443]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9BC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[444]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9BD</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[445]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9BE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[446]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9BF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[447]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[448]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[449]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[450]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[451]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[452]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[453]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[454]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[455]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[456]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[457]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9CA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[458]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9CB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[459]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9CC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[460]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9CD</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[461]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9CE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[462]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9CF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[463]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[464]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[465]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[466]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[467]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[468]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[469]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[470]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[471]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[472]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[473]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9DA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[474]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9DB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[475]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9DC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[476]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9DD</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[477]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9DE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[478]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9DF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[479]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[480]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[481]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[482]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[483]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[484]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[485]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[486]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[487]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[488]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[489]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9EA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[490]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9EB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[491]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9EC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[492]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9ED</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[493]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9EE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[494]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9EF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[495]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F0</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[496]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F1</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[497]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F2</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[498]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F3</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[499]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F4</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[500]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F5</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[501]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F6</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[502]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F7</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[503]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F8</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[504]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F9</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[505]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9FA</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[506]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9FB</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[507]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9FC</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[508]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9FD</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[509]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9FE</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[510]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9FF</addressOffset>
        <description>memory that stores X</description>
        <fields></fields>
        <name>X_MEM[511]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA00</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA01</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA02</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA03</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA04</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA05</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA06</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA07</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA08</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA09</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA10</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[16]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA11</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[17]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA12</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[18]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA13</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[19]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA14</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[20]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA15</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[21]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA16</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[22]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA17</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[23]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA18</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[24]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA19</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[25]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA1A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[26]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA1B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[27]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA1C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[28]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA1D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[29]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA1E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[30]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA1F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[31]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA20</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[32]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA21</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[33]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA22</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[34]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA23</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[35]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA24</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[36]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA25</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[37]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA26</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[38]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA27</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[39]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA28</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[40]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA29</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[41]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA2A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[42]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA2B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[43]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA2C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[44]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA2D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[45]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA2E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[46]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA2F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[47]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA30</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[48]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA31</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[49]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA32</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[50]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA33</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[51]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA34</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[52]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA35</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[53]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA36</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[54]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA37</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[55]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA38</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[56]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA39</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[57]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA3A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[58]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA3B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[59]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA3C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[60]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA3D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[61]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA3E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[62]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA3F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[63]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA40</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[64]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA41</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[65]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA42</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[66]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA43</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[67]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA44</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[68]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA45</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[69]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA46</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[70]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA47</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[71]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA48</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[72]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA49</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[73]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[74]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[75]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[76]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[77]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[78]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[79]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA50</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[80]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA51</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[81]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA52</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[82]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA53</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[83]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA54</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[84]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA55</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[85]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA56</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[86]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA57</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[87]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA58</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[88]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA59</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[89]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA5A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[90]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA5B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[91]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA5C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[92]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA5D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[93]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA5E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[94]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA5F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[95]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA60</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[96]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA61</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[97]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA62</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[98]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA63</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[99]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA64</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[100]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA65</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[101]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA66</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[102]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA67</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[103]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA68</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[104]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA69</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[105]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA6A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[106]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA6B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[107]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA6C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[108]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA6D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[109]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA6E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[110]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA6F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[111]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA70</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[112]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA71</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[113]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA72</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[114]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA73</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[115]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA74</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[116]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA75</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[117]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA76</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[118]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA77</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[119]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA78</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[120]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA79</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[121]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA7A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[122]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA7B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[123]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA7C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[124]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA7D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[125]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA7E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[126]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA7F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[127]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA80</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[128]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA81</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[129]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA82</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[130]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA83</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[131]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA84</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[132]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA85</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[133]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA86</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[134]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA87</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[135]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA88</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[136]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA89</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[137]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[138]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[139]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[140]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[141]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[142]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[143]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA90</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[144]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA91</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[145]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA92</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[146]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA93</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[147]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA94</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[148]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA95</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[149]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA96</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[150]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA97</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[151]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA98</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[152]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA99</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[153]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA9A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[154]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA9B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[155]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA9C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[156]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA9D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[157]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA9E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[158]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA9F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[159]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[160]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[161]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[162]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[163]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[164]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[165]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[166]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[167]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[168]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[169]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAAA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[170]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAAB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[171]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAAC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[172]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAAD</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[173]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAAE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[174]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAAF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[175]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[176]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[177]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[178]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[179]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[180]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[181]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[182]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[183]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[184]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[185]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xABA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[186]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xABB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[187]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xABC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[188]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xABD</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[189]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xABE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[190]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xABF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[191]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[192]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[193]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[194]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[195]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[196]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[197]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[198]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[199]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[200]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[201]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xACA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[202]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xACB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[203]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xACC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[204]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xACD</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[205]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xACE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[206]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xACF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[207]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[208]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[209]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[210]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[211]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[212]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[213]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[214]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[215]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[216]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[217]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xADA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[218]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xADB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[219]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xADC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[220]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xADD</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[221]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xADE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[222]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xADF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[223]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[224]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[225]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[226]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[227]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[228]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[229]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[230]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[231]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[232]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[233]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAEA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[234]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAEB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[235]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAEC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[236]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAED</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[237]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAEE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[238]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAEF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[239]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[240]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[241]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[242]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[243]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[244]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[245]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[246]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[247]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[248]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[249]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAFA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[250]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAFB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[251]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAFC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[252]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAFD</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[253]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAFE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[254]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAFF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[255]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB00</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[256]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB01</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[257]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB02</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[258]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB03</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[259]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB04</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[260]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB05</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[261]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB06</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[262]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB07</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[263]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB08</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[264]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB09</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[265]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[266]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[267]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[268]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[269]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[270]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[271]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB10</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[272]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB11</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[273]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB12</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[274]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB13</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[275]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB14</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[276]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB15</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[277]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB16</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[278]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB17</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[279]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB18</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[280]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB19</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[281]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB1A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[282]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB1B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[283]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB1C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[284]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB1D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[285]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB1E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[286]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB1F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[287]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB20</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[288]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB21</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[289]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB22</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[290]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB23</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[291]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB24</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[292]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB25</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[293]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB26</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[294]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB27</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[295]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB28</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[296]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB29</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[297]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB2A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[298]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB2B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[299]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB2C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[300]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB2D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[301]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB2E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[302]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB2F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[303]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB30</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[304]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB31</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[305]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB32</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[306]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB33</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[307]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB34</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[308]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB35</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[309]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB36</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[310]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB37</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[311]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB38</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[312]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB39</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[313]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB3A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[314]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB3B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[315]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB3C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[316]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB3D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[317]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB3E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[318]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB3F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[319]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB40</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[320]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB41</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[321]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB42</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[322]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB43</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[323]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB44</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[324]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB45</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[325]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB46</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[326]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB47</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[327]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB48</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[328]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB49</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[329]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[330]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[331]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[332]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[333]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[334]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[335]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB50</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[336]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB51</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[337]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB52</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[338]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB53</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[339]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB54</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[340]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB55</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[341]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB56</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[342]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB57</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[343]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB58</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[344]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB59</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[345]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB5A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[346]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB5B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[347]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB5C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[348]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB5D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[349]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB5E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[350]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB5F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[351]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB60</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[352]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB61</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[353]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB62</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[354]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB63</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[355]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB64</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[356]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB65</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[357]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB66</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[358]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB67</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[359]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB68</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[360]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB69</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[361]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB6A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[362]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB6B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[363]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB6C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[364]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB6D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[365]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB6E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[366]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB6F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[367]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB70</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[368]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB71</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[369]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB72</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[370]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB73</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[371]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB74</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[372]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB75</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[373]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB76</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[374]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB77</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[375]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB78</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[376]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB79</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[377]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB7A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[378]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB7B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[379]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB7C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[380]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB7D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[381]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB7E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[382]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB7F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[383]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB80</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[384]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB81</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[385]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB82</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[386]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB83</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[387]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB84</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[388]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB85</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[389]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB86</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[390]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB87</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[391]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB88</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[392]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB89</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[393]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[394]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[395]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[396]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[397]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[398]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[399]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB90</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[400]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB91</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[401]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB92</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[402]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB93</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[403]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB94</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[404]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB95</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[405]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB96</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[406]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB97</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[407]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB98</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[408]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB99</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[409]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB9A</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[410]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB9B</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[411]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB9C</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[412]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB9D</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[413]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB9E</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[414]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB9F</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[415]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[416]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[417]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[418]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[419]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[420]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[421]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[422]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[423]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[424]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[425]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBAA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[426]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBAB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[427]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBAC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[428]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBAD</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[429]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBAE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[430]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBAF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[431]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[432]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[433]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[434]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[435]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[436]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[437]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[438]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[439]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[440]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[441]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBBA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[442]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBBB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[443]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBBC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[444]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBBD</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[445]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBBE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[446]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBBF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[447]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[448]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[449]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[450]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[451]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[452]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[453]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[454]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[455]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[456]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[457]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBCA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[458]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBCB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[459]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBCC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[460]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBCD</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[461]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBCE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[462]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBCF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[463]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[464]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[465]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[466]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[467]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[468]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[469]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[470]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[471]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[472]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[473]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBDA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[474]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBDB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[475]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBDC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[476]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBDD</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[477]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBDE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[478]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBDF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[479]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[480]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[481]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[482]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[483]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[484]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[485]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[486]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[487]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[488]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[489]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBEA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[490]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBEB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[491]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBEC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[492]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBED</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[493]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBEE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[494]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBEF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[495]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF0</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[496]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF1</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[497]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF2</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[498]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF3</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[499]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF4</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[500]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF5</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[501]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF6</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[502]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF7</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[503]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF8</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[504]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF9</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[505]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBFA</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[506]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBFB</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[507]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBFC</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[508]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBFD</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[509]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBFE</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[510]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBFF</addressOffset>
        <description>memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[511]</name>
        <size>0x8</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x1CC</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60008800</baseAddress>
    <description>eFuse Controller</description>
    <groupName>EFUSE</groupName>
    <interrupts>
      <interrupt>
        <name>EFUSE</name>
        <value>0x18</value>
      </interrupt>
    </interrupts>
    <name>EFUSE</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>Register 0 that stores data to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 0th 32-bit data to be programmed.</description>
            <name>PGM_DATA_0</name>
          </field>
        </fields>
        <name>PGM_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>Register 1 that stores data to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 1st 32-bit data to be programmed.</description>
            <name>PGM_DATA_1</name>
          </field>
        </fields>
        <name>PGM_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>Register 2 that stores data to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 2nd 32-bit data to be programmed.</description>
            <name>PGM_DATA_2</name>
          </field>
        </fields>
        <name>PGM_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>Register 3 that stores data to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 3rd 32-bit data to be programmed.</description>
            <name>PGM_DATA_3</name>
          </field>
        </fields>
        <name>PGM_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>Register 4 that stores data to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 4th 32-bit data to be programmed.</description>
            <name>PGM_DATA_4</name>
          </field>
        </fields>
        <name>PGM_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>Register 5 that stores data to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 5th 32-bit data to be programmed.</description>
            <name>PGM_DATA_5</name>
          </field>
        </fields>
        <name>PGM_DATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>Register 6 that stores data to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 6th 32-bit data to be programmed.</description>
            <name>PGM_DATA_6</name>
          </field>
        </fields>
        <name>PGM_DATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>Register 7 that stores data to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 7th 32-bit data to be programmed.</description>
            <name>PGM_DATA_7</name>
          </field>
        </fields>
        <name>PGM_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>Register 0 that stores the RS code to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 0th 32-bit RS code to be programmed.</description>
            <name>PGM_RS_DATA_0</name>
          </field>
        </fields>
        <name>PGM_CHECK_VALUE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>Register 1 that stores the RS code to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 1st 32-bit RS code to be programmed.</description>
            <name>PGM_RS_DATA_1</name>
          </field>
        </fields>
        <name>PGM_CHECK_VALUE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>Register 2 that stores the RS code to be programmed.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The content of the 2nd 32-bit RS code to be programmed.</description>
            <name>PGM_RS_DATA_2</name>
          </field>
        </fields>
        <name>PGM_CHECK_VALUE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>BLOCK0 data register 0.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Disable programming of individual eFuses.</description>
            <name>WR_DIS</name>
          </field>
        </fields>
        <name>RD_WR_DIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>BLOCK0 data register 1.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Set this bit to disable reading from BlOCK4-10.</description>
            <name>RD_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable boot from RTC RAM.</description>
            <name>DIS_RTC_RAM_BOOT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable Icache.</description>
            <name>DIS_ICACHE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable function of usb switch to jtag in module of usb device.</description>
            <name>DIS_USB_JTAG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable Icache in download mode (boot_mode[3:0] is 0, 1, 2, 3, 6, 7).</description>
            <name>DIS_DOWNLOAD_ICACHE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable usb device.</description>
            <name>DIS_USB_DEVICE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable the function that forces chip into download mode.</description>
            <name>DIS_FORCE_DOWNLOAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable CAN function.</description>
            <name>DIS_CAN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable selection between usb_to_jtag and pad_to_jtag through strapping gpio10 when both reg_dis_usb_jtag and reg_dis_pad_jtag are equal to 0.</description>
            <name>JTAG_SEL_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Set these bits to disable JTAG in the soft way (odd number 1 means disable ). JTAG can be enabled in HMAC module.</description>
            <name>SOFT_DIS_JTAG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable JTAG in the hard way. JTAG is disabled permanently.</description>
            <name>DIS_PAD_JTAG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable flash encryption when in download boot modes.</description>
            <name>DIS_DOWNLOAD_MANUAL_ENCRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Controls single-end input threshold vrefh, 1.76 V to 2 V with step of 80 mV, stored in eFuse.</description>
            <name>USB_DREFH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Controls single-end input threshold vrefl, 0.8 V to 1.04 V with step of 80 mV, stored in eFuse.</description>
            <name>USB_DREFL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to exchange USB D+ and D- pins.</description>
            <name>USB_EXCHG_PINS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to vdd spi pin function as gpio.</description>
            <name>VDD_SPI_AS_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Enable btlc gpio.</description>
            <name>BTLC_GPIO_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable power glitch function.</description>
            <name>POWERGLITCH_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Sample delay configuration of power glitch.</description>
            <name>POWER_GLITCH_DSENSE</name>
          </field>
        </fields>
        <name>RD_REPEAT_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>BLOCK0 data register 2.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects RTC watchdog timeout threshold, in unit of slow clock cycle. 0: 40000. 1: 80000. 2: 160000. 3:320000.</description>
            <name>WDT_DELAY_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Set this bit to enable SPI boot encrypt/decrypt. Odd number of 1: enable. even number of 1: disable.</description>
            <name>SPI_BOOT_CRYPT_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable revoking first secure boot key.</description>
            <name>SECURE_BOOT_KEY_REVOKE0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable revoking second secure boot key.</description>
            <name>SECURE_BOOT_KEY_REVOKE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable revoking third secure boot key.</description>
            <name>SECURE_BOOT_KEY_REVOKE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Purpose of Key0.</description>
            <name>KEY_PURPOSE_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Purpose of Key1.</description>
            <name>KEY_PURPOSE_1</name>
          </field>
        </fields>
        <name>RD_REPEAT_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>BLOCK0 data register 3.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Purpose of Key2.</description>
            <name>KEY_PURPOSE_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Purpose of Key3.</description>
            <name>KEY_PURPOSE_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Purpose of Key4.</description>
            <name>KEY_PURPOSE_4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Purpose of Key5.</description>
            <name>KEY_PURPOSE_5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable secure boot.</description>
            <name>SECURE_BOOT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable revoking aggressive secure boot.</description>
            <name>SECURE_BOOT_AGGRESSIVE_REVOKE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Configures flash waiting time after power-up, in unit of ms. If the value is less than 15, the waiting time is the configurable value; Otherwise, the waiting time is twice the configurable value.</description>
            <name>FLASH_TPUW</name>
          </field>
        </fields>
        <name>RD_REPEAT_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>BLOCK0 data register 4.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable download mode (boot_mode[3:0] = 0, 1, 2, 3, 6, 7).</description>
            <name>DIS_DOWNLOAD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable Legacy SPI boot mode (boot_mode[3:0] = 4).</description>
            <name>DIS_LEGACY_SPI_BOOT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selectes the default UART print channel. 0: UART0. 1: UART1.</description>
            <name>UART_PRINT_CHANNEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set ECC mode in ROM, 0: ROM would Enable Flash ECC 16to18 byte mode. 1:ROM would use 16to17 byte mode.</description>
            <name>FLASH_ECC_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to disable UART download mode through USB.</description>
            <name>DIS_USB_DOWNLOAD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable secure UART download mode.</description>
            <name>ENABLE_SECURITY_DOWNLOAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Set the default UARTboot message output mode. 00: Enabled. 01: Enabled when GPIO8 is low at reset. 10: Enabled when GPIO8 is high at reset. 11:disabled.</description>
            <name>UART_PRINT_CONTROL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>GPIO33-GPIO37 power supply selection in ROM code. 0: VDD3P3_CPU. 1: VDD_SPI.</description>
            <name>PIN_POWER_SELECTION</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the maximum lines of SPI flash. 0: four lines. 1: eight lines.</description>
            <name>FLASH_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Set Flash page size.</description>
            <name>FLASH_PAGE_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set 1 to enable ECC for flash boot.</description>
            <name>FLASH_ECC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to force ROM code to send a resume command during SPI boot.</description>
            <name>FORCE_SEND_RESUME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Secure version (used by ESP-IDF anti-rollback feature).</description>
            <name>SECURE_VERSION</name>
          </field>
        </fields>
        <name>RD_REPEAT_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>BLOCK0 data register 5.</description>
        <fields></fields>
        <name>RD_REPEAT_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>BLOCK1 data register 0.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the low 32 bits of MAC address.</description>
            <name>MAC_0</name>
          </field>
        </fields>
        <name>RD_MAC_SPI_SYS_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>BLOCK1 data register 1.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Stores the high 16 bits of MAC address.</description>
            <name>MAC_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Stores the zeroth part of SPI_PAD_CONF.</description>
            <name>SPI_PAD_CONF_0</name>
          </field>
        </fields>
        <name>RD_MAC_SPI_SYS_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>BLOCK1 data register 2.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the first part of SPI_PAD_CONF.</description>
            <name>SPI_PAD_CONF_1</name>
          </field>
        </fields>
        <name>RD_MAC_SPI_SYS_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>BLOCK1 data register 3.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>Stores the second part of SPI_PAD_CONF.</description>
            <name>SPI_PAD_CONF_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>Stores the fist 14 bits of the zeroth part of system data.</description>
            <name>SYS_DATA_PART0_0</name>
          </field>
        </fields>
        <name>RD_MAC_SPI_SYS_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>BLOCK1 data register 4.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fist 32 bits of the zeroth part of system data.</description>
            <name>SYS_DATA_PART0_1</name>
          </field>
        </fields>
        <name>RD_MAC_SPI_SYS_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>BLOCK1 data register 5.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the second 32 bits of the zeroth part of system data.</description>
            <name>SYS_DATA_PART0_2</name>
          </field>
        </fields>
        <name>RD_MAC_SPI_SYS_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>Register 0 of BLOCK2 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the zeroth 32 bits of the first part of system data.</description>
            <name>SYS_DATA_PART1_0</name>
          </field>
        </fields>
        <name>RD_SYS_PART1_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>Register 1 of BLOCK2 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the first 32 bits of the first part of system data.</description>
            <name>SYS_DATA_PART1_1</name>
          </field>
        </fields>
        <name>RD_SYS_PART1_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>Register 2 of BLOCK2 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the second 32 bits of the first part of system data.</description>
            <name>SYS_DATA_PART1_2</name>
          </field>
        </fields>
        <name>RD_SYS_PART1_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>Register 3 of BLOCK2 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the third 32 bits of the first part of system data.</description>
            <name>SYS_DATA_PART1_3</name>
          </field>
        </fields>
        <name>RD_SYS_PART1_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>Register 4 of BLOCK2 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fourth 32 bits of the first part of system data.</description>
            <name>SYS_DATA_PART1_4</name>
          </field>
        </fields>
        <name>RD_SYS_PART1_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>Register 5 of BLOCK2 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fifth 32 bits of the first part of system data.</description>
            <name>SYS_DATA_PART1_5</name>
          </field>
        </fields>
        <name>RD_SYS_PART1_DATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>Register 6 of BLOCK2 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the sixth 32 bits of the first part of system data.</description>
            <name>SYS_DATA_PART1_6</name>
          </field>
        </fields>
        <name>RD_SYS_PART1_DATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>Register 7 of BLOCK2 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the seventh 32 bits of the first part of system data.</description>
            <name>SYS_DATA_PART1_7</name>
          </field>
        </fields>
        <name>RD_SYS_PART1_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>Register 0 of BLOCK3 (user).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the zeroth 32 bits of BLOCK3 (user).</description>
            <name>USR_DATA0</name>
          </field>
        </fields>
        <name>RD_USR_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>Register 1 of BLOCK3 (user).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the first 32 bits of BLOCK3 (user).</description>
            <name>USR_DATA1</name>
          </field>
        </fields>
        <name>RD_USR_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>Register 2 of BLOCK3 (user).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the second 32 bits of BLOCK3 (user).</description>
            <name>USR_DATA2</name>
          </field>
        </fields>
        <name>RD_USR_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>Register 3 of BLOCK3 (user).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the third 32 bits of BLOCK3 (user).</description>
            <name>USR_DATA3</name>
          </field>
        </fields>
        <name>RD_USR_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>Register 4 of BLOCK3 (user).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fourth 32 bits of BLOCK3 (user).</description>
            <name>USR_DATA4</name>
          </field>
        </fields>
        <name>RD_USR_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>Register 5 of BLOCK3 (user).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fifth 32 bits of BLOCK3 (user).</description>
            <name>USR_DATA5</name>
          </field>
        </fields>
        <name>RD_USR_DATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>Register 6 of BLOCK3 (user).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the sixth 32 bits of BLOCK3 (user).</description>
            <name>USR_DATA6</name>
          </field>
        </fields>
        <name>RD_USR_DATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>Register 7 of BLOCK3 (user).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the seventh 32 bits of BLOCK3 (user).</description>
            <name>USR_DATA7</name>
          </field>
        </fields>
        <name>RD_USR_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>Register 0 of BLOCK4 (KEY0).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the zeroth 32 bits of KEY0.</description>
            <name>KEY0_DATA0</name>
          </field>
        </fields>
        <name>RD_KEY0_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>Register 1 of BLOCK4 (KEY0).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the first 32 bits of KEY0.</description>
            <name>KEY0_DATA1</name>
          </field>
        </fields>
        <name>RD_KEY0_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>Register 2 of BLOCK4 (KEY0).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the second 32 bits of KEY0.</description>
            <name>KEY0_DATA2</name>
          </field>
        </fields>
        <name>RD_KEY0_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>Register 3 of BLOCK4 (KEY0).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the third 32 bits of KEY0.</description>
            <name>KEY0_DATA3</name>
          </field>
        </fields>
        <name>RD_KEY0_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>Register 4 of BLOCK4 (KEY0).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fourth 32 bits of KEY0.</description>
            <name>KEY0_DATA4</name>
          </field>
        </fields>
        <name>RD_KEY0_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>Register 5 of BLOCK4 (KEY0).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fifth 32 bits of KEY0.</description>
            <name>KEY0_DATA5</name>
          </field>
        </fields>
        <name>RD_KEY0_DATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>Register 6 of BLOCK4 (KEY0).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the sixth 32 bits of KEY0.</description>
            <name>KEY0_DATA6</name>
          </field>
        </fields>
        <name>RD_KEY0_DATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>Register 7 of BLOCK4 (KEY0).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the seventh 32 bits of KEY0.</description>
            <name>KEY0_DATA7</name>
          </field>
        </fields>
        <name>RD_KEY0_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>Register 0 of BLOCK5 (KEY1).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the zeroth 32 bits of KEY1.</description>
            <name>KEY1_DATA0</name>
          </field>
        </fields>
        <name>RD_KEY1_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>Register 1 of BLOCK5 (KEY1).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the first 32 bits of KEY1.</description>
            <name>KEY1_DATA1</name>
          </field>
        </fields>
        <name>RD_KEY1_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>Register 2 of BLOCK5 (KEY1).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the second 32 bits of KEY1.</description>
            <name>KEY1_DATA2</name>
          </field>
        </fields>
        <name>RD_KEY1_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>Register 3 of BLOCK5 (KEY1).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the third 32 bits of KEY1.</description>
            <name>KEY1_DATA3</name>
          </field>
        </fields>
        <name>RD_KEY1_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>Register 4 of BLOCK5 (KEY1).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fourth 32 bits of KEY1.</description>
            <name>KEY1_DATA4</name>
          </field>
        </fields>
        <name>RD_KEY1_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>Register 5 of BLOCK5 (KEY1).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fifth 32 bits of KEY1.</description>
            <name>KEY1_DATA5</name>
          </field>
        </fields>
        <name>RD_KEY1_DATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>Register 6 of BLOCK5 (KEY1).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the sixth 32 bits of KEY1.</description>
            <name>KEY1_DATA6</name>
          </field>
        </fields>
        <name>RD_KEY1_DATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <description>Register 7 of BLOCK5 (KEY1).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the seventh 32 bits of KEY1.</description>
            <name>KEY1_DATA7</name>
          </field>
        </fields>
        <name>RD_KEY1_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <description>Register 0 of BLOCK6 (KEY2).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the zeroth 32 bits of KEY2.</description>
            <name>KEY2_DATA0</name>
          </field>
        </fields>
        <name>RD_KEY2_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <description>Register 1 of BLOCK6 (KEY2).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the first 32 bits of KEY2.</description>
            <name>KEY2_DATA1</name>
          </field>
        </fields>
        <name>RD_KEY2_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <description>Register 2 of BLOCK6 (KEY2).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the second 32 bits of KEY2.</description>
            <name>KEY2_DATA2</name>
          </field>
        </fields>
        <name>RD_KEY2_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <description>Register 3 of BLOCK6 (KEY2).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the third 32 bits of KEY2.</description>
            <name>KEY2_DATA3</name>
          </field>
        </fields>
        <name>RD_KEY2_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <description>Register 4 of BLOCK6 (KEY2).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fourth 32 bits of KEY2.</description>
            <name>KEY2_DATA4</name>
          </field>
        </fields>
        <name>RD_KEY2_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <description>Register 5 of BLOCK6 (KEY2).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fifth 32 bits of KEY2.</description>
            <name>KEY2_DATA5</name>
          </field>
        </fields>
        <name>RD_KEY2_DATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <description>Register 6 of BLOCK6 (KEY2).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the sixth 32 bits of KEY2.</description>
            <name>KEY2_DATA6</name>
          </field>
        </fields>
        <name>RD_KEY2_DATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>Register 7 of BLOCK6 (KEY2).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the seventh 32 bits of KEY2.</description>
            <name>KEY2_DATA7</name>
          </field>
        </fields>
        <name>RD_KEY2_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>Register 0 of BLOCK7 (KEY3).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the zeroth 32 bits of KEY3.</description>
            <name>KEY3_DATA0</name>
          </field>
        </fields>
        <name>RD_KEY3_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <description>Register 1 of BLOCK7 (KEY3).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the first 32 bits of KEY3.</description>
            <name>KEY3_DATA1</name>
          </field>
        </fields>
        <name>RD_KEY3_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <description>Register 2 of BLOCK7 (KEY3).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the second 32 bits of KEY3.</description>
            <name>KEY3_DATA2</name>
          </field>
        </fields>
        <name>RD_KEY3_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <description>Register 3 of BLOCK7 (KEY3).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the third 32 bits of KEY3.</description>
            <name>KEY3_DATA3</name>
          </field>
        </fields>
        <name>RD_KEY3_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <description>Register 4 of BLOCK7 (KEY3).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fourth 32 bits of KEY3.</description>
            <name>KEY3_DATA4</name>
          </field>
        </fields>
        <name>RD_KEY3_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <description>Register 5 of BLOCK7 (KEY3).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fifth 32 bits of KEY3.</description>
            <name>KEY3_DATA5</name>
          </field>
        </fields>
        <name>RD_KEY3_DATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <description>Register 6 of BLOCK7 (KEY3).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the sixth 32 bits of KEY3.</description>
            <name>KEY3_DATA6</name>
          </field>
        </fields>
        <name>RD_KEY3_DATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <description>Register 7 of BLOCK7 (KEY3).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the seventh 32 bits of KEY3.</description>
            <name>KEY3_DATA7</name>
          </field>
        </fields>
        <name>RD_KEY3_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <description>Register 0 of BLOCK8 (KEY4).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the zeroth 32 bits of KEY4.</description>
            <name>KEY4_DATA0</name>
          </field>
        </fields>
        <name>RD_KEY4_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <description>Register 1 of BLOCK8 (KEY4).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the first 32 bits of KEY4.</description>
            <name>KEY4_DATA1</name>
          </field>
        </fields>
        <name>RD_KEY4_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <description>Register 2 of BLOCK8 (KEY4).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the second 32 bits of KEY4.</description>
            <name>KEY4_DATA2</name>
          </field>
        </fields>
        <name>RD_KEY4_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <description>Register 3 of BLOCK8 (KEY4).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the third 32 bits of KEY4.</description>
            <name>KEY4_DATA3</name>
          </field>
        </fields>
        <name>RD_KEY4_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <description>Register 4 of BLOCK8 (KEY4).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fourth 32 bits of KEY4.</description>
            <name>KEY4_DATA4</name>
          </field>
        </fields>
        <name>RD_KEY4_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <description>Register 5 of BLOCK8 (KEY4).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fifth 32 bits of KEY4.</description>
            <name>KEY4_DATA5</name>
          </field>
        </fields>
        <name>RD_KEY4_DATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <description>Register 6 of BLOCK8 (KEY4).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the sixth 32 bits of KEY4.</description>
            <name>KEY4_DATA6</name>
          </field>
        </fields>
        <name>RD_KEY4_DATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <description>Register 7 of BLOCK8 (KEY4).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the seventh 32 bits of KEY4.</description>
            <name>KEY4_DATA7</name>
          </field>
        </fields>
        <name>RD_KEY4_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <description>Register 0 of BLOCK9 (KEY5).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the zeroth 32 bits of KEY5.</description>
            <name>KEY5_DATA0</name>
          </field>
        </fields>
        <name>RD_KEY5_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <description>Register 1 of BLOCK9 (KEY5).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the first 32 bits of KEY5.</description>
            <name>KEY5_DATA1</name>
          </field>
        </fields>
        <name>RD_KEY5_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <description>Register 2 of BLOCK9 (KEY5).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the second 32 bits of KEY5.</description>
            <name>KEY5_DATA2</name>
          </field>
        </fields>
        <name>RD_KEY5_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <description>Register 3 of BLOCK9 (KEY5).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the third 32 bits of KEY5.</description>
            <name>KEY5_DATA3</name>
          </field>
        </fields>
        <name>RD_KEY5_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <description>Register 4 of BLOCK9 (KEY5).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fourth 32 bits of KEY5.</description>
            <name>KEY5_DATA4</name>
          </field>
        </fields>
        <name>RD_KEY5_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x150</addressOffset>
        <description>Register 5 of BLOCK9 (KEY5).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the fifth 32 bits of KEY5.</description>
            <name>KEY5_DATA5</name>
          </field>
        </fields>
        <name>RD_KEY5_DATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x154</addressOffset>
        <description>Register 6 of BLOCK9 (KEY5).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the sixth 32 bits of KEY5.</description>
            <name>KEY5_DATA6</name>
          </field>
        </fields>
        <name>RD_KEY5_DATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x158</addressOffset>
        <description>Register 7 of BLOCK9 (KEY5).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the seventh 32 bits of KEY5.</description>
            <name>KEY5_DATA7</name>
          </field>
        </fields>
        <name>RD_KEY5_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15C</addressOffset>
        <description>Register 0 of BLOCK10 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the 0th 32 bits of the 2nd part of system data.</description>
            <name>SYS_DATA_PART2_0</name>
          </field>
        </fields>
        <name>RD_SYS_PART2_DATA0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x160</addressOffset>
        <description>Register 1 of BLOCK9 (KEY5).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the 1st 32 bits of the 2nd part of system data.</description>
            <name>SYS_DATA_PART2_1</name>
          </field>
        </fields>
        <name>RD_SYS_PART2_DATA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x164</addressOffset>
        <description>Register 2 of BLOCK10 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the 2nd 32 bits of the 2nd part of system data.</description>
            <name>SYS_DATA_PART2_2</name>
          </field>
        </fields>
        <name>RD_SYS_PART2_DATA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x168</addressOffset>
        <description>Register 3 of BLOCK10 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the 3rd 32 bits of the 2nd part of system data.</description>
            <name>SYS_DATA_PART2_3</name>
          </field>
        </fields>
        <name>RD_SYS_PART2_DATA3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16C</addressOffset>
        <description>Register 4 of BLOCK10 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the 4th 32 bits of the 2nd part of system data.</description>
            <name>SYS_DATA_PART2_4</name>
          </field>
        </fields>
        <name>RD_SYS_PART2_DATA4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x170</addressOffset>
        <description>Register 5 of BLOCK10 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the 5th 32 bits of the 2nd part of system data.</description>
            <name>SYS_DATA_PART2_5</name>
          </field>
        </fields>
        <name>RD_SYS_PART2_DATA5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x174</addressOffset>
        <description>Register 6 of BLOCK10 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the 6th 32 bits of the 2nd part of system data.</description>
            <name>SYS_DATA_PART2_6</name>
          </field>
        </fields>
        <name>RD_SYS_PART2_DATA6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x178</addressOffset>
        <description>Register 7 of BLOCK10 (system).</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Stores the 7th 32 bits of the 2nd part of system data.</description>
            <name>SYS_DATA_PART2_7</name>
          </field>
        </fields>
        <name>RD_SYS_PART2_DATA7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17C</addressOffset>
        <description>Programming error record register 0 of BLOCK0.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>If any bit in RD_DIS is 1, then it indicates a programming error.</description>
            <name>RD_DIS_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_RTC_RAM_BOOT is 1, then it indicates a programming error.</description>
            <name>DIS_RTC_RAM_BOOT_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_ICACHE is 1, then it indicates a programming error.</description>
            <name>DIS_ICACHE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_USB_JTAG is 1, then it indicates a programming error.</description>
            <name>DIS_USB_JTAG_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_DOWNLOAD_ICACHE is 1, then it indicates a programming error.</description>
            <name>DIS_DOWNLOAD_ICACHE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_USB_DEVICE is 1, then it indicates a programming error.</description>
            <name>DIS_USB_DEVICE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_FORCE_DOWNLOAD is 1, then it indicates a programming error.</description>
            <name>DIS_FORCE_DOWNLOAD_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_CAN is 1, then it indicates a programming error.</description>
            <name>DIS_CAN_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If JTAG_SEL_ENABLE is 1, then it indicates a programming error.</description>
            <name>JTAG_SEL_ENABLE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>If SOFT_DIS_JTAG is 1, then it indicates a programming error.</description>
            <name>SOFT_DIS_JTAG_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_PAD_JTAG is 1, then it indicates a programming error.</description>
            <name>DIS_PAD_JTAG_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_DOWNLOAD_MANUAL_ENCRYPT is 1, then it indicates a programming error.</description>
            <name>DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>If any bit in USB_DREFH is 1, then it indicates a programming error.</description>
            <name>USB_DREFH_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>If any bit in USB_DREFL is 1, then it indicates a programming error.</description>
            <name>USB_DREFL_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If USB_EXCHG_PINS is 1, then it indicates a programming error.</description>
            <name>USB_EXCHG_PINS_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If VDD_SPI_AS_GPIO is 1, then it indicates a programming error.</description>
            <name>VDD_SPI_AS_GPIO_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>If any bit in BTLC_GPIO_ENABLE is 1, then it indicates a programming error.</description>
            <name>BTLC_GPIO_ENABLE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If POWERGLITCH_EN is 1, then it indicates a programming error.</description>
            <name>POWERGLITCH_EN_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>If any bit in POWER_GLITCH_DSENSE is 1, then it indicates a programming error.</description>
            <name>POWER_GLITCH_DSENSE_ERR</name>
          </field>
        </fields>
        <name>RD_REPEAT_ERR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x180</addressOffset>
        <description>Programming error record register 1 of BLOCK0.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>If any bit in WDT_DELAY_SEL is 1, then it indicates a programming error.</description>
            <name>WDT_DELAY_SEL_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>If any bit in SPI_BOOT_CRYPT_CNT is 1, then it indicates a programming error.</description>
            <name>SPI_BOOT_CRYPT_CNT_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If SECURE_BOOT_KEY_REVOKE0 is 1, then it indicates a programming error.</description>
            <name>SECURE_BOOT_KEY_REVOKE0_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If SECURE_BOOT_KEY_REVOKE1 is 1, then it indicates a programming error.</description>
            <name>SECURE_BOOT_KEY_REVOKE1_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If SECURE_BOOT_KEY_REVOKE2 is 1, then it indicates a programming error.</description>
            <name>SECURE_BOOT_KEY_REVOKE2_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If any bit in KEY_PURPOSE_0 is 1, then it indicates a programming error.</description>
            <name>KEY_PURPOSE_0_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If any bit in KEY_PURPOSE_1 is 1, then it indicates a programming error.</description>
            <name>KEY_PURPOSE_1_ERR</name>
          </field>
        </fields>
        <name>RD_REPEAT_ERR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x184</addressOffset>
        <description>Programming error record register 2 of BLOCK0.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If any bit in KEY_PURPOSE_2 is 1, then it indicates a programming error.</description>
            <name>KEY_PURPOSE_2_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If any bit in KEY_PURPOSE_3 is 1, then it indicates a programming error.</description>
            <name>KEY_PURPOSE_3_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If any bit in KEY_PURPOSE_4 is 1, then it indicates a programming error.</description>
            <name>KEY_PURPOSE_4_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If any bit in KEY_PURPOSE_5 is 1, then it indicates a programming error.</description>
            <name>KEY_PURPOSE_5_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If SECURE_BOOT_EN is 1, then it indicates a programming error.</description>
            <name>SECURE_BOOT_EN_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If SECURE_BOOT_AGGRESSIVE_REVOKE is 1, then it indicates a programming error.</description>
            <name>SECURE_BOOT_AGGRESSIVE_REVOKE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If any bit in FLASH_TPUM is 1, then it indicates a programming error.</description>
            <name>FLASH_TPUW_ERR</name>
          </field>
        </fields>
        <name>RD_REPEAT_ERR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x188</addressOffset>
        <description>Programming error record register 3 of BLOCK0.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_DOWNLOAD_MODE is 1, then it indicates a programming error.</description>
            <name>DIS_DOWNLOAD_MODE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_LEGACY_SPI_BOOT is 1, then it indicates a programming error.</description>
            <name>DIS_LEGACY_SPI_BOOT_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If UART_PRINT_CHANNEL is 1, then it indicates a programming error.</description>
            <name>UART_PRINT_CHANNEL_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If FLASH_ECC_MODE is 1, then it indicates a programming error.</description>
            <name>FLASH_ECC_MODE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If DIS_USB_DOWNLOAD_MODE is 1, then it indicates a programming error.</description>
            <name>DIS_USB_DOWNLOAD_MODE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If ENABLE_SECURITY_DOWNLOAD is 1, then it indicates a programming error.</description>
            <name>ENABLE_SECURITY_DOWNLOAD_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>If any bit in UART_PRINT_CONTROL is 1, then it indicates a programming error.</description>
            <name>UART_PRINT_CONTROL_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If PIN_POWER_SELECTION is 1, then it indicates a programming error.</description>
            <name>PIN_POWER_SELECTION_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If FLASH_TYPE is 1, then it indicates a programming error.</description>
            <name>FLASH_TYPE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>If any bits in FLASH_PAGE_SIZE is 1, then it indicates a programming error.</description>
            <name>FLASH_PAGE_SIZE_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If FLASH_ECC_EN_ERR is 1, then it indicates a programming error.</description>
            <name>FLASH_ECC_EN_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If FORCE_SEND_RESUME is 1, then it indicates a programming error.</description>
            <name>FORCE_SEND_RESUME_ERR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>If any bit in SECURE_VERSION is 1, then it indicates a programming error.</description>
            <name>SECURE_VERSION_ERR</name>
          </field>
        </fields>
        <name>RD_REPEAT_ERR3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x190</addressOffset>
        <description>Programming error record register 4 of BLOCK0.</description>
        <fields></fields>
        <name>RD_REPEAT_ERR4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C0</addressOffset>
        <description>Programming error record register 0 of BLOCK1-10.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The value of this signal means the number of error bytes.</description>
            <name>MAC_SPI_8M_ERR_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Means no failure and that the data of MAC_SPI_8M is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
            <name>MAC_SPI_8M_FAIL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The value of this signal means the number of error bytes.</description>
            <name>SYS_PART1_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Means no failure and that the data of system part1 is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
            <name>SYS_PART1_FAIL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The value of this signal means the number of error bytes.</description>
            <name>USR_DATA_ERR_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Means no failure and that the user data is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
            <name>USR_DATA_FAIL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The value of this signal means the number of error bytes.</description>
            <name>KEY0_ERR_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Means no failure and that the data of key0 is reliable 1: Means that programming key0 failed and the number of error bytes is over 6.</description>
            <name>KEY0_FAIL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The value of this signal means the number of error bytes.</description>
            <name>KEY1_ERR_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Means no failure and that the data of key1 is reliable 1: Means that programming key1 failed and the number of error bytes is over 6.</description>
            <name>KEY1_FAIL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The value of this signal means the number of error bytes.</description>
            <name>KEY2_ERR_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Means no failure and that the data of key2 is reliable 1: Means that programming key2 failed and the number of error bytes is over 6.</description>
            <name>KEY2_FAIL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The value of this signal means the number of error bytes.</description>
            <name>KEY3_ERR_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Means no failure and that the data of key3 is reliable 1: Means that programming key3 failed and the number of error bytes is over 6.</description>
            <name>KEY3_FAIL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The value of this signal means the number of error bytes.</description>
            <name>KEY4_ERR_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Means no failure and that the data of key4 is reliable 1: Means that programming key4 failed and the number of error bytes is over 6.</description>
            <name>KEY4_FAIL</name>
          </field>
        </fields>
        <name>RD_RS_ERR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C4</addressOffset>
        <description>Programming error record register 1 of BLOCK1-10.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The value of this signal means the number of error bytes.</description>
            <name>KEY5_ERR_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Means no failure and that the data of KEY5 is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
            <name>KEY5_FAIL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The value of this signal means the number of error bytes.</description>
            <name>SYS_PART2_ERR_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: Means no failure and that the data of system part2 is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
            <name>SYS_PART2_FAIL</name>
          </field>
        </fields>
        <name>RD_RS_ERR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C8</addressOffset>
        <description>eFuse clcok configuration register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to force eFuse SRAM into power-saving mode.</description>
            <name>EFUSE_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit and force to activate clock signal of eFuse SRAM.</description>
            <name>MEM_CLK_FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to force eFuse SRAM into working mode.</description>
            <name>EFUSE_MEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit and force to enable clock signal of eFuse memory.</description>
            <name>EN</name>
          </field>
        </fields>
        <name>CLK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1CC</addressOffset>
        <description>eFuse operation mode configuraiton register;</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>0x5A5A: Operate programming command 0x5AA5: Operate read command.</description>
            <name>OP_CODE</name>
          </field>
        </fields>
        <name>CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D0</addressOffset>
        <description>eFuse status register.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Indicates the state of the eFuse state machine.</description>
            <name>STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The value of OTP_LOAD_SW.</description>
            <name>OTP_LOAD_SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The value of OTP_VDDQ_C_SYNC2.</description>
            <name>OTP_VDDQ_C_SYNC2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The value of OTP_STROBE_SW.</description>
            <name>OTP_STROBE_SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The value of OTP_CSB_SW.</description>
            <name>OTP_CSB_SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The value of OTP_PGENB_SW.</description>
            <name>OTP_PGENB_SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The value of OTP_VDDQ_IS_SW.</description>
            <name>OTP_VDDQ_IS_SW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Indicates the number of error bits during programming BLOCK0.</description>
            <name>REPEAT_ERR_CNT</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D4</addressOffset>
        <description>eFuse command register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send read command.</description>
            <name>READ_CMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send programming command.</description>
            <name>PGM_CMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The serial number of the block to be programmed. Value 0-10 corresponds to block number 0-10, respectively.</description>
            <name>BLK_NUM</name>
          </field>
        </fields>
        <name>CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D8</addressOffset>
        <description>eFuse raw interrupt register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit signal for read_done interrupt.</description>
            <name>READ_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit signal for pgm_done interrupt.</description>
            <name>PGM_DONE_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1DC</addressOffset>
        <description>eFuse interrupt status register.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status signal for read_done interrupt.</description>
            <name>READ_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status signal for pgm_done interrupt.</description>
            <name>PGM_DONE_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E0</addressOffset>
        <description>eFuse interrupt enable register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable signal for read_done interrupt.</description>
            <name>READ_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable signal for pgm_done interrupt.</description>
            <name>PGM_DONE_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E4</addressOffset>
        <description>eFuse interrupt clear register.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear signal for read_done interrupt.</description>
            <name>READ_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear signal for pgm_done interrupt.</description>
            <name>PGM_DONE_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E8</addressOffset>
        <description>Controls the eFuse programming voltage.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Controls the division factor of the rising clock of the programming voltage.</description>
            <name>DAC_CLK_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Don't care.</description>
            <name>DAC_CLK_PAD_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Controls the rising period of the programming voltage.</description>
            <name>DAC_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reduces the power supply of the programming voltage.</description>
            <name>OE_CLR</name>
          </field>
        </fields>
        <name>DAC_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1FE1C</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1EC</addressOffset>
        <description>Configures read timing parameters.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Configures the initial read time of eFuse.</description>
            <name>READ_INIT_NUM</name>
          </field>
        </fields>
        <name>RD_TIM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x12000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F0</addressOffset>
        <description>Configurarion register 1 of eFuse programming timing parameters.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Configures the power up time for VDDQ.</description>
            <name>PWR_ON_NUM</name>
          </field>
        </fields>
        <name>WR_TIM_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x288000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F4</addressOffset>
        <description>Configurarion register 2 of eFuse programming timing parameters.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Configures the power outage time for VDDQ.</description>
            <name>PWR_OFF_NUM</name>
          </field>
        </fields>
        <name>WR_TIM_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x190</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <description>eFuse version register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>Stores eFuse version.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x108</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x600C4000</baseAddress>
    <description>External Memory</description>
    <groupName>EXTMEM</groupName>
    <interrupts></interrupts>
    <name>EXTMEM</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to activate the data cache. 0: disable, 1: enable</description>
            <name>ICACHE_ENABLE</name>
          </field>
        </fields>
        <name>ICACHE_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to disable core0 ibus, 0: enable, 1: disable</description>
            <name>ICACHE_SHUT_IBUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to disable core1 ibus, 0: enable, 1: disable</description>
            <name>ICACHE_SHUT_DBUS</name>
          </field>
        </fields>
        <name>ICACHE_CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to close clock gating of  icache tag memory. 1: close gating, 0: open clock gating.</description>
            <name>ICACHE_TAG_MEM_FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to power  icache tag memory down, 0: follow rtc_lslp, 1: power down</description>
            <name>ICACHE_TAG_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to power  icache tag memory up, 0: follow rtc_lslp, 1: power up</description>
            <name>ICACHE_TAG_MEM_FORCE_PU</name>
          </field>
        </fields>
        <name>ICACHE_TAG_POWER_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable the first section of prelock function.</description>
            <name>ICACHE_PRELOCK_SCT0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable the second section of prelock function.</description>
            <name>ICACHE_PRELOCK_SCT1_EN</name>
          </field>
        </fields>
        <name>ICACHE_PRELOCK_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the first start virtual address of data prelock, which is combined with ICACHE_PRELOCK_SCT0_SIZE_REG</description>
            <name>ICACHE_PRELOCK_SCT0_ADDR</name>
          </field>
        </fields>
        <name>ICACHE_PRELOCK_SCT0_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the second start virtual address of data prelock, which is combined with ICACHE_PRELOCK_SCT1_SIZE_REG</description>
            <name>ICACHE_PRELOCK_SCT1_ADDR</name>
          </field>
        </fields>
        <name>ICACHE_PRELOCK_SCT1_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The bits are used to configure the second length of data locking, which is combined with ICACHE_PRELOCK_SCT1_ADDR_REG</description>
            <name>ICACHE_PRELOCK_SCT1_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The bits are used to configure the first length of data locking, which is combined with ICACHE_PRELOCK_SCT0_ADDR_REG</description>
            <name>ICACHE_PRELOCK_SCT0_SIZE</name>
          </field>
        </fields>
        <name>ICACHE_PRELOCK_SCT_SIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable lock operation. It will be cleared by hardware after lock operation done.</description>
            <name>ICACHE_LOCK_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable unlock operation. It will be cleared by hardware after unlock operation done.</description>
            <name>ICACHE_UNLOCK_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate unlock/lock operation is finished.</description>
            <name>ICACHE_LOCK_DONE</name>
          </field>
        </fields>
        <name>ICACHE_LOCK_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the start virtual address for lock operations. It should be combined with ICACHE_LOCK_SIZE_REG.</description>
            <name>ICACHE_LOCK_ADDR</name>
          </field>
        </fields>
        <name>ICACHE_LOCK_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The bits are used to configure the length for lock operations. The bits are the counts of cache block. It should be combined with ICACHE_LOCK_ADDR_REG.</description>
            <name>ICACHE_LOCK_SIZE</name>
          </field>
        </fields>
        <name>ICACHE_LOCK_SIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable invalidate operation. It will be cleared by hardware after invalidate operation done.</description>
            <name>ICACHE_INVALIDATE_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate invalidate operation is finished.</description>
            <name>ICACHE_SYNC_DONE</name>
          </field>
        </fields>
        <name>ICACHE_SYNC_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the start virtual address for clean operations. It should be combined with ICACHE_SYNC_SIZE_REG.</description>
            <name>ICACHE_SYNC_ADDR</name>
          </field>
        </fields>
        <name>ICACHE_SYNC_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x17</bitWidth>
            <description>The bits are used to configure the length for sync operations. The bits are the counts of cache block. It should be combined with ICACHE_SYNC_ADDR_REG.</description>
            <name>ICACHE_SYNC_SIZE</name>
          </field>
        </fields>
        <name>ICACHE_SYNC_SIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable preload operation. It will be cleared by hardware after preload operation done.</description>
            <name>ICACHE_PRELOAD_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate preload operation is finished.</description>
            <name>ICACHE_PRELOAD_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to configure the direction of preload operation. 1: descending, 0: ascending.</description>
            <name>ICACHE_PRELOAD_ORDER</name>
          </field>
        </fields>
        <name>ICACHE_PRELOAD_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the start virtual address for preload operation. It should be combined with ICACHE_PRELOAD_SIZE_REG.</description>
            <name>ICACHE_PRELOAD_ADDR</name>
          </field>
        </fields>
        <name>ICACHE_PRELOAD_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The bits are used to configure the length for preload operation. The bits are the counts of cache block. It should be combined with ICACHE_PRELOAD_ADDR_REG..</description>
            <name>ICACHE_PRELOAD_SIZE</name>
          </field>
        </fields>
        <name>ICACHE_PRELOAD_SIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bits are used to enable the first section for autoload operation.</description>
            <name>ICACHE_AUTOLOAD_SCT0_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bits are used to enable the second section for autoload operation.</description>
            <name>ICACHE_AUTOLOAD_SCT1_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable and disable autoload operation. It is combined with icache_autoload_done. 1: enable, 0: disable.</description>
            <name>ICACHE_AUTOLOAD_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate autoload operation is finished.</description>
            <name>ICACHE_AUTOLOAD_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bits are used to configure the direction of autoload. 1: descending, 0: ascending.</description>
            <name>ICACHE_AUTOLOAD_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The bits are used to configure trigger conditions for autoload. 0/3: cache miss, 1: cache hit, 2: both cache miss and hit.</description>
            <name>ICACHE_AUTOLOAD_RQST</name>
          </field>
        </fields>
        <name>ICACHE_AUTOLOAD_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the start virtual address of the first section for autoload operation. It should be combined with icache_autoload_sct0_ena.</description>
            <name>ICACHE_AUTOLOAD_SCT0_ADDR</name>
          </field>
        </fields>
        <name>ICACHE_AUTOLOAD_SCT0_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1B</bitWidth>
            <description>The bits are used to configure the length of the first section for autoload operation. It should be combined with icache_autoload_sct0_ena.</description>
            <name>ICACHE_AUTOLOAD_SCT0_SIZE</name>
          </field>
        </fields>
        <name>ICACHE_AUTOLOAD_SCT0_SIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the start virtual address of the second section for autoload operation. It should be combined with icache_autoload_sct1_ena.</description>
            <name>ICACHE_AUTOLOAD_SCT1_ADDR</name>
          </field>
        </fields>
        <name>ICACHE_AUTOLOAD_SCT1_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1B</bitWidth>
            <description>The bits are used to configure the length of the second section for autoload operation. It should be combined with icache_autoload_sct1_ena.</description>
            <name>ICACHE_AUTOLOAD_SCT1_SIZE</name>
          </field>
        </fields>
        <name>ICACHE_AUTOLOAD_SCT1_SIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the start virtual address of ibus to access flash. The register is used to give constraints to ibus access counter.</description>
            <name>IBUS_TO_FLASH_START_VADDR</name>
          </field>
        </fields>
        <name>IBUS_TO_FLASH_START_VADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x42000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the end virtual address of ibus to access flash. The register is used to give constraints to ibus access counter.</description>
            <name>IBUS_TO_FLASH_END_VADDR</name>
          </field>
        </fields>
        <name>IBUS_TO_FLASH_END_VADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x427FFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the start virtual address of dbus to access flash. The register is used to give constraints to dbus access counter.</description>
            <name>DBUS_TO_FLASH_START_VADDR</name>
          </field>
        </fields>
        <name>DBUS_TO_FLASH_START_VADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to configure the end virtual address of dbus to access flash. The register is used to give constraints to dbus access counter.</description>
            <name>DBUS_TO_FLASH_END_VADDR</name>
          </field>
        </fields>
        <name>DBUS_TO_FLASH_END_VADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C7FFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear ibus counter.</description>
            <name>IBUS_ACS_CNT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear dbus counter.</description>
            <name>DBUS_ACS_CNT_CLR</name>
          </field>
        </fields>
        <name>CACHE_ACS_CNT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to count the number of the cache miss caused by ibus access flash.</description>
            <name>IBUS_ACS_MISS_CNT</name>
          </field>
        </fields>
        <name>IBUS_ACS_MISS_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to count the number of ibus access flash through icache.</description>
            <name>IBUS_ACS_CNT</name>
          </field>
        </fields>
        <name>IBUS_ACS_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to count the number of the cache miss caused by dbus access flash.</description>
            <name>DBUS_ACS_FLASH_MISS_CNT</name>
          </field>
        </fields>
        <name>DBUS_ACS_FLASH_MISS_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to count the number of dbus access flash through icache.</description>
            <name>DBUS_ACS_CNT</name>
          </field>
        </fields>
        <name>DBUS_ACS_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by sync configurations fault.</description>
            <name>ICACHE_SYNC_OP_FAULT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by preload configurations fault.</description>
            <name>ICACHE_PRELOAD_OP_FAULT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by mmu entry fault.</description>
            <name>MMU_ENTRY_FAULT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by ibus counter overflow.</description>
            <name>IBUS_CNT_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by dbus counter overflow.</description>
            <name>DBUS_CNT_OVF_INT_ENA</name>
          </field>
        </fields>
        <name>CACHE_ILG_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by sync configurations fault.</description>
            <name>ICACHE_SYNC_OP_FAULT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by preload configurations fault.</description>
            <name>ICACHE_PRELOAD_OP_FAULT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by mmu entry fault.</description>
            <name>MMU_ENTRY_FAULT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by ibus counter overflow.</description>
            <name>IBUS_CNT_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by dbus counter overflow.</description>
            <name>DBUS_CNT_OVF_INT_CLR</name>
          </field>
        </fields>
        <name>CACHE_ILG_INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by sync configurations fault.</description>
            <name>ICACHE_SYNC_OP_FAULT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by preload configurations fault.</description>
            <name>ICACHE_PRELOAD_OP_FAULT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by mmu entry fault.</description>
            <name>MMU_ENTRY_FAULT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by ibus access flash/spiram counter overflow.</description>
            <name>IBUS_ACS_CNT_OVF_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by ibus access flash/spiram miss counter overflow.</description>
            <name>IBUS_ACS_MISS_CNT_OVF_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by dbus access flash/spiram counter overflow.</description>
            <name>DBUS_ACS_CNT_OVF_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by dbus access flash miss counter overflow.</description>
            <name>DBUS_ACS_FLASH_MISS_CNT_OVF_ST</name>
          </field>
        </fields>
        <name>CACHE_ILG_INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by cpu access icache while the corresponding ibus is disabled which include speculative access.</description>
            <name>CORE0_IBUS_ACS_MSK_IC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by ibus trying to write icache</description>
            <name>CORE0_IBUS_WR_IC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by authentication fail.</description>
            <name>CORE0_IBUS_REJECT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by cpu access icache while the corresponding dbus is disabled which include speculative access.</description>
            <name>CORE0_DBUS_ACS_MSK_IC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by authentication fail.</description>
            <name>CORE0_DBUS_REJECT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable interrupt by dbus trying to write icache</description>
            <name>CORE0_DBUS_WR_IC_INT_ENA</name>
          </field>
        </fields>
        <name>CORE0_ACS_CACHE_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by cpu access icache while the corresponding ibus is disabled or icache is disabled which include speculative access.</description>
            <name>CORE0_IBUS_ACS_MSK_IC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by ibus trying to write icache</description>
            <name>CORE0_IBUS_WR_IC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by authentication fail.</description>
            <name>CORE0_IBUS_REJECT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by cpu access icache while the corresponding dbus is disabled or icache is disabled which include speculative access.</description>
            <name>CORE0_DBUS_ACS_MSK_IC_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by authentication fail.</description>
            <name>CORE0_DBUS_REJECT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear interrupt by dbus trying to write icache</description>
            <name>CORE0_DBUS_WR_IC_INT_CLR</name>
          </field>
        </fields>
        <name>CORE0_ACS_CACHE_INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by cpu access  icache while the core0_ibus is disabled or icache is disabled which include speculative access.</description>
            <name>CORE0_IBUS_ACS_MSK_ICACHE_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by ibus trying to write icache</description>
            <name>CORE0_IBUS_WR_ICACHE_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by authentication fail.</description>
            <name>CORE0_IBUS_REJECT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by cpu access icache while the core0_dbus is disabled or icache is disabled which include speculative access.</description>
            <name>CORE0_DBUS_ACS_MSK_ICACHE_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by authentication fail.</description>
            <name>CORE0_DBUS_REJECT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate interrupt by dbus trying to write icache</description>
            <name>CORE0_DBUS_WR_ICACHE_ST</name>
          </field>
        </fields>
        <name>CORE0_ACS_CACHE_INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The bits are used to indicate the attribute of CPU access dbus when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
            <name>CORE0_DBUS_ATTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate the world of CPU access dbus when authentication fail. 0: WORLD0, 1: WORLD1</description>
            <name>CORE0_DBUS_WORLD</name>
          </field>
        </fields>
        <name>CORE0_DBUS_REJECT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to indicate the virtual address of CPU access dbus when authentication fail.</description>
            <name>CORE0_DBUS_VADDR</name>
          </field>
        </fields>
        <name>CORE0_DBUS_REJECT_VADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The bits are used to indicate the attribute of CPU access ibus when authentication fail. 0: invalidate, 1: execute-able, 2: read-able</description>
            <name>CORE0_IBUS_ATTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate the world of CPU access ibus when authentication fail. 0: WORLD0, 1: WORLD1</description>
            <name>CORE0_IBUS_WORLD</name>
          </field>
        </fields>
        <name>CORE0_IBUS_REJECT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to indicate the virtual address of CPU access  ibus when authentication fail.</description>
            <name>CORE0_IBUS_VADDR</name>
          </field>
        </fields>
        <name>CORE0_IBUS_REJECT_VADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The bits are used to indicate the content of mmu entry which cause mmu fault..</description>
            <name>CACHE_MMU_FAULT_CONTENT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The right-most 3 bits are used to indicate the operations which cause mmu fault occurrence. 0: default, 1: cpu miss, 2: preload miss, 3: writeback, 4: cpu miss evict recovery address, 5: load miss evict recovery address, 6: external dma tx, 7: external dma rx. The most significant bit is used to indicate this operation occurs in which one icache.</description>
            <name>CACHE_MMU_FAULT_CODE</name>
          </field>
        </fields>
        <name>CACHE_MMU_FAULT_CONTENT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The bits are used to indicate the virtual address which cause mmu fault..</description>
            <name>CACHE_MMU_FAULT_VADDR</name>
          </field>
        </fields>
        <name>CACHE_MMU_FAULT_VADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable wrap around mode when read data from flash.</description>
            <name>CACHE_FLASH_WRAP_AROUND</name>
          </field>
        </fields>
        <name>CACHE_WRAP_AROUND_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable clock gating to save power when access mmu memory, 0: enable, 1: disable</description>
            <name>CACHE_MMU_MEM_FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to power mmu memory down, 0: follow_rtc_lslp_pd, 1: power down</description>
            <name>CACHE_MMU_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to power mmu memory down, 0: follow_rtc_lslp_pd, 1: power up</description>
            <name>CACHE_MMU_MEM_FORCE_PU</name>
          </field>
        </fields>
        <name>CACHE_MMU_POWER_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>The bit is used to indicate whether  icache main fsm is in idle state or not. 1: in idle state,  0: not in idle state</description>
            <name>ICACHE_STATE</name>
          </field>
        </fields>
        <name>CACHE_STATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved.</description>
            <name>RECORD_DISABLE_DB_ENCRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved.</description>
            <name>RECORD_DISABLE_G0CB_DECRYPT</name>
          </field>
        </fields>
        <name>CACHE_ENCRYPT_DECRYPT_RECORD_DISABLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to close clock gating of manual crypt clock. 1: close gating, 0: open clock gating.</description>
            <name>CLK_FORCE_ON_MANUAL_CRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to close clock gating of automatic crypt clock. 1: close gating, 0: open clock gating.</description>
            <name>CLK_FORCE_ON_AUTO_CRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to close clock gating of external memory encrypt and decrypt clock. 1: close gating, 0: open clock gating.</description>
            <name>CLK_FORCE_ON_CRYPT</name>
          </field>
        </fields>
        <name>CACHE_ENCRYPT_DECRYPT_CLK_FORCE_ON</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate the interrupt by  icache pre-load done.</description>
            <name>ICACHE_PRELOAD_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable the interrupt by  icache pre-load done.</description>
            <name>ICACHE_PRELOAD_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear the interrupt by  icache pre-load done.</description>
            <name>ICACHE_PRELOAD_INT_CLR</name>
          </field>
        </fields>
        <name>CACHE_PRELOAD_INT_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate the interrupt by  icache sync done.</description>
            <name>ICACHE_SYNC_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable the interrupt by  icache sync done.</description>
            <name>ICACHE_SYNC_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to clear the interrupt by  icache sync done.</description>
            <name>ICACHE_SYNC_INT_CLR</name>
          </field>
        </fields>
        <name>CACHE_SYNC_INT_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The bits are used to specify the owner of MMU.bit0/bit2: ibus, bit1/bit3: dbus</description>
            <name>CACHE_MMU_OWNER</name>
          </field>
        </fields>
        <name>CACHE_MMU_OWNER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to disable checking mmu entry fault by preload operation.</description>
            <name>CACHE_IGNORE_PRELOAD_MMU_ENTRY_FAULT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to disable checking mmu entry fault by sync operation.</description>
            <name>CACHE_IGNORE_SYNC_MMU_ENTRY_FAULT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable cache trace function.</description>
            <name>CACHE_TRACE_ENA</name>
          </field>
        </fields>
        <name>CACHE_CONF_MISC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable icache freeze mode</description>
            <name>ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to configure freeze mode, 0:  assert busy if CPU miss 1: assert hit if CPU miss</description>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate icache freeze success</description>
            <name>DONE</name>
          </field>
        </fields>
        <name>ICACHE_FREEZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to activate icache atomic operation protection. In this case, sync/lock operation can not interrupt miss-work. This feature does not work during invalidateAll operation.</description>
            <name>ICACHE_ATOMIC_OPERATE_ENA</name>
          </field>
        </fields>
        <name>ICACHE_ATOMIC_OPERATE_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to disable request recording which could cause performance issue</description>
            <name>BYPASS</name>
          </field>
        </fields>
        <name>CACHE_REQUEST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to configure the ibus permission control section boundary0</description>
            <name>IBUS_PMS_LOCK</name>
          </field>
        </fields>
        <name>IBUS_PMS_TBL_LOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>The bit is used to configure the ibus permission control section boundary0</description>
            <name>IBUS_PMS_BOUNDARY0</name>
          </field>
        </fields>
        <name>IBUS_PMS_TBL_BOUNDARY0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>The bit is used to configure the ibus permission control section boundary1</description>
            <name>IBUS_PMS_BOUNDARY1</name>
          </field>
        </fields>
        <name>IBUS_PMS_TBL_BOUNDARY1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>The bit is used to configure the ibus permission control section boundary2</description>
            <name>IBUS_PMS_BOUNDARY2</name>
          </field>
        </fields>
        <name>IBUS_PMS_TBL_BOUNDARY2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The bit is used to configure attribute of the ibus permission control section1, bit0: fetch in world0, bit1: load in world0, bit2: fetch in world1, bit3: load in world1</description>
            <name>IBUS_PMS_SCT1_ATTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The bit is used to configure attribute of the ibus permission control section2, bit0: fetch in world0, bit1: load in world0, bit2: fetch in world1, bit3: load in world1</description>
            <name>IBUS_PMS_SCT2_ATTR</name>
          </field>
        </fields>
        <name>IBUS_PMS_TBL_ATTR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to configure the ibus permission control section boundary0</description>
            <name>DBUS_PMS_LOCK</name>
          </field>
        </fields>
        <name>DBUS_PMS_TBL_LOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>The bit is used to configure the dbus permission control section boundary0</description>
            <name>DBUS_PMS_BOUNDARY0</name>
          </field>
        </fields>
        <name>DBUS_PMS_TBL_BOUNDARY0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>The bit is used to configure the dbus permission control section boundary1</description>
            <name>DBUS_PMS_BOUNDARY1</name>
          </field>
        </fields>
        <name>DBUS_PMS_TBL_BOUNDARY1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>The bit is used to configure the dbus permission control section boundary2</description>
            <name>DBUS_PMS_BOUNDARY2</name>
          </field>
        </fields>
        <name>DBUS_PMS_TBL_BOUNDARY2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The bit is used to configure attribute of the dbus permission control section1, bit0: load in world0, bit2: load in world1</description>
            <name>DBUS_PMS_SCT1_ATTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The bit is used to configure attribute of the dbus permission control section2, bit0: load in world0, bit2: load in world1</description>
            <name>DBUS_PMS_SCT2_ATTR</name>
          </field>
        </fields>
        <name>DBUS_PMS_TBL_ATTR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clock gate enable.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CLOCK_GATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <description>This description will be updated in the near future.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>version information</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>REG_DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007160</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x31C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60004000</baseAddress>
    <description>General Purpose Input/Output</description>
    <groupName>GPIO</groupName>
    <interrupts>
      <interrupt>
        <name>GPIO</name>
        <value>0x10</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>GPIO_NMI</name>
        <value>0x11</value>
      </interrupt>
    </interrupts>
    <name>GPIO</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>GPIO bit select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>GPIO bit select register</description>
            <name>BT_SEL</name>
          </field>
        </fields>
        <name>BT_SELECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>GPIO output register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO output register for GPIO0-25</description>
            <name>DATA_ORIG</name>
          </field>
        </fields>
        <name>OUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>GPIO output set register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO output set register for GPIO0-25</description>
            <name>OUT_W1TS</name>
          </field>
        </fields>
        <name>OUT_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>GPIO output clear register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO output clear register for GPIO0-25</description>
            <name>OUT_W1TC</name>
          </field>
        </fields>
        <name>OUT_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>GPIO sdio select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>GPIO sdio select register</description>
            <name>SDIO_SEL</name>
          </field>
        </fields>
        <name>SDIO_SELECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>GPIO output enable register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO output enable register for GPIO0-25</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>ENABLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>GPIO output enable set register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO output enable set register for GPIO0-25</description>
            <name>ENABLE_W1TS</name>
          </field>
        </fields>
        <name>ENABLE_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>GPIO output enable clear register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO output enable clear register for GPIO0-25</description>
            <name>ENABLE_W1TC</name>
          </field>
        </fields>
        <name>ENABLE_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>pad strapping register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>pad strapping register</description>
            <name>STRAPPING</name>
          </field>
        </fields>
        <name>STRAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>GPIO input register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO input register for GPIO0-25</description>
            <name>DATA_NEXT</name>
          </field>
        </fields>
        <name>IN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>GPIO interrupt status register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO interrupt status register for GPIO0-25</description>
            <name>INTERRUPT</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>GPIO interrupt status set register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO interrupt status set register for GPIO0-25</description>
            <name>STATUS_W1TS</name>
          </field>
        </fields>
        <name>STATUS_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>GPIO interrupt status clear register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO interrupt status clear register for GPIO0-25</description>
            <name>STATUS_W1TC</name>
          </field>
        </fields>
        <name>STATUS_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>GPIO PRO_CPU interrupt status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO PRO_CPU interrupt status register for GPIO0-25</description>
            <name>PROCPU_INT</name>
          </field>
        </fields>
        <name>PCPU_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>GPIO PRO_CPU(not shielded) interrupt status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO PRO_CPU(not shielded) interrupt status register for GPIO0-25</description>
            <name>PROCPU_NMI_INT</name>
          </field>
        </fields>
        <name>PCPU_NMI_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>GPIO CPUSDIO interrupt status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO CPUSDIO interrupt status register for GPIO0-25</description>
            <name>SDIO_INT</name>
          </field>
        </fields>
        <name>CPUSDIO_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <description>GPIO interrupt source register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>GPIO interrupt source register for GPIO0-25</description>
            <name>STATUS_INTERRUPT_NEXT</name>
          </field>
        </fields>
        <name>STATUS_NEXT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x62C</addressOffset>
        <description>GPIO clock gate register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO clock gate</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CLOCK_GATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6FC</addressOffset>
        <description>GPIO version register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>version register</description>
            <name>REG_DATE</name>
          </field>
        </fields>
        <name>REG_DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2006130</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN3</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN4</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN5</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN6</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN7</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN8</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN9</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN10</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN11</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN12</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN13</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN14</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN15</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN16</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN17</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN18</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN19</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN20</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN21</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN22</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN23</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN24</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <description>GPIO pin configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC2_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select pad driver. 1:open-drain. :normal.</description>
            <name>PIN_PAD_DRIVER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
            <name>PIN_SYNC1_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
            <name>PIN_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
            <name>PIN_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reserved</description>
            <name>PIN_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
            <name>PIN_INT_ENA</name>
          </field>
        </fields>
        <name>PIN25</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x154</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC0_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x158</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC1_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC2_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x160</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC3_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x164</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC4_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x168</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC5_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC6_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x170</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC7_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x174</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC8_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x178</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC9_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC10_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x180</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC11_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x184</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC12_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x188</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC13_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC14_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x190</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC15_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x194</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC16_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x198</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC17_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x19C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC18_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC19_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC20_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1A8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC21_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1AC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC22_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC23_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC24_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1B8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC25_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1BC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC26_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC27_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC28_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC29_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1CC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC30_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC31_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC32_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1D8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC33_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1DC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC34_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC35_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC36_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1E8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC37_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1EC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC38_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC39_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC40_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1F8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC41_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC42_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x200</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC43_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x204</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC44_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x208</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC45_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC46_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x210</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC47_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x214</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC48_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x218</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC49_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x21C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC50_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x220</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC51_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x224</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC52_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x228</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC53_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x22C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC54_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x230</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC55_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x234</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC56_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x238</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC57_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x23C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC58_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x240</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC59_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x244</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC60_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x248</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC61_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC62_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x250</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC63_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x254</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC64_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x258</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC65_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x25C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC66_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x260</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC67_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x264</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC68_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x268</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC69_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x26C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC70_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x270</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC71_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x274</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC72_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x278</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC73_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x27C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC74_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x280</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC75_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x284</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC76_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x288</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC77_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC78_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x290</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC79_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x294</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC80_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x298</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC81_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x29C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC82_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC83_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC84_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2A8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC85_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2AC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC86_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC87_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC88_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2B8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC89_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2BC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC90_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC91_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC92_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC93_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2CC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC94_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC95_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC96_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2D8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC97_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2DC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC98_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC99_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC100_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2E8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC101_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2EC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC102_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F0</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC103_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F4</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC104_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2F8</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC105_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2FC</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC106_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x300</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC107_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x304</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC108_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x308</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC109_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC110_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x310</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC111_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x314</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC112_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x318</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC113_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x31C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC114_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x320</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC115_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x324</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC116_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x328</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC117_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x32C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC118_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x330</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC119_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x334</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC120_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x338</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC121_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x33C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC122_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x340</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC123_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x344</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC124_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x348</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC125_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34C</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC126_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x350</addressOffset>
        <description>GPIO input function configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level.</description>
            <name>FUNC_IN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert input signal. 1:invert. :not invert.</description>
            <name>FUNC_IN_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO.</description>
            <name>SIG_IN_SEL</name>
          </field>
        </fields>
        <name>FUNC127_IN_SEL_CFG</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x554</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC0_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x558</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC1_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55C</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC2_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x560</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC3_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x564</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC4_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x568</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC5_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56C</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC6_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x570</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC7_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x574</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC8_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x578</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC9_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57C</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC10_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x580</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC11_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x584</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC12_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x588</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC13_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58C</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC14_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x590</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC15_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x594</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC16_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x598</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC17_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59C</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC18_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A0</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC19_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A4</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC20_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A8</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC21_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5AC</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC22_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B0</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC23_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B4</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC24_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B8</addressOffset>
        <description>GPIO output function select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The value of the bits: &lt;=s&lt;=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
            <name>FUNC_OUT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output signal.1:invert.:not invert.</description>
            <name>FUNC_OUT_INV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal.</description>
            <name>FUNC_OEN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to invert output enable signal.1:invert.:not invert.</description>
            <name>FUNC_OEN_INV_SEL</name>
          </field>
        </fields>
        <name>FUNC25_OUT_SEL_CFG</name>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x1C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60004F00</baseAddress>
    <description>Sigma-Delta Modulation</description>
    <groupName>GPIOSD</groupName>
    <interrupts></interrupts>
    <name>GPIOSD</name>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>Clock Gating Configure Register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clock enable bit of configuration registers for sigma delta modulation.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>SIGMADELTA_CG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>MISC Register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clock enable bit of sigma delta modulation.</description>
            <name>FUNCTION_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved.</description>
            <name>SPI_SWAP</name>
          </field>
        </fields>
        <name>SIGMADELTA_MISC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>Version Control Register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>Version control register.</description>
            <name>GPIO_SD_DATE</name>
          </field>
        </fields>
        <name>SIGMADELTA_VERSION</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2006230</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>Duty Cycle Configure Register of SDM%s</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This field is used to configure the duty cycle of sigma delta modulation output.</description>
            <name>SD0_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This field is used to set a divider value to divide APB clock.</description>
            <name>SD0_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA0</name>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>Duty Cycle Configure Register of SDM%s</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This field is used to configure the duty cycle of sigma delta modulation output.</description>
            <name>SD0_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This field is used to set a divider value to divide APB clock.</description>
            <name>SD0_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA1</name>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>Duty Cycle Configure Register of SDM%s</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This field is used to configure the duty cycle of sigma delta modulation output.</description>
            <name>SD0_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This field is used to set a divider value to divide APB clock.</description>
            <name>SD0_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA2</name>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>Duty Cycle Configure Register of SDM%s</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This field is used to configure the duty cycle of sigma delta modulation output.</description>
            <name>SD0_IN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This field is used to set a divider value to divide APB clock.</description>
            <name>SD0_PRESCALE</name>
          </field>
        </fields>
        <name>SIGMADELTA3</name>
        <resetValue>0xFF00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xA0</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x6003E000</baseAddress>
    <description>HMAC (Hash-based Message Authentication Code) Accelerator</description>
    <groupName>HMAC</groupName>
    <interrupts></interrupts>
    <name>HMAC</name>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>Process control register 0.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start hmac operation.</description>
            <name>SET_START</name>
          </field>
        </fields>
        <name>SET_START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>Configure purpose.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Set hmac parameter purpose.</description>
            <name>PURPOSE_SET</name>
          </field>
        </fields>
        <name>SET_PARA_PURPOSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>Configure key.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Set hmac parameter key.</description>
            <name>KEY_SET</name>
          </field>
        </fields>
        <name>SET_PARA_KEY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>Finish initial configuration.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Finish hmac configuration.</description>
            <name>SET_PARA_END</name>
          </field>
        </fields>
        <name>SET_PARA_FINISH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>Process control register 1.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Call SHA to calculate one message block.</description>
            <name>SET_TEXT_ONE</name>
          </field>
        </fields>
        <name>SET_MESSAGE_ONE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>Process control register 2.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Continue typical hmac.</description>
            <name>SET_TEXT_ING</name>
          </field>
        </fields>
        <name>SET_MESSAGE_ING</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>Process control register 3.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start hardware padding.</description>
            <name>SET_TEXT_END</name>
          </field>
        </fields>
        <name>SET_MESSAGE_END</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>Process control register 4.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>After read result from upstream, then let hmac back to idle.</description>
            <name>SET_RESULT_END</name>
          </field>
        </fields>
        <name>SET_RESULT_FINISH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>Invalidate register 0.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear result from hmac downstream JTAG.</description>
            <name>SET_INVALIDATE_JTAG</name>
          </field>
        </fields>
        <name>SET_INVALIDATE_JTAG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>Invalidate register 1.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear result from hmac downstream DS.</description>
            <name>SET_INVALIDATE_DS</name>
          </field>
        </fields>
        <name>SET_INVALIDATE_DS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>Error register.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hmac configuration state. 0: key are agree with purpose. 1: error</description>
            <name>QUREY_CHECK</name>
          </field>
        </fields>
        <name>QUERY_ERROR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>Busy register.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hmac state. 1'b0: idle. 1'b1: busy</description>
            <name>BUSY_STATE</name>
          </field>
        </fields>
        <name>QUERY_BUSY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <description>Process control register 5.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start software padding.</description>
            <name>SET_TEXT_PAD</name>
          </field>
        </fields>
        <name>SET_MESSAGE_PAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <description>Process control register 6.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Don't have to do padding.</description>
            <name>SET_ONE_BLOCK</name>
          </field>
        </fields>
        <name>ONE_BLOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>Jtag register 0.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Turn on JTAG verification.</description>
            <name>SOFT_JTAG_CTRL</name>
          </field>
        </fields>
        <name>SOFT_JTAG_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>Jtag register 1.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>32-bit of key to be compared.</description>
            <name>WR_JTAG</name>
          </field>
        </fields>
        <name>WR_JTAG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x83</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x85</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x86</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x87</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x89</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[16]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x91</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[17]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x92</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[18]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x93</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[19]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[20]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x95</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[21]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x96</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[22]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x97</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[23]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[24]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x99</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[25]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[26]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[27]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[28]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[29]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[30]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[31]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[32]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA1</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[33]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA2</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[34]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA3</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[35]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[36]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA5</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[37]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA6</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[38]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA7</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[39]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[40]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA9</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[41]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[42]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[43]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[44]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[45]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[46]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[47]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[48]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB1</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[49]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB2</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[50]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB3</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[51]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[52]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB5</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[53]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB6</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[54]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB7</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[55]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[56]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB9</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[57]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[58]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[59]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[60]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[61]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[62]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF</addressOffset>
        <description>Message block memory.</description>
        <fields></fields>
        <name>WR_MESSAGE_MEM[63]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC1</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC2</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC3</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC5</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC6</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC7</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC9</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCA</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCB</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCD</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCE</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCF</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[16]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD1</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[17]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD2</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[18]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD3</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[19]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[20]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD5</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[21]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD6</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[22]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD7</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[23]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[24]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD9</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[25]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDA</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[26]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDB</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[27]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[28]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDD</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[29]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDE</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[30]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDF</addressOffset>
        <description>Result from upstream.</description>
        <fields></fields>
        <name>RD_RESULT_MEM[31]</name>
        <size>0x8</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x90</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60013000</baseAddress>
    <description>I2C (Inter-Integrated Circuit) Controller</description>
    <groupName>I2C</groupName>
    <interrupts>
      <interrupt>
        <name>I2C_MASTER</name>
        <value>0xB</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>I2C_EXT0</name>
        <value>0x1D</value>
      </interrupt>
    </interrupts>
    <name>I2C</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>I2C_SCL_LOW_PERIOD_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_scl_low_period</description>
            <name>SCL_LOW_PERIOD</name>
          </field>
        </fields>
        <name>SCL_LOW_PERIOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>I2C_CTR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sda_force_out</description>
            <name>SDA_FORCE_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_force_out</description>
            <name>SCL_FORCE_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sample_scl_level</description>
            <name>SAMPLE_SCL_LEVEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rx_full_ack_level</description>
            <name>RX_FULL_ACK_LEVEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ms_mode</description>
            <name>MS_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_trans_start</description>
            <name>TRANS_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tx_lsb_first</description>
            <name>TX_LSB_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rx_lsb_first</description>
            <name>RX_LSB_FIRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_en</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_arbitration_en</description>
            <name>ARBITRATION_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_fsm_rst</description>
            <name>FSM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_conf_upgate</description>
            <name>CONF_UPGATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slv_tx_auto_start_en</description>
            <name>SLV_TX_AUTO_START_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_addr_10bit_rw_check_en</description>
            <name>ADDR_10BIT_RW_CHECK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_addr_broadcasting_en</description>
            <name>ADDR_BROADCASTING_EN</name>
          </field>
        </fields>
        <name>CTR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20B</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>I2C_SR_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_resp_rec</description>
            <name>RESP_REC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slave_rw</description>
            <name>SLAVE_RW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_arb_lost</description>
            <name>ARB_LOST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_bus_busy</description>
            <name>BUS_BUSY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slave_addressed</description>
            <name>SLAVE_ADDRESSED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>reg_rxfifo_cnt</description>
            <name>RXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_stretch_cause</description>
            <name>STRETCH_CAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>reg_txfifo_cnt</description>
            <name>TXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_scl_main_state_last</description>
            <name>SCL_MAIN_STATE_LAST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_scl_state_last</description>
            <name>SCL_STATE_LAST</name>
          </field>
        </fields>
        <name>SR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>I2C_TO_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_time_out_value</description>
            <name>TIME_OUT_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_time_out_en</description>
            <name>TIME_OUT_EN</name>
          </field>
        </fields>
        <name>TO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>I2C_SLAVE_ADDR_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xF</bitWidth>
            <description>reg_slave_addr</description>
            <name>SLAVE_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_addr_10bit_en</description>
            <name>ADDR_10BIT_EN</name>
          </field>
        </fields>
        <name>SLAVE_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>I2C_FIFO_ST_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_rxfifo_raddr</description>
            <name>RXFIFO_RADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_rxfifo_waddr</description>
            <name>RXFIFO_WADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_txfifo_raddr</description>
            <name>TXFIFO_RADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_txfifo_waddr</description>
            <name>TXFIFO_WADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_slave_rw_point</description>
            <name>SLAVE_RW_POINT</name>
          </field>
        </fields>
        <name>FIFO_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>I2C_FIFO_CONF_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_rxfifo_wm_thrhd</description>
            <name>RXFIFO_WM_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_txfifo_wm_thrhd</description>
            <name>TXFIFO_WM_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_nonfifo_en</description>
            <name>NONFIFO_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_fifo_addr_cfg_en</description>
            <name>FIFO_ADDR_CFG_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rx_fifo_rst</description>
            <name>RX_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tx_fifo_rst</description>
            <name>TX_FIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_fifo_prt_en</description>
            <name>FIFO_PRT_EN</name>
          </field>
        </fields>
        <name>FIFO_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x408B</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>I2C_FIFO_DATA_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_fifo_rdata</description>
            <name>FIFO_RDATA</name>
          </field>
        </fields>
        <name>FIFO_DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>I2C_INT_RAW_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_wm_int_raw</description>
            <name>RXFIFO_WM_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_txfifo_wm_int_raw</description>
            <name>TXFIFO_WM_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_ovf_int_raw</description>
            <name>RXFIFO_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_end_detect_int_raw</description>
            <name>END_DETECT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_byte_trans_done_int_raw</description>
            <name>BYTE_TRANS_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_arbitration_lost_int_raw</description>
            <name>ARBITRATION_LOST_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mst_txfifo_udf_int_raw</description>
            <name>MST_TXFIFO_UDF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_trans_complete_int_raw</description>
            <name>TRANS_COMPLETE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_time_out_int_raw</description>
            <name>TIME_OUT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_trans_start_int_raw</description>
            <name>TRANS_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_nack_int_raw</description>
            <name>NACK_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_txfifo_ovf_int_raw</description>
            <name>TXFIFO_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_udf_int_raw</description>
            <name>RXFIFO_UDF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_st_to_int_raw</description>
            <name>SCL_ST_TO_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_main_st_to_int_raw</description>
            <name>SCL_MAIN_ST_TO_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_det_start_int_raw</description>
            <name>DET_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slave_stretch_int_raw</description>
            <name>SLAVE_STRETCH_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_general_call_int_raw</description>
            <name>GENERAL_CALL_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>I2C_INT_CLR_REG</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_wm_int_clr</description>
            <name>RXFIFO_WM_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_txfifo_wm_int_clr</description>
            <name>TXFIFO_WM_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_ovf_int_clr</description>
            <name>RXFIFO_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_end_detect_int_clr</description>
            <name>END_DETECT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_byte_trans_done_int_clr</description>
            <name>BYTE_TRANS_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_arbitration_lost_int_clr</description>
            <name>ARBITRATION_LOST_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mst_txfifo_udf_int_clr</description>
            <name>MST_TXFIFO_UDF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_trans_complete_int_clr</description>
            <name>TRANS_COMPLETE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_time_out_int_clr</description>
            <name>TIME_OUT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_trans_start_int_clr</description>
            <name>TRANS_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_nack_int_clr</description>
            <name>NACK_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_txfifo_ovf_int_clr</description>
            <name>TXFIFO_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_udf_int_clr</description>
            <name>RXFIFO_UDF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_st_to_int_clr</description>
            <name>SCL_ST_TO_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_main_st_to_int_clr</description>
            <name>SCL_MAIN_ST_TO_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_det_start_int_clr</description>
            <name>DET_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slave_stretch_int_clr</description>
            <name>SLAVE_STRETCH_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_general_call_int_clr</description>
            <name>GENERAL_CALL_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>I2C_INT_ENA_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_wm_int_ena</description>
            <name>RXFIFO_WM_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_txfifo_wm_int_ena</description>
            <name>TXFIFO_WM_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_ovf_int_ena</description>
            <name>RXFIFO_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_end_detect_int_ena</description>
            <name>END_DETECT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_byte_trans_done_int_ena</description>
            <name>BYTE_TRANS_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_arbitration_lost_int_ena</description>
            <name>ARBITRATION_LOST_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mst_txfifo_udf_int_ena</description>
            <name>MST_TXFIFO_UDF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_trans_complete_int_ena</description>
            <name>TRANS_COMPLETE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_time_out_int_ena</description>
            <name>TIME_OUT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_trans_start_int_ena</description>
            <name>TRANS_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_nack_int_ena</description>
            <name>NACK_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_txfifo_ovf_int_ena</description>
            <name>TXFIFO_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_udf_int_ena</description>
            <name>RXFIFO_UDF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_st_to_int_ena</description>
            <name>SCL_ST_TO_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_main_st_to_int_ena</description>
            <name>SCL_MAIN_ST_TO_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_det_start_int_ena</description>
            <name>DET_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slave_stretch_int_ena</description>
            <name>SLAVE_STRETCH_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_general_call_int_ena</description>
            <name>GENERAL_CALL_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>I2C_INT_STATUS_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_wm_int_st</description>
            <name>RXFIFO_WM_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_txfifo_wm_int_st</description>
            <name>TXFIFO_WM_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_ovf_int_st</description>
            <name>RXFIFO_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_end_detect_int_st</description>
            <name>END_DETECT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_byte_trans_done_int_st</description>
            <name>BYTE_TRANS_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_arbitration_lost_int_st</description>
            <name>ARBITRATION_LOST_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mst_txfifo_udf_int_st</description>
            <name>MST_TXFIFO_UDF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_trans_complete_int_st</description>
            <name>TRANS_COMPLETE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_time_out_int_st</description>
            <name>TIME_OUT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_trans_start_int_st</description>
            <name>TRANS_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_nack_int_st</description>
            <name>NACK_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_txfifo_ovf_int_st</description>
            <name>TXFIFO_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rxfifo_udf_int_st</description>
            <name>RXFIFO_UDF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_st_to_int_st</description>
            <name>SCL_ST_TO_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_main_st_to_int_st</description>
            <name>SCL_MAIN_ST_TO_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_det_start_int_st</description>
            <name>DET_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slave_stretch_int_st</description>
            <name>SLAVE_STRETCH_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_general_call_int_st</description>
            <name>GENERAL_CALL_INT_ST</name>
          </field>
        </fields>
        <name>INT_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>I2C_SDA_HOLD_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_sda_hold_time</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SDA_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>I2C_SDA_SAMPLE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_sda_sample_time</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SDA_SAMPLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>I2C_SCL_HIGH_PERIOD_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_scl_high_period</description>
            <name>SCL_HIGH_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>reg_scl_wait_high_period</description>
            <name>SCL_WAIT_HIGH_PERIOD</name>
          </field>
        </fields>
        <name>SCL_HIGH_PERIOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>I2C_SCL_START_HOLD_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_scl_start_hold_time</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_START_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>I2C_SCL_RSTART_SETUP_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_scl_rstart_setup_time</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_RSTART_SETUP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>I2C_SCL_STOP_HOLD_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_scl_stop_hold_time</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_STOP_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>I2C_SCL_STOP_SETUP_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_scl_stop_setup_time</description>
            <name>TIME</name>
          </field>
        </fields>
        <name>SCL_STOP_SETUP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>I2C_FILTER_CFG_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_scl_filter_thres</description>
            <name>SCL_FILTER_THRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_sda_filter_thres</description>
            <name>SDA_FILTER_THRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_filter_en</description>
            <name>SCL_FILTER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sda_filter_en</description>
            <name>SDA_FILTER_EN</name>
          </field>
        </fields>
        <name>FILTER_CFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x300</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>I2C_CLK_CONF_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_sclk_div_num</description>
            <name>SCLK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>reg_sclk_div_a</description>
            <name>SCLK_DIV_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>reg_sclk_div_b</description>
            <name>SCLK_DIV_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sclk_sel</description>
            <name>SCLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sclk_active</description>
            <name>SCLK_ACTIVE</name>
          </field>
        </fields>
        <name>CLK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>I2C_SCL_ST_TIME_OUT_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_scl_st_to_regno more than 23</description>
            <name>SCL_ST_TO_I2C</name>
          </field>
        </fields>
        <name>SCL_ST_TIME_OUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>I2C_SCL_MAIN_ST_TIME_OUT_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_scl_main_st_to_regno more than 23</description>
            <name>SCL_MAIN_ST_TO_I2C</name>
          </field>
        </fields>
        <name>SCL_MAIN_ST_TIME_OUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>I2C_SCL_SP_CONF_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_rst_slv_en</description>
            <name>SCL_RST_SLV_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_scl_rst_slv_num</description>
            <name>SCL_RST_SLV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_scl_pd_en</description>
            <name>SCL_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sda_pd_en</description>
            <name>SDA_PD_EN</name>
          </field>
        </fields>
        <name>SCL_SP_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>I2C_SCL_STRETCH_CONF_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_stretch_protect_num</description>
            <name>STRETCH_PROTECT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slave_scl_stretch_en</description>
            <name>SLAVE_SCL_STRETCH_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slave_scl_stretch_clr</description>
            <name>SLAVE_SCL_STRETCH_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slave_byte_ack_ctl_en</description>
            <name>SLAVE_BYTE_ACK_CTL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_slave_byte_ack_lvl</description>
            <name>SLAVE_BYTE_ACK_LVL</name>
          </field>
        </fields>
        <name>SCL_STRETCH_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>I2C_DATE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_date</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20070201</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <description>I2C_TXFIFO_START_ADDR_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_txfifo_start_addr.</description>
            <name>TXFIFO_START_ADDR</name>
          </field>
        </fields>
        <name>TXFIFO_START_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x180</addressOffset>
        <description>I2C_RXFIFO_START_ADDR_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_rxfifo_start_addr.</description>
            <name>RXFIFO_START_ADDR</name>
          </field>
        </fields>
        <name>RXFIFO_START_ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>I2C_COMD%s_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_command</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_command_done</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD0</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>I2C_COMD%s_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_command</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_command_done</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD1</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>I2C_COMD%s_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_command</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_command_done</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD2</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>I2C_COMD%s_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_command</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_command_done</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD3</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>I2C_COMD%s_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_command</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_command_done</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD4</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>I2C_COMD%s_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_command</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_command_done</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD5</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>I2C_COMD%s_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_command</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_command_done</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD6</name>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>I2C_COMD%s_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_command</description>
            <name>COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_command_done</description>
            <name>COMMAND_DONE</name>
          </field>
        </fields>
        <name>COMD7</name>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x5C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x6004B000</baseAddress>
    <description>I2S (Inter-IC Sound) Controller</description>
    <groupName>I2S</groupName>
    <interrupts>
      <interrupt>
        <name>I2S1</name>
        <value>0x14</value>
      </interrupt>
    </interrupts>
    <name>I2S</name>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>I2S interrupt raw register, valid in level.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit  for the i2s_rx_done_int interrupt</description>
            <name>RX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit  for the i2s_tx_done_int interrupt</description>
            <name>TX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit  for the i2s_rx_hung_int interrupt</description>
            <name>RX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit  for the i2s_tx_hung_int interrupt</description>
            <name>TX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>I2S interrupt status register.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status bit  for the i2s_rx_done_int interrupt</description>
            <name>RX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status bit  for the i2s_tx_done_int interrupt</description>
            <name>TX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status bit  for the i2s_rx_hung_int interrupt</description>
            <name>RX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The masked interrupt status bit  for the i2s_tx_hung_int interrupt</description>
            <name>TX_HUNG_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>I2S interrupt enable register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit  for the i2s_rx_done_int interrupt</description>
            <name>RX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit  for the i2s_tx_done_int interrupt</description>
            <name>TX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit  for the i2s_rx_hung_int interrupt</description>
            <name>RX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit  for the i2s_tx_hung_int interrupt</description>
            <name>TX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>I2S interrupt clear register.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the i2s_rx_done_int interrupt</description>
            <name>RX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the i2s_tx_done_int interrupt</description>
            <name>TX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the i2s_rx_hung_int interrupt</description>
            <name>RX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the i2s_tx_hung_int interrupt</description>
            <name>TX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>I2S RX configure register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset receiver</description>
            <name>RX_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset Rx AFIFO</description>
            <name>RX_FIFO_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start receiving data</description>
            <name>RX_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable slave receiver mode</description>
            <name>RX_SLAVE_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable receiver  in mono mode</description>
            <name>RX_MONO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S Rx byte endian, 1: low addr value to high addr. 0: low addr with low addr value.</description>
            <name>RX_BIG_ENDIAN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set 1 to update I2S RX registers from APB clock domain to I2S RX clock domain. This bit will be cleared by hardware after update register done.</description>
            <name>RX_UPDATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: The first channel data value is valid in I2S RX mono mode.   0: The second channel data value is valid in I2S RX mono mode.</description>
            <name>RX_MONO_FST_VLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>I2S RX compress/decompress configuration bit. &amp; 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &amp;</description>
            <name>RX_PCM_CONF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to bypass Compress/Decompress module for received data.</description>
            <name>RX_PCM_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>0  : I2S Rx only stop when reg_rx_start is cleared.   1: Stop when reg_rx_start is 0 or in_suc_eof is 1.   2:  Stop I2S RX when reg_rx_start is 0 or RX FIFO is full.</description>
            <name>RX_STOP_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: I2S RX left alignment mode. 0: I2S RX right alignment mode.</description>
            <name>RX_LEFT_ALIGN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: store 24 channel bits to 32 bits. 0:store 24 channel bits to 24 bits.</description>
            <name>RX_24_FILL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: WS should be 0 when receiving left channel data, and WS is 1in right channel.  1: WS should be 1 when receiving left channel data, and WS is 0in right channel.</description>
            <name>RX_WS_IDLE_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S Rx bit endian. 1:small endian, the LSB is received first. 0:big endian, the MSB is received first.</description>
            <name>RX_BIT_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable I2S TDM Rx mode . 0: Disable.</description>
            <name>RX_TDM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable I2S PDM Rx mode . 0: Disable.</description>
            <name>RX_PDM_EN</name>
          </field>
        </fields>
        <name>RX_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x9600</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>I2S TX configure register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset transmitter</description>
            <name>TX_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset Tx AFIFO</description>
            <name>TX_FIFO_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start transmitting data</description>
            <name>TX_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable slave transmitter mode</description>
            <name>TX_SLAVE_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable transmitter in mono mode</description>
            <name>TX_MONO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: The value of Left channel data is equal to the value of right channel data in I2S TX mono mode or TDM channel select mode. 0: The invalid channel data is reg_i2s_single_data in I2S TX mono mode or TDM channel select mode.</description>
            <name>TX_CHAN_EQUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S Tx byte endian, 1: low addr value to high addr.  0: low addr with low addr value.</description>
            <name>TX_BIG_ENDIAN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set 1 to update I2S TX registers from APB clock domain to I2S TX clock domain. This bit will be cleared by hardware after update register done.</description>
            <name>TX_UPDATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: The first channel data value is valid in I2S TX mono mode.   0: The second channel data value is valid in I2S TX mono mode.</description>
            <name>TX_MONO_FST_VLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>I2S TX compress/decompress configuration bit. &amp; 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &amp;</description>
            <name>TX_PCM_CONF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to bypass  Compress/Decompress module for transmitted data.</description>
            <name>TX_PCM_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop disable output BCK signal and WS signal when tx FIFO is emtpy</description>
            <name>TX_STOP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: I2S TX left alignment mode. 0: I2S TX right alignment mode.</description>
            <name>TX_LEFT_ALIGN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Sent 32 bits in 24 channel bits mode. 0: Sent 24 bits in 24 channel bits mode</description>
            <name>TX_24_FILL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: WS should be 0 when sending left channel data, and WS is 1in right channel.  1: WS should be 1 when sending left channel data, and WS is 0in right channel.</description>
            <name>TX_WS_IDLE_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S Tx bit endian. 1:small endian, the LSB is sent first. 0:big endian, the MSB is sent first.</description>
            <name>TX_BIT_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable I2S TDM Tx mode . 0: Disable.</description>
            <name>TX_TDM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable I2S PDM Tx mode . 0: Disable.</description>
            <name>TX_PDM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>I2S transmitter channel mode configuration bits.</description>
            <name>TX_CHAN_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable signal loop back mode with transmitter module and receiver module sharing the same WS and BCK signals.</description>
            <name>SIG_LOOPBACK</name>
          </field>
        </fields>
        <name>TX_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xB200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>I2S RX configure register 1</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>The width of rx_ws_out in TDM mode is (I2S_RX_TDM_WS_WIDTH[6:0] +1) * T_bck</description>
            <name>RX_TDM_WS_WIDTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Bit clock configuration bits in receiver mode.</description>
            <name>RX_BCK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Set the bits to configure the valid data bit length of I2S receiver channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode.</description>
            <name>RX_BITS_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>I2S Rx half sample bits -1.</description>
            <name>RX_HALF_SAMPLE_BITS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>The Rx bit number for each channel minus 1in TDM mode.</description>
            <name>RX_TDM_CHAN_BITS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable receiver in Phillips standard mode</description>
            <name>RX_MSB_SHIFT</name>
          </field>
        </fields>
        <name>RX_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2F3DE300</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>I2S TX configure register 1</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>The width of tx_ws_out in TDM mode is (I2S_TX_TDM_WS_WIDTH[6:0] +1) * T_bck</description>
            <name>TX_TDM_WS_WIDTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Bit clock configuration bits in transmitter mode.</description>
            <name>TX_BCK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Set the bits to configure the valid data bit length of I2S transmitter channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode.</description>
            <name>TX_BITS_MOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>I2S Tx half sample bits -1.</description>
            <name>TX_HALF_SAMPLE_BITS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>The Tx bit number for each channel minus 1in TDM mode.</description>
            <name>TX_TDM_CHAN_BITS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable transmitter in Phillips standard mode</description>
            <name>TX_MSB_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: BCK is not delayed to generate pos/neg edge in master mode. 0: BCK is delayed to generate pos/neg edge in master mode.</description>
            <name>TX_BCK_NO_DLY</name>
          </field>
        </fields>
        <name>TX_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6F3DE300</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>I2S RX clock configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Integral I2S clock divider value</description>
            <name>RX_CLKM_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S Rx module clock enable signal.</description>
            <name>RX_CLK_ACTIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select I2S Rx module source clock. 0: no clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.</description>
            <name>RX_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: UseI2S Tx module clock as I2S_MCLK_OUT.  1: UseI2S Rx module clock as I2S_MCLK_OUT.</description>
            <name>MCLK_SEL</name>
          </field>
        </fields>
        <name>RX_CLKM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>I2S TX clock configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Integral I2S TX clock divider value. f_I2S_CLK = f_I2S_CLK_S/(N+b/a). There will be (a-b) * n-div and b * (n+1)-div.  So the average combination will be:  for b &lt;= a/2, z * [x * n-div + (n+1)-div] + y * n-div. For b &gt; a/2, z * [n-div + x * (n+1)-div] + y * (n+1)-div.</description>
            <name>TX_CLKM_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S Tx module clock enable signal.</description>
            <name>TX_CLK_ACTIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select I2S Tx module source clock. 0: XTAL clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.</description>
            <name>TX_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable clk gate</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>TX_CLKM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>I2S RX module clock divider configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_Z is b. For b &gt; a/2, the value of I2S_RX_CLKM_DIV_Z is (a-b).</description>
            <name>RX_CLKM_DIV_Z</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_Y is (a%b) . For b &gt; a/2, the value of I2S_RX_CLKM_DIV_Y is (a%(a-b)).</description>
            <name>RX_CLKM_DIV_Y</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_X is (a/b) - 1. For b &gt; a/2, the value of I2S_RX_CLKM_DIV_X is (a/(a-b)) - 1.</description>
            <name>RX_CLKM_DIV_X</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_YN1 is 0 . For b &gt; a/2, the value of I2S_RX_CLKM_DIV_YN1 is 1.</description>
            <name>RX_CLKM_DIV_YN1</name>
          </field>
        </fields>
        <name>RX_CLKM_DIV_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>I2S TX module clock divider configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_Z is b. For b &gt; a/2, the value of I2S_TX_CLKM_DIV_Z is (a-b).</description>
            <name>TX_CLKM_DIV_Z</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_Y is (a%b) . For b &gt; a/2, the value of I2S_TX_CLKM_DIV_Y is (a%(a-b)).</description>
            <name>TX_CLKM_DIV_Y</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_X is (a/b) - 1. For b &gt; a/2, the value of I2S_TX_CLKM_DIV_X is (a/(a-b)) - 1.</description>
            <name>TX_CLKM_DIV_X</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_YN1 is 0 . For b &gt; a/2, the value of I2S_TX_CLKM_DIV_YN1 is 1.</description>
            <name>TX_CLKM_DIV_YN1</name>
          </field>
        </fields>
        <name>TX_CLKM_DIV_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>I2S TX PCM2PDM configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S TX PDM bypass hp filter or not. The option has been removed.</description>
            <name>TX_PDM_HP_BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>I2S TX PDM OSR2 value</description>
            <name>TX_PDM_SINC_OSR2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>I2S TX PDM prescale for sigmadelta</description>
            <name>TX_PDM_PRESCALE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
            <name>TX_PDM_HP_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
            <name>TX_PDM_LP_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
            <name>TX_PDM_SINC_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
            <name>TX_PDM_SIGMADELTA_IN_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S TX PDM sigmadelta dither2 value</description>
            <name>TX_PDM_SIGMADELTA_DITHER2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S TX PDM sigmadelta dither value</description>
            <name>TX_PDM_SIGMADELTA_DITHER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S TX PDM dac mode enable</description>
            <name>TX_PDM_DAC_2OUT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S TX PDM dac 2channel enable</description>
            <name>TX_PDM_DAC_MODE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2S TX PDM Converter enable</description>
            <name>PCM2PDM_CONV_EN</name>
          </field>
        </fields>
        <name>TX_PCM2PDM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4AA004</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>I2S TX PCM2PDM configuration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>I2S TX PDM Fp</description>
            <name>TX_PDM_FP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>I2S TX PDM Fs</description>
            <name>TX_PDM_FS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The fourth parameter of PDM TX IIR_HP filter stage 2 is (504 + I2S_TX_IIR_HP_MULT12_5[2:0])</description>
            <name>TX_IIR_HP_MULT12_5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The fourth parameter of PDM TX IIR_HP filter stage 1 is (504 + I2S_TX_IIR_HP_MULT12_0[2:0])</description>
            <name>TX_IIR_HP_MULT12_0</name>
          </field>
        </fields>
        <name>TX_PCM2PDM_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3F783C0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>I2S TX TDM mode control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM or PDM channel 0. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_PDM_CHAN0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM or PDM channel 1. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_PDM_CHAN1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM or PDM channel 2. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_PDM_CHAN2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM or PDM channel 3. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_PDM_CHAN3_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM or PDM channel 4. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_PDM_CHAN4_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM or PDM channel 5. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_PDM_CHAN5_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM or PDM channel 6. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_PDM_CHAN6_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM or PDM channel 7. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_PDM_CHAN7_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM channel 8. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_CHAN8_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM channel 9. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_CHAN9_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM channel 10. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_CHAN10_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM channel 11. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_CHAN11_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM channel 12. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_CHAN12_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM channel 13. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_CHAN13_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM channel 14. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_CHAN14_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data input of I2S RX TDM channel 15. 0:  Disable, just input 0 in this channel.</description>
            <name>RX_TDM_CHAN15_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The total channel number of I2S TX TDM mode.</description>
            <name>RX_TDM_TOT_CHAN_NUM</name>
          </field>
        </fields>
        <name>RX_TDM_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>I2S TX TDM mode control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 0. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 1. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 2. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN2_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 3. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN3_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 4. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN4_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 5. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN5_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 6. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN6_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 7. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN7_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 8. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN8_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 9. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN9_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 10. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN10_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 11. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN11_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 12. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN12_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 13. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN13_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 14. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN14_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the valid data output of I2S TX TDM channel 15. 0:  Disable, just output 0 in this channel.</description>
            <name>TX_TDM_CHAN15_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The total channel number of I2S TX TDM mode.</description>
            <name>TX_TDM_TOT_CHAN_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When DMA TX buffer stores the data of (REG_TX_TDM_TOT_CHAN_NUM + 1)  channels, and only the data of the enabled channels is sent, then this bit should be set. Clear it when all the data stored in DMA TX buffer is for enabled channels.</description>
            <name>TX_TDM_SKIP_MSK_EN</name>
          </field>
        </fields>
        <name>TX_TDM_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>I2S RX timing control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S Rx SD input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>RX_SD_IN_DM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S Rx WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>RX_WS_OUT_DM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S Rx BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>RX_BCK_OUT_DM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S Rx WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>RX_WS_IN_DM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S Rx BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>RX_BCK_IN_DM</name>
          </field>
        </fields>
        <name>RX_TIMING</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>I2S TX timing control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S TX SD output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>TX_SD_OUT_DM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S TX SD1 output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>TX_SD1_OUT_DM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S TX WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>TX_WS_OUT_DM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S TX BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>TX_BCK_OUT_DM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S TX WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>TX_WS_IN_DM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>The delay mode of I2S TX BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
            <name>TX_BCK_IN_DM</name>
          </field>
        </fields>
        <name>TX_TIMING</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>I2S HUNG configure register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>the i2s_tx_hung_int interrupt or the i2s_rx_hung_int interrupt will be triggered when fifo hung counter is equal to this value</description>
            <name>LC_FIFO_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The bits are used to scale tick counter threshold. The tick counter is reset when counter value &gt;= 88000/2^i2s_lc_fifo_timeout_shift</description>
            <name>LC_FIFO_TIMEOUT_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for FIFO timeout</description>
            <name>LC_FIFO_TIMEOUT_ENA</name>
          </field>
        </fields>
        <name>LC_HUNG_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x810</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>I2S RX data number control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>The receive data bit length is (I2S_RX_BITS_MOD[4:0] + 1) * (REG_RX_EOF_NUM[11:0] + 1) . It will trigger in_suc_eof interrupt in the configured DMA RX channel.</description>
            <name>RX_EOF_NUM</name>
          </field>
        </fields>
        <name>RXEOF_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>I2S signal data register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>The configured constant channel data to be sent out.</description>
            <name>SINGLE_DATA</name>
          </field>
        </fields>
        <name>CONF_SIGLE_DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>I2S TX status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: i2s_tx is idle state. 0: i2s_tx is working.</description>
            <name>TX_IDLE</name>
          </field>
        </fields>
        <name>STATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>Version control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>I2S version control register</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007220</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x19C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x600C2000</baseAddress>
    <description>Interrupt Core</description>
    <groupName>INTERRUPT_CORE0</groupName>
    <interrupts>
      <interrupt>
        <name>CORE0_IRAM0_PMS</name>
        <value>0x38</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>CORE0_DRAM0_PMS</name>
        <value>0x39</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>CORE0_PIF_PMS</name>
        <value>0x3A</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>CORE0_PIF_PMS_SIZE</name>
        <value>0x3B</value>
      </interrupt>
    </interrupts>
    <name>INTERRUPT_CORE0</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>core0_mac_intr_map</description>
            <name>MAC_INTR_MAP</name>
          </field>
        </fields>
        <name>MAC_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>mac nmi_intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_mac_nmi_map</description>
            <name>MAC_NMI_MAP</name>
          </field>
        </fields>
        <name>MAC_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>pwr intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_pwr_intr_map</description>
            <name>PWR_INTR_MAP</name>
          </field>
        </fields>
        <name>PWR_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>bb intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_bb_int_map</description>
            <name>BB_INT_MAP</name>
          </field>
        </fields>
        <name>BB_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>bt intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_bt_mac_int_map</description>
            <name>BT_MAC_INT_MAP</name>
          </field>
        </fields>
        <name>BT_MAC_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>bb_bt intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_bt_bb_int_map</description>
            <name>BT_BB_INT_MAP</name>
          </field>
        </fields>
        <name>BT_BB_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>bb_bt_nmi intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_bt_bb_nmi_map</description>
            <name>BT_BB_NMI_MAP</name>
          </field>
        </fields>
        <name>BT_BB_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>rwbt intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_rwbt_irq_map</description>
            <name>RWBT_IRQ_MAP</name>
          </field>
        </fields>
        <name>RWBT_IRQ_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>rwble intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_rwble_irq_map</description>
            <name>RWBLE_IRQ_MAP</name>
          </field>
        </fields>
        <name>RWBLE_IRQ_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>rwbt_nmi intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_rwbt_nmi_map</description>
            <name>RWBT_NMI_MAP</name>
          </field>
        </fields>
        <name>RWBT_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>rwble_nmi intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_rwble_nmi_map</description>
            <name>RWBLE_NMI_MAP</name>
          </field>
        </fields>
        <name>RWBLE_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>i2c intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_i2c_mst_int_map</description>
            <name>I2C_MST_INT_MAP</name>
          </field>
        </fields>
        <name>I2C_MST_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>slc0 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_slc0_intr_map</description>
            <name>SLC0_INTR_MAP</name>
          </field>
        </fields>
        <name>SLC0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>slc1 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_slc1_intr_map</description>
            <name>SLC1_INTR_MAP</name>
          </field>
        </fields>
        <name>SLC1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>apb_ctrl intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_apb_ctrl_intr_map</description>
            <name>APB_CTRL_INTR_MAP</name>
          </field>
        </fields>
        <name>APB_CTRL_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>uchi0 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_uhci0_intr_map</description>
            <name>UHCI0_INTR_MAP</name>
          </field>
        </fields>
        <name>UHCI0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>gpio intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_gpio_interrupt_pro_map</description>
            <name>GPIO_INTERRUPT_PRO_MAP</name>
          </field>
        </fields>
        <name>GPIO_INTERRUPT_PRO_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>gpio_pro intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_gpio_interrupt_pro_nmi_map</description>
            <name>GPIO_INTERRUPT_PRO_NMI_MAP</name>
          </field>
        </fields>
        <name>GPIO_INTERRUPT_PRO_NMI_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>gpio_pro_nmi intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_spi_intr_1_map</description>
            <name>SPI_INTR_1_MAP</name>
          </field>
        </fields>
        <name>SPI_INTR_1_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>spi1 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_spi_intr_2_map</description>
            <name>SPI_INTR_2_MAP</name>
          </field>
        </fields>
        <name>SPI_INTR_2_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>spi2 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_i2s1_int_map</description>
            <name>I2S1_INT_MAP</name>
          </field>
        </fields>
        <name>I2S1_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>i2s1 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_uart_intr_map</description>
            <name>UART_INTR_MAP</name>
          </field>
        </fields>
        <name>UART_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>uart1 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_uart1_intr_map</description>
            <name>UART1_INTR_MAP</name>
          </field>
        </fields>
        <name>UART1_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>ledc intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_ledc_int_map</description>
            <name>LEDC_INT_MAP</name>
          </field>
        </fields>
        <name>LEDC_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>efuse intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_efuse_int_map</description>
            <name>EFUSE_INT_MAP</name>
          </field>
        </fields>
        <name>EFUSE_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>can intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_can_int_map</description>
            <name>CAN_INT_MAP</name>
          </field>
        </fields>
        <name>CAN_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>usb intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_usb_intr_map</description>
            <name>USB_INTR_MAP</name>
          </field>
        </fields>
        <name>USB_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>rtc intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_rtc_core_intr_map</description>
            <name>RTC_CORE_INTR_MAP</name>
          </field>
        </fields>
        <name>RTC_CORE_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>rmt intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_rmt_intr_map</description>
            <name>RMT_INTR_MAP</name>
          </field>
        </fields>
        <name>RMT_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>i2c intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_i2c_ext0_intr_map</description>
            <name>I2C_EXT0_INTR_MAP</name>
          </field>
        </fields>
        <name>I2C_EXT0_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>timer1 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_timer_int1_map</description>
            <name>TIMER_INT1_MAP</name>
          </field>
        </fields>
        <name>TIMER_INT1_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>timer2 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_timer_int2_map</description>
            <name>TIMER_INT2_MAP</name>
          </field>
        </fields>
        <name>TIMER_INT2_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>tg to intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_tg_t0_int_map</description>
            <name>TG_T0_INT_MAP</name>
          </field>
        </fields>
        <name>TG_T0_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>tg wdt intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_tg_wdt_int_map</description>
            <name>TG_WDT_INT_MAP</name>
          </field>
        </fields>
        <name>TG_WDT_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>tg1 to intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_tg1_t0_int_map</description>
            <name>TG1_T0_INT_MAP</name>
          </field>
        </fields>
        <name>TG1_T0_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>tg1 wdt intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_tg1_wdt_int_map</description>
            <name>TG1_WDT_INT_MAP</name>
          </field>
        </fields>
        <name>TG1_WDT_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>cache ia intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_cache_ia_int_map</description>
            <name>CACHE_IA_INT_MAP</name>
          </field>
        </fields>
        <name>CACHE_IA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>systimer intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_systimer_target0_int_map</description>
            <name>SYSTIMER_TARGET0_INT_MAP</name>
          </field>
        </fields>
        <name>SYSTIMER_TARGET0_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>systimer target1 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_systimer_target1_int_map</description>
            <name>SYSTIMER_TARGET1_INT_MAP</name>
          </field>
        </fields>
        <name>SYSTIMER_TARGET1_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>systimer target2 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_systimer_target2_int_map</description>
            <name>SYSTIMER_TARGET2_INT_MAP</name>
          </field>
        </fields>
        <name>SYSTIMER_TARGET2_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>spi mem reject intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_spi_mem_reject_intr_map</description>
            <name>SPI_MEM_REJECT_INTR_MAP</name>
          </field>
        </fields>
        <name>SPI_MEM_REJECT_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>icache perload intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_icache_preload_int_map</description>
            <name>ICACHE_PRELOAD_INT_MAP</name>
          </field>
        </fields>
        <name>ICACHE_PRELOAD_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>icache sync intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_icache_sync_int_map</description>
            <name>ICACHE_SYNC_INT_MAP</name>
          </field>
        </fields>
        <name>ICACHE_SYNC_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>adc intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_apb_adc_int_map</description>
            <name>APB_ADC_INT_MAP</name>
          </field>
        </fields>
        <name>APB_ADC_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>dma ch0 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_dma_ch0_int_map</description>
            <name>DMA_CH0_INT_MAP</name>
          </field>
        </fields>
        <name>DMA_CH0_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>dma ch1 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_dma_ch1_int_map</description>
            <name>DMA_CH1_INT_MAP</name>
          </field>
        </fields>
        <name>DMA_CH1_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>dma ch2 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_dma_ch2_int_map</description>
            <name>DMA_CH2_INT_MAP</name>
          </field>
        </fields>
        <name>DMA_CH2_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>rsa intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_rsa_int_map</description>
            <name>RSA_INT_MAP</name>
          </field>
        </fields>
        <name>RSA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>aes intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_aes_int_map</description>
            <name>AES_INT_MAP</name>
          </field>
        </fields>
        <name>AES_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>sha intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_sha_int_map</description>
            <name>SHA_INT_MAP</name>
          </field>
        </fields>
        <name>SHA_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>cpu from cpu 0 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_cpu_intr_from_cpu_0_map</description>
            <name>CPU_INTR_FROM_CPU_0_MAP</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_0_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>cpu from cpu 0 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_cpu_intr_from_cpu_1_map</description>
            <name>CPU_INTR_FROM_CPU_1_MAP</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_1_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>cpu from cpu 1 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_cpu_intr_from_cpu_2_map</description>
            <name>CPU_INTR_FROM_CPU_2_MAP</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_2_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>cpu from cpu 3 intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_cpu_intr_from_cpu_3_map</description>
            <name>CPU_INTR_FROM_CPU_3_MAP</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_3_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <description>assist debug intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_assist_debug_intr_map</description>
            <name>ASSIST_DEBUG_INTR_MAP</name>
          </field>
        </fields>
        <name>ASSIST_DEBUG_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <description>dma pms violatile intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_dma_apbperi_pms_monitor_violate_intr_map</description>
            <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          </field>
        </fields>
        <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <description>iram0 pms violatile intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_core_0_iram0_pms_monitor_violate_intr_map</description>
            <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          </field>
        </fields>
        <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_core_0_dram0_pms_monitor_violate_intr_map</description>
            <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          </field>
        </fields>
        <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_core_0_pif_pms_monitor_violate_intr_map</description>
            <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_core_0_pif_pms_monitor_violate_size_intr_map</description>
            <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_backup_pms_violate_intr_map</description>
            <name>BACKUP_PMS_VIOLATE_INTR_MAP</name>
          </field>
        </fields>
        <name>BACKUP_PMS_VIOLATE_INTR_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_core0_cache_core0_acs_int_map</description>
            <name>CACHE_CORE0_ACS_INT_MAP</name>
          </field>
        </fields>
        <name>CACHE_CORE0_ACS_INT_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core0_intr_status_0</description>
            <name>INTR_STATUS_0</name>
          </field>
        </fields>
        <name>INTR_STATUS_REG_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core0_intr_status_1</description>
            <name>INTR_STATUS_1</name>
          </field>
        </fields>
        <name>INTR_STATUS_REG_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_core0_reg_clk_en</description>
            <name>REG_CLK_EN</name>
          </field>
        </fields>
        <name>CLOCK_GATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core0_cpu_int_enable</description>
            <name>CPU_INT_ENABLE</name>
          </field>
        </fields>
        <name>CPU_INT_ENABLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core0_cpu_int_type</description>
            <name>CPU_INT_TYPE</name>
          </field>
        </fields>
        <name>CPU_INT_TYPE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core0_cpu_int_clear</description>
            <name>CPU_INT_CLEAR</name>
          </field>
        </fields>
        <name>CPU_INT_CLEAR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_core0_cpu_int_eip_status</description>
            <name>CPU_INT_EIP_STATUS</name>
          </field>
        </fields>
        <name>CPU_INT_EIP_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_0_map</description>
            <name>CPU_PRI_0_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_1_map</description>
            <name>CPU_PRI_1_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_2_map</description>
            <name>CPU_PRI_2_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_3_map</description>
            <name>CPU_PRI_3_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_4_map</description>
            <name>CPU_PRI_4_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_5_map</description>
            <name>CPU_PRI_5_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_6_map</description>
            <name>CPU_PRI_6_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_7_map</description>
            <name>CPU_PRI_7_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_8_map</description>
            <name>CPU_PRI_8_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_9_map</description>
            <name>CPU_PRI_9_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_10_map</description>
            <name>CPU_PRI_10_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_11_map</description>
            <name>CPU_PRI_11_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_12_map</description>
            <name>CPU_PRI_12_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_13_map</description>
            <name>CPU_PRI_13_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_14_map</description>
            <name>CPU_PRI_14_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x150</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_15_map</description>
            <name>CPU_PRI_15_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x154</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_16_map</description>
            <name>CPU_PRI_16_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_16</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x158</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_17_map</description>
            <name>CPU_PRI_17_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_17</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15C</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_18_map</description>
            <name>CPU_PRI_18_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_18</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x160</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_19_map</description>
            <name>CPU_PRI_19_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_19</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x164</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_20_map</description>
            <name>CPU_PRI_20_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_20</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x168</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_21_map</description>
            <name>CPU_PRI_21_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_21</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16C</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_22_map</description>
            <name>CPU_PRI_22_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_22</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x170</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_23_map</description>
            <name>CPU_PRI_23_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_23</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x174</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_24_map</description>
            <name>CPU_PRI_24_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_24</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x178</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_25_map</description>
            <name>CPU_PRI_25_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_25</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x17C</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_26_map</description>
            <name>CPU_PRI_26_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_26</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x180</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_27_map</description>
            <name>CPU_PRI_27_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_27</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x184</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_28_map</description>
            <name>CPU_PRI_28_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_28</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x188</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_29_map</description>
            <name>CPU_PRI_29_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_29</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18C</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_30_map</description>
            <name>CPU_PRI_30_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_30</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x190</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_pri_31_map</description>
            <name>CPU_PRI_31_MAP</name>
          </field>
        </fields>
        <name>CPU_INT_PRI_31</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x194</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_core0_cpu_int_thresh</description>
            <name>CPU_INT_THRESH</name>
          </field>
        </fields>
        <name>CPU_INT_THRESH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7FC</addressOffset>
        <description>mac intr map register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>reg_core0_interrupt_reg_date</description>
            <name>INTERRUPT_REG_DATE</name>
          </field>
        </fields>
        <name>INTERRUPT_REG_DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007210</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x60</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60009000</baseAddress>
    <description>Input/Output Multiplexer</description>
    <groupName>IO_MUX</groupName>
    <interrupts></interrupts>
    <name>IO_MUX</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>Clock Output Configuration Register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If you want to output clock for I2S to CLK_OUT_out1, set this register to 0x0. CLK_OUT_out1 can be found in peripheral output signals.</description>
            <name>CLK_OUT1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If you want to output clock for I2S to CLK_OUT_out2, set this register to 0x0. CLK_OUT_out2 can be found in peripheral output signals.</description>
            <name>CLK_OUT2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>If you want to output clock for I2S to CLK_OUT_out3, set this register to 0x0. CLK_OUT_out3 can be found in peripheral output signals.</description>
            <name>CLK_OUT3</name>
          </field>
        </fields>
        <name>PIN_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>IO MUX Version Control Register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>Version control register</description>
            <name>REG_DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2006050</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO0</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO1</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO2</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO3</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO4</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO5</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO6</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO7</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO8</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO9</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO10</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO11</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO12</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO13</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO14</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO15</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO16</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO17</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO18</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO19</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO20</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>IO MUX Configure Register for pad XTAL_32K_P</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
            <name>MCU_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
            <name>SLP_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>MCU_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>MCU_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
            <name>MCU_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
            <name>FUN_WPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
            <name>FUN_WPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
            <name>FUN_IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
            <name>FUN_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
            <name>MCU_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
            <name>FILTER_EN</name>
          </field>
        </fields>
        <name>GPIO21</name>
        <resetValue>0xB00</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xB0</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60019000</baseAddress>
    <description>LED Control PWM (Pulse Width Modulation)</description>
    <groupName>LEDC</groupName>
    <interrupts>
      <interrupt>
        <name>LEDC</name>
        <value>0x17</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TIMER1</name>
        <value>0x1E</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TIMER2</name>
        <value>0x1F</value>
      </interrupt>
    </interrupts>
    <name>LEDC</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>LEDC_LSCH0_CONF0.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_timer_sel_lsch0.</description>
            <name>TIMER_SEL_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sig_out_en_lsch0.</description>
            <name>SIG_OUT_EN_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_idle_lv_lsch0.</description>
            <name>IDLE_LV_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_para_up_lsch0.</description>
            <name>PARA_UP_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_ovf_num_lsch0.</description>
            <name>OVF_NUM_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_en_lsch0.</description>
            <name>OVF_CNT_EN_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_reset_lsch0.</description>
            <name>OVF_CNT_RESET_LSCH0</name>
          </field>
        </fields>
        <name>LSCH0_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>LEDC_LSCH0_HPOINT.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_hpoint_lsch0.</description>
            <name>HPOINT_LSCH0</name>
          </field>
        </fields>
        <name>LSCH0_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>LEDC_LSCH0_DUTY.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch0.</description>
            <name>DUTY_LSCH0</name>
          </field>
        </fields>
        <name>LSCH0_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>LEDC_LSCH0_CONF1.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_scale_lsch0.</description>
            <name>DUTY_SCALE_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_cycle_lsch0.</description>
            <name>DUTY_CYCLE_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_num_lsch0.</description>
            <name>DUTY_NUM_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_inc_lsch0.</description>
            <name>DUTY_INC_LSCH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_start_lsch0.</description>
            <name>DUTY_START_LSCH0</name>
          </field>
        </fields>
        <name>LSCH0_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>LEDC_LSCH0_DUTY_R.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch0_r.</description>
            <name>DUTY_LSCH0_R</name>
          </field>
        </fields>
        <name>LSCH0_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>LEDC_LSCH1_CONF0.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_timer_sel_lsch1.</description>
            <name>TIMER_SEL_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sig_out_en_lsch1.</description>
            <name>SIG_OUT_EN_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_idle_lv_lsch1.</description>
            <name>IDLE_LV_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_para_up_lsch1.</description>
            <name>PARA_UP_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_ovf_num_lsch1.</description>
            <name>OVF_NUM_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_en_lsch1.</description>
            <name>OVF_CNT_EN_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_reset_lsch1.</description>
            <name>OVF_CNT_RESET_LSCH1</name>
          </field>
        </fields>
        <name>LSCH1_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>LEDC_LSCH1_HPOINT.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_hpoint_lsch1.</description>
            <name>HPOINT_LSCH1</name>
          </field>
        </fields>
        <name>LSCH1_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>LEDC_LSCH1_DUTY.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch1.</description>
            <name>DUTY_LSCH1</name>
          </field>
        </fields>
        <name>LSCH1_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>LEDC_LSCH1_CONF1.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_scale_lsch1.</description>
            <name>DUTY_SCALE_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_cycle_lsch1.</description>
            <name>DUTY_CYCLE_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_num_lsch1.</description>
            <name>DUTY_NUM_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_inc_lsch1.</description>
            <name>DUTY_INC_LSCH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_start_lsch1.</description>
            <name>DUTY_START_LSCH1</name>
          </field>
        </fields>
        <name>LSCH1_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>LEDC_LSCH1_DUTY_R.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch1_r.</description>
            <name>DUTY_LSCH1_R</name>
          </field>
        </fields>
        <name>LSCH1_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>LEDC_LSCH2_CONF0.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_timer_sel_lsch2.</description>
            <name>TIMER_SEL_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sig_out_en_lsch2.</description>
            <name>SIG_OUT_EN_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_idle_lv_lsch2.</description>
            <name>IDLE_LV_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_para_up_lsch2.</description>
            <name>PARA_UP_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_ovf_num_lsch2.</description>
            <name>OVF_NUM_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_en_lsch2.</description>
            <name>OVF_CNT_EN_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_reset_lsch2.</description>
            <name>OVF_CNT_RESET_LSCH2</name>
          </field>
        </fields>
        <name>LSCH2_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>LEDC_LSCH2_HPOINT.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_hpoint_lsch2.</description>
            <name>HPOINT_LSCH2</name>
          </field>
        </fields>
        <name>LSCH2_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>LEDC_LSCH2_DUTY.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch2.</description>
            <name>DUTY_LSCH2</name>
          </field>
        </fields>
        <name>LSCH2_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>LEDC_LSCH2_CONF1.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_scale_lsch2.</description>
            <name>DUTY_SCALE_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_cycle_lsch2.</description>
            <name>DUTY_CYCLE_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_num_lsch2.</description>
            <name>DUTY_NUM_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_inc_lsch2.</description>
            <name>DUTY_INC_LSCH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_start_lsch2.</description>
            <name>DUTY_START_LSCH2</name>
          </field>
        </fields>
        <name>LSCH2_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>LEDC_LSCH2_DUTY_R.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch2_r.</description>
            <name>DUTY_LSCH2_R</name>
          </field>
        </fields>
        <name>LSCH2_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>LEDC_LSCH3_CONF0.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_timer_sel_lsch3.</description>
            <name>TIMER_SEL_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sig_out_en_lsch3.</description>
            <name>SIG_OUT_EN_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_idle_lv_lsch3.</description>
            <name>IDLE_LV_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_para_up_lsch3.</description>
            <name>PARA_UP_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_ovf_num_lsch3.</description>
            <name>OVF_NUM_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_en_lsch3.</description>
            <name>OVF_CNT_EN_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_reset_lsch3.</description>
            <name>OVF_CNT_RESET_LSCH3</name>
          </field>
        </fields>
        <name>LSCH3_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>LEDC_LSCH3_HPOINT.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_hpoint_lsch3.</description>
            <name>HPOINT_LSCH3</name>
          </field>
        </fields>
        <name>LSCH3_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>LEDC_LSCH3_DUTY.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch3.</description>
            <name>DUTY_LSCH3</name>
          </field>
        </fields>
        <name>LSCH3_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>LEDC_LSCH3_CONF1.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_scale_lsch3.</description>
            <name>DUTY_SCALE_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_cycle_lsch3.</description>
            <name>DUTY_CYCLE_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_num_lsch3.</description>
            <name>DUTY_NUM_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_inc_lsch3.</description>
            <name>DUTY_INC_LSCH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_start_lsch3.</description>
            <name>DUTY_START_LSCH3</name>
          </field>
        </fields>
        <name>LSCH3_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>LEDC_LSCH3_DUTY_R.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch3_r.</description>
            <name>DUTY_LSCH3_R</name>
          </field>
        </fields>
        <name>LSCH3_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>LEDC_LSCH4_CONF0.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_timer_sel_lsch4.</description>
            <name>TIMER_SEL_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sig_out_en_lsch4.</description>
            <name>SIG_OUT_EN_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_idle_lv_lsch4.</description>
            <name>IDLE_LV_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_para_up_lsch4.</description>
            <name>PARA_UP_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_ovf_num_lsch4.</description>
            <name>OVF_NUM_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_en_lsch4.</description>
            <name>OVF_CNT_EN_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_reset_lsch4.</description>
            <name>OVF_CNT_RESET_LSCH4</name>
          </field>
        </fields>
        <name>LSCH4_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>LEDC_LSCH4_HPOINT.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_hpoint_lsch4.</description>
            <name>HPOINT_LSCH4</name>
          </field>
        </fields>
        <name>LSCH4_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>LEDC_LSCH4_DUTY.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch4.</description>
            <name>DUTY_LSCH4</name>
          </field>
        </fields>
        <name>LSCH4_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>LEDC_LSCH4_CONF1.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_scale_lsch4.</description>
            <name>DUTY_SCALE_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_cycle_lsch4.</description>
            <name>DUTY_CYCLE_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_num_lsch4.</description>
            <name>DUTY_NUM_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_inc_lsch4.</description>
            <name>DUTY_INC_LSCH4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_start_lsch4.</description>
            <name>DUTY_START_LSCH4</name>
          </field>
        </fields>
        <name>LSCH4_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>LEDC_LSCH4_DUTY_R.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch4_r.</description>
            <name>DUTY_LSCH4_R</name>
          </field>
        </fields>
        <name>LSCH4_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>LEDC_LSCH5_CONF0.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_timer_sel_lsch5.</description>
            <name>TIMER_SEL_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sig_out_en_lsch5.</description>
            <name>SIG_OUT_EN_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_idle_lv_lsch5.</description>
            <name>IDLE_LV_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_para_up_lsch5.</description>
            <name>PARA_UP_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_ovf_num_lsch5.</description>
            <name>OVF_NUM_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_en_lsch5.</description>
            <name>OVF_CNT_EN_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_reset_lsch5.</description>
            <name>OVF_CNT_RESET_LSCH5</name>
          </field>
        </fields>
        <name>LSCH5_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>LEDC_LSCH5_HPOINT.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_hpoint_lsch5.</description>
            <name>HPOINT_LSCH5</name>
          </field>
        </fields>
        <name>LSCH5_HPOINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>LEDC_LSCH5_DUTY.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch5.</description>
            <name>DUTY_LSCH5</name>
          </field>
        </fields>
        <name>LSCH5_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>LEDC_LSCH5_CONF1.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_scale_lsch5.</description>
            <name>DUTY_SCALE_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_cycle_lsch5.</description>
            <name>DUTY_CYCLE_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_duty_num_lsch5.</description>
            <name>DUTY_NUM_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_inc_lsch5.</description>
            <name>DUTY_INC_LSCH5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_start_lsch5.</description>
            <name>DUTY_START_LSCH5</name>
          </field>
        </fields>
        <name>LSCH5_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>LEDC_LSCH5_DUTY_R.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x13</bitWidth>
            <description>reg_duty_lsch5_r.</description>
            <name>DUTY_LSCH5_R</name>
          </field>
        </fields>
        <name>LSCH5_DUTY_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>LEDC_LSTIMER0_CONF.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_lstimer0_duty_res.</description>
            <name>LSTIMER0_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>reg_clk_div_lstimer0.</description>
            <name>CLK_DIV_LSTIMER0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer0_pause.</description>
            <name>LSTIMER0_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer0_rst.</description>
            <name>LSTIMER0_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tick_sel_lstimer0.</description>
            <name>TICK_SEL_LSTIMER0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer0_para_up.</description>
            <name>LSTIMER0_PARA_UP</name>
          </field>
        </fields>
        <name>LSTIMER0_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>LEDC_LSTIMER0_VALUE.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_lstimer0_cnt.</description>
            <name>LSTIMER0_CNT</name>
          </field>
        </fields>
        <name>LSTIMER0_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>LEDC_LSTIMER1_CONF.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_lstimer1_duty_res.</description>
            <name>LSTIMER1_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>reg_clk_div_lstimer1.</description>
            <name>CLK_DIV_LSTIMER1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer1_pause.</description>
            <name>LSTIMER1_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer1_rst.</description>
            <name>LSTIMER1_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tick_sel_lstimer1.</description>
            <name>TICK_SEL_LSTIMER1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer1_para_up.</description>
            <name>LSTIMER1_PARA_UP</name>
          </field>
        </fields>
        <name>LSTIMER1_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>LEDC_LSTIMER1_VALUE.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_lstimer1_cnt.</description>
            <name>LSTIMER1_CNT</name>
          </field>
        </fields>
        <name>LSTIMER1_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>LEDC_LSTIMER2_CONF.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_lstimer2_duty_res.</description>
            <name>LSTIMER2_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>reg_clk_div_lstimer2.</description>
            <name>CLK_DIV_LSTIMER2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer2_pause.</description>
            <name>LSTIMER2_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer2_rst.</description>
            <name>LSTIMER2_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tick_sel_lstimer2.</description>
            <name>TICK_SEL_LSTIMER2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer2_para_up.</description>
            <name>LSTIMER2_PARA_UP</name>
          </field>
        </fields>
        <name>LSTIMER2_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>LEDC_LSTIMER2_VALUE.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_lstimer2_cnt.</description>
            <name>LSTIMER2_CNT</name>
          </field>
        </fields>
        <name>LSTIMER2_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>LEDC_LSTIMER3_CONF.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_lstimer3_duty_res.</description>
            <name>LSTIMER3_DUTY_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>reg_clk_div_lstimer3.</description>
            <name>CLK_DIV_LSTIMER3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer3_pause.</description>
            <name>LSTIMER3_PAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer3_rst.</description>
            <name>LSTIMER3_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tick_sel_lstimer3.</description>
            <name>TICK_SEL_LSTIMER3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer3_para_up.</description>
            <name>LSTIMER3_PARA_UP</name>
          </field>
        </fields>
        <name>LSTIMER3_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>LEDC_LSTIMER3_VALUE.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xE</bitWidth>
            <description>reg_lstimer3_cnt.</description>
            <name>LSTIMER3_CNT</name>
          </field>
        </fields>
        <name>LSTIMER3_VALUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>LEDC_INT_RAW.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer0_ovf_int_raw.</description>
            <name>LSTIMER0_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer1_ovf_int_raw.</description>
            <name>LSTIMER1_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer2_ovf_int_raw.</description>
            <name>LSTIMER2_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer3_ovf_int_raw.</description>
            <name>LSTIMER3_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch0_int_raw.</description>
            <name>DUTY_CHNG_END_LSCH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch1_int_raw.</description>
            <name>DUTY_CHNG_END_LSCH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch2_int_raw.</description>
            <name>DUTY_CHNG_END_LSCH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch3_int_raw.</description>
            <name>DUTY_CHNG_END_LSCH3_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch4_int_raw.</description>
            <name>DUTY_CHNG_END_LSCH4_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch5_int_raw.</description>
            <name>DUTY_CHNG_END_LSCH5_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch0_int_raw.</description>
            <name>OVF_CNT_LSCH0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch1_int_raw.</description>
            <name>OVF_CNT_LSCH1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch2_int_raw.</description>
            <name>OVF_CNT_LSCH2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch3_int_raw.</description>
            <name>OVF_CNT_LSCH3_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch4_int_raw.</description>
            <name>OVF_CNT_LSCH4_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch5_int_raw.</description>
            <name>OVF_CNT_LSCH5_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>LEDC_INT_ST.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer0_ovf_int_st.</description>
            <name>LSTIMER0_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer1_ovf_int_st.</description>
            <name>LSTIMER1_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer2_ovf_int_st.</description>
            <name>LSTIMER2_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer3_ovf_int_st.</description>
            <name>LSTIMER3_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch0_int_st.</description>
            <name>DUTY_CHNG_END_LSCH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch1_int_st.</description>
            <name>DUTY_CHNG_END_LSCH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch2_int_st.</description>
            <name>DUTY_CHNG_END_LSCH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch3_int_st.</description>
            <name>DUTY_CHNG_END_LSCH3_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch4_int_st.</description>
            <name>DUTY_CHNG_END_LSCH4_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch5_int_st.</description>
            <name>DUTY_CHNG_END_LSCH5_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch0_int_st.</description>
            <name>OVF_CNT_LSCH0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch1_int_st.</description>
            <name>OVF_CNT_LSCH1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch2_int_st.</description>
            <name>OVF_CNT_LSCH2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch3_int_st.</description>
            <name>OVF_CNT_LSCH3_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch4_int_st.</description>
            <name>OVF_CNT_LSCH4_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch5_int_st.</description>
            <name>OVF_CNT_LSCH5_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>LEDC_INT_ENA.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer0_ovf_int_ena.</description>
            <name>LSTIMER0_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer1_ovf_int_ena.</description>
            <name>LSTIMER1_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer2_ovf_int_ena.</description>
            <name>LSTIMER2_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer3_ovf_int_ena.</description>
            <name>LSTIMER3_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch0_int_ena.</description>
            <name>DUTY_CHNG_END_LSCH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch1_int_ena.</description>
            <name>DUTY_CHNG_END_LSCH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch2_int_ena.</description>
            <name>DUTY_CHNG_END_LSCH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch3_int_ena.</description>
            <name>DUTY_CHNG_END_LSCH3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch4_int_ena.</description>
            <name>DUTY_CHNG_END_LSCH4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch5_int_ena.</description>
            <name>DUTY_CHNG_END_LSCH5_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch0_int_ena.</description>
            <name>OVF_CNT_LSCH0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch1_int_ena.</description>
            <name>OVF_CNT_LSCH1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch2_int_ena.</description>
            <name>OVF_CNT_LSCH2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch3_int_ena.</description>
            <name>OVF_CNT_LSCH3_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch4_int_ena.</description>
            <name>OVF_CNT_LSCH4_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch5_int_ena.</description>
            <name>OVF_CNT_LSCH5_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>LEDC_INT_CLR.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer0_ovf_int_clr.</description>
            <name>LSTIMER0_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer1_ovf_int_clr.</description>
            <name>LSTIMER1_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer2_ovf_int_clr.</description>
            <name>LSTIMER2_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lstimer3_ovf_int_clr.</description>
            <name>LSTIMER3_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch0_int_clr.</description>
            <name>DUTY_CHNG_END_LSCH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch1_int_clr.</description>
            <name>DUTY_CHNG_END_LSCH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch2_int_clr.</description>
            <name>DUTY_CHNG_END_LSCH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch3_int_clr.</description>
            <name>DUTY_CHNG_END_LSCH3_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch4_int_clr.</description>
            <name>DUTY_CHNG_END_LSCH4_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_duty_chng_end_lsch5_int_clr.</description>
            <name>DUTY_CHNG_END_LSCH5_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch0_int_clr.</description>
            <name>OVF_CNT_LSCH0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch1_int_clr.</description>
            <name>OVF_CNT_LSCH1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch2_int_clr.</description>
            <name>OVF_CNT_LSCH2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch3_int_clr.</description>
            <name>OVF_CNT_LSCH3_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch4_int_clr.</description>
            <name>OVF_CNT_LSCH4_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ovf_cnt_lsch5_int_clr.</description>
            <name>OVF_CNT_LSCH5_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>LEDC_CONF.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_apb_clk_sel.</description>
            <name>APB_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_en.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>LEDC_DATE.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_ledc_date.</description>
            <name>LEDC_DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x19061700</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x78</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60016000</baseAddress>
    <description>Remote Control Peripheral</description>
    <groupName>RMT</groupName>
    <interrupts>
      <interrupt>
        <name>RMT</name>
        <value>0x1C</value>
      </interrupt>
    </interrupts>
    <name>RMT</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>RMT_CH0DATA_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Reserved.</description>
            <name>CH0DATA</name>
          </field>
        </fields>
        <name>CH0DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>RMT_CH1DATA_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Reserved.</description>
            <name>CH1DATA</name>
          </field>
        </fields>
        <name>CH1DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>RMT_CH2DATA_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Reserved.</description>
            <name>CH2DATA</name>
          </field>
        </fields>
        <name>CH2DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>RMT_CH3DATA_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Reserved.</description>
            <name>CH3DATA</name>
          </field>
        </fields>
        <name>CH3DATA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>RMT_CH0CONF0_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tx_start_ch0.</description>
            <name>TX_START_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_rd_rst_ch0.</description>
            <name>MEM_RD_RST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_mem_rst_ch0.</description>
            <name>APB_MEM_RST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tx_conti_mode_ch0.</description>
            <name>TX_CONTI_MODE_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_tx_wrap_en_ch0.</description>
            <name>MEM_TX_WRAP_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_idle_out_lv_ch0.</description>
            <name>IDLE_OUT_LV_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_idle_out_en_ch0.</description>
            <name>IDLE_OUT_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tx_stop_ch0.</description>
            <name>TX_STOP_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_div_cnt_ch0.</description>
            <name>DIV_CNT_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_mem_size_ch0.</description>
            <name>MEM_SIZE_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_carrier_eff_en_ch0.</description>
            <name>CARRIER_EFF_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_carrier_en_ch0.</description>
            <name>CARRIER_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_carrier_out_lv_ch0.</description>
            <name>CARRIER_OUT_LV_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_afifo_rst_ch0.</description>
            <name>AFIFO_RST_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_reg_conf_update_ch0.</description>
            <name>REG_CONF_UPDATE_CH0</name>
          </field>
        </fields>
        <name>CH0CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x710200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>RMT_CH1CONF0_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tx_start_ch1.</description>
            <name>TX_START_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_rd_rst_ch1.</description>
            <name>MEM_RD_RST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_mem_rst_ch1.</description>
            <name>APB_MEM_RST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tx_conti_mode_ch1.</description>
            <name>TX_CONTI_MODE_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_tx_wrap_en_ch1.</description>
            <name>MEM_TX_WRAP_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_idle_out_lv_ch1.</description>
            <name>IDLE_OUT_LV_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_idle_out_en_ch1.</description>
            <name>IDLE_OUT_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tx_stop_ch1.</description>
            <name>TX_STOP_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_div_cnt_ch1.</description>
            <name>DIV_CNT_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_mem_size_ch1.</description>
            <name>MEM_SIZE_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_carrier_eff_en_ch1.</description>
            <name>CARRIER_EFF_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_carrier_en_ch1.</description>
            <name>CARRIER_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_carrier_out_lv_ch1.</description>
            <name>CARRIER_OUT_LV_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_afifo_rst_ch1.</description>
            <name>AFIFO_RST_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_conf_update_ch1.</description>
            <name>CONF_UPDATE_CH1</name>
          </field>
        </fields>
        <name>CH1CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x710200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>RMT_CH2CONF0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_div_cnt_ch2.</description>
            <name>DIV_CNT_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0xF</bitWidth>
            <description>reg_idle_thres_ch2.</description>
            <name>IDLE_THRES_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_mem_size_ch2.</description>
            <name>MEM_SIZE_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_carrier_en_ch2.</description>
            <name>CARRIER_EN_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_carrier_out_lv_ch2.</description>
            <name>CARRIER_OUT_LV_CH2</name>
          </field>
        </fields>
        <name>CH2CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x30FFFF02</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>RMT_CH2CONF1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rx_en_ch2.</description>
            <name>RX_EN_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_wr_rst_ch2.</description>
            <name>MEM_WR_RST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_mem_rst_ch2.</description>
            <name>APB_MEM_RST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_owner_ch2.</description>
            <name>MEM_OWNER_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rx_filter_en_ch2.</description>
            <name>RX_FILTER_EN_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_rx_filter_thres_ch2.</description>
            <name>RX_FILTER_THRES_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_rx_wrap_en_ch2.</description>
            <name>MEM_RX_WRAP_EN_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_afifo_rst_ch2.</description>
            <name>AFIFO_RST_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_conf_update_ch2.</description>
            <name>CONF_UPDATE_CH2</name>
          </field>
        </fields>
        <name>CH2CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1E8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>RMT_CH3CONF0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_div_cnt_ch3.</description>
            <name>DIV_CNT_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0xF</bitWidth>
            <description>reg_idle_thres_ch3.</description>
            <name>IDLE_THRES_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_mem_size_ch3.</description>
            <name>MEM_SIZE_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_carrier_en_ch3.</description>
            <name>CARRIER_EN_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_carrier_out_lv_ch3.</description>
            <name>CARRIER_OUT_LV_CH3</name>
          </field>
        </fields>
        <name>CH3CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x30FFFF02</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>RMT_CH3CONF1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rx_en_ch3.</description>
            <name>RX_EN_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_wr_rst_ch3.</description>
            <name>MEM_WR_RST_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_mem_rst_ch3.</description>
            <name>APB_MEM_RST_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_owner_ch3.</description>
            <name>MEM_OWNER_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rx_filter_en_ch3.</description>
            <name>RX_FILTER_EN_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_rx_filter_thres_ch3.</description>
            <name>RX_FILTER_THRES_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_rx_wrap_en_ch3.</description>
            <name>MEM_RX_WRAP_EN_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_afifo_rst_ch3.</description>
            <name>AFIFO_RST_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_conf_update_ch3.</description>
            <name>CONF_UPDATE_CH3</name>
          </field>
        </fields>
        <name>CH3CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1E8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>RMT_CH0STATUS_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_mem_raddr_ex_ch0.</description>
            <name>MEM_RADDR_EX_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_state_ch0.</description>
            <name>STATE_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_apb_mem_waddr_ch0.</description>
            <name>APB_MEM_WADDR_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_mem_rd_err_ch0.</description>
            <name>APB_MEM_RD_ERR_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_empty_ch0.</description>
            <name>MEM_EMPTY_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_mem_wr_err_ch0.</description>
            <name>APB_MEM_WR_ERR_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_apb_mem_raddr_ch0.</description>
            <name>APB_MEM_RADDR_CH0</name>
          </field>
        </fields>
        <name>CH0STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>RMT_CH1STATUS_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_mem_raddr_ex_ch1.</description>
            <name>MEM_RADDR_EX_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_state_ch1.</description>
            <name>STATE_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_apb_mem_waddr_ch1.</description>
            <name>APB_MEM_WADDR_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_mem_rd_err_ch1.</description>
            <name>APB_MEM_RD_ERR_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_empty_ch1.</description>
            <name>MEM_EMPTY_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_mem_wr_err_ch1.</description>
            <name>APB_MEM_WR_ERR_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_apb_mem_raddr_ch1.</description>
            <name>APB_MEM_RADDR_CH1</name>
          </field>
        </fields>
        <name>CH1STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>RMT_CH2STATUS_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_mem_waddr_ex_ch2.</description>
            <name>MEM_WADDR_EX_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_apb_mem_raddr_ch2.</description>
            <name>APB_MEM_RADDR_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_state_ch2.</description>
            <name>STATE_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_owner_err_ch2.</description>
            <name>MEM_OWNER_ERR_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_full_ch2.</description>
            <name>MEM_FULL_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_mem_rd_err_ch2.</description>
            <name>APB_MEM_RD_ERR_CH2</name>
          </field>
        </fields>
        <name>CH2STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>RMT_CH3STATUS_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_mem_waddr_ex_ch3.</description>
            <name>MEM_WADDR_EX_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_apb_mem_raddr_ch3.</description>
            <name>APB_MEM_RADDR_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_state_ch3.</description>
            <name>STATE_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_owner_err_ch3.</description>
            <name>MEM_OWNER_ERR_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_full_ch3.</description>
            <name>MEM_FULL_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_mem_rd_err_ch3.</description>
            <name>APB_MEM_RD_ERR_CH3</name>
          </field>
        </fields>
        <name>CH3STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>RMT_INT_RAW_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_end_int_raw.</description>
            <name>CH0_TX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_end_int_raw.</description>
            <name>CH1_TX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_rx_end_int_raw.</description>
            <name>CH2_RX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_rx_end_int_raw.</description>
            <name>CH3_RX_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_err_int_raw.</description>
            <name>CH0_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_err_int_raw.</description>
            <name>CH1_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_err_int_raw.</description>
            <name>CH2_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_err_int_raw.</description>
            <name>CH3_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_thr_event_int_raw.</description>
            <name>CH0_TX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_thr_event_int_raw.</description>
            <name>CH1_TX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_rx_thr_event_int_raw.</description>
            <name>CH2_RX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_rx_thr_event_int_raw.</description>
            <name>CH3_RX_THR_EVENT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_loop_int_raw.</description>
            <name>CH0_TX_LOOP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_loop_int_raw.</description>
            <name>CH1_TX_LOOP_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>RMT_INT_ST_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_end_int_st.</description>
            <name>CH0_TX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_end_int_st.</description>
            <name>CH1_TX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_rx_end_int_st.</description>
            <name>CH2_RX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_rx_end_int_st.</description>
            <name>CH3_RX_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_err_int_st.</description>
            <name>CH0_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_err_int_st.</description>
            <name>CH1_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_err_int_st.</description>
            <name>CH2_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_err_int_st.</description>
            <name>CH3_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_thr_event_int_st.</description>
            <name>CH0_TX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_thr_event_int_st.</description>
            <name>CH1_TX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_rx_thr_event_int_st.</description>
            <name>CH2_RX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_rx_thr_event_int_st.</description>
            <name>CH3_RX_THR_EVENT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_loop_int_st.</description>
            <name>CH0_TX_LOOP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_loop_int_st.</description>
            <name>CH1_TX_LOOP_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>RMT_INT_ENA_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_end_int_ena.</description>
            <name>CH0_TX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_end_int_ena.</description>
            <name>CH1_TX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_rx_end_int_ena.</description>
            <name>CH2_RX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_rx_end_int_ena.</description>
            <name>CH3_RX_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_err_int_ena.</description>
            <name>CH0_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_err_int_ena.</description>
            <name>CH1_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_err_int_ena.</description>
            <name>CH2_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_err_int_ena.</description>
            <name>CH3_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_thr_event_int_ena.</description>
            <name>CH0_TX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_thr_event_int_ena.</description>
            <name>CH1_TX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_rx_thr_event_int_ena.</description>
            <name>CH2_RX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_rx_thr_event_int_ena.</description>
            <name>CH3_RX_THR_EVENT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_loop_int_ena.</description>
            <name>CH0_TX_LOOP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_loop_int_ena.</description>
            <name>CH1_TX_LOOP_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>RMT_INT_CLR_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_end_int_clr.</description>
            <name>CH0_TX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_end_int_clr.</description>
            <name>CH1_TX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_rx_end_int_clr.</description>
            <name>CH2_RX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_rx_end_int_clr.</description>
            <name>CH3_RX_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_err_int_clr.</description>
            <name>CH0_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_err_int_clr.</description>
            <name>CH1_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_err_int_clr.</description>
            <name>CH2_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_err_int_clr.</description>
            <name>CH3_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_thr_event_int_clr.</description>
            <name>CH0_TX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_thr_event_int_clr.</description>
            <name>CH1_TX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch2_rx_thr_event_int_clr.</description>
            <name>CH2_RX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch3_rx_thr_event_int_clr.</description>
            <name>CH3_RX_THR_EVENT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch0_tx_loop_int_clr.</description>
            <name>CH0_TX_LOOP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ch1_tx_loop_int_clr.</description>
            <name>CH1_TX_LOOP_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>RMT_CH0CARRIER_DUTY_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_carrier_low_ch0.</description>
            <name>CARRIER_LOW_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_carrier_high_ch0.</description>
            <name>CARRIER_HIGH_CH0</name>
          </field>
        </fields>
        <name>CH0CARRIER_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>RMT_CH1CARRIER_DUTY_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_carrier_low_ch1.</description>
            <name>CARRIER_LOW_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_carrier_high_ch1.</description>
            <name>CARRIER_HIGH_CH1</name>
          </field>
        </fields>
        <name>CH1CARRIER_DUTY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400040</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>RMT_CH2_RX_CARRIER_RM_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_carrier_low_thres_ch2.</description>
            <name>CARRIER_LOW_THRES_CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_carrier_high_thres_ch2.</description>
            <name>CARRIER_HIGH_THRES_CH2</name>
          </field>
        </fields>
        <name>CH2_RX_CARRIER_RM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>RMT_CH3_RX_CARRIER_RM_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_carrier_low_thres_ch3.</description>
            <name>CARRIER_LOW_THRES_CH3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_carrier_high_thres_ch3.</description>
            <name>CARRIER_HIGH_THRES_CH3</name>
          </field>
        </fields>
        <name>CH3_RX_CARRIER_RM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>RMT_CH0_TX_LIM_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_rmt_tx_lim_ch0.</description>
            <name>RMT_TX_LIM_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_rmt_tx_loop_num_ch0.</description>
            <name>RMT_TX_LOOP_NUM_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rmt_tx_loop_cnt_en_ch0.</description>
            <name>RMT_TX_LOOP_CNT_EN_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_loop_count_reset_ch0.</description>
            <name>LOOP_COUNT_RESET_CH0</name>
          </field>
        </fields>
        <name>CH0_TX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>RMT_CH1_TX_LIM_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_rmt_tx_lim_ch1.</description>
            <name>RMT_TX_LIM_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_rmt_tx_loop_num_ch1.</description>
            <name>RMT_TX_LOOP_NUM_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rmt_tx_loop_cnt_en_ch1.</description>
            <name>RMT_TX_LOOP_CNT_EN_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_loop_count_reset_ch1.</description>
            <name>LOOP_COUNT_RESET_CH1</name>
          </field>
        </fields>
        <name>CH1_TX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>RMT_CH2_RX_LIM_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_rmt_rx_lim_ch2.</description>
            <name>RMT_RX_LIM_CH2</name>
          </field>
        </fields>
        <name>CH2_RX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>RMT_CH3_RX_LIM_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>reg_rmt_rx_lim_ch3.</description>
            <name>RMT_RX_LIM_CH3</name>
          </field>
        </fields>
        <name>CH3_RX_LIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>RMT_SYS_CONF_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_fifo_mask.</description>
            <name>APB_FIFO_MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_clk_force_on.</description>
            <name>MEM_CLK_FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rmt_mem_force_pd.</description>
            <name>RMT_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rmt_mem_force_pu.</description>
            <name>RMT_MEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>reg_rmt_sclk_div_num.</description>
            <name>RMT_SCLK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>reg_rmt_sclk_div_a.</description>
            <name>RMT_SCLK_DIV_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>reg_rmt_sclk_div_b.</description>
            <name>RMT_SCLK_DIV_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_rmt_sclk_sel.</description>
            <name>RMT_SCLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rmt_sclk_active.</description>
            <name>RMT_SCLK_ACTIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_en.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>SYS_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5000010</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>RMT_TX_SIM_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rmt_tx_sim_ch0.</description>
            <name>RMT_TX_SIM_CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rmt_tx_sim_ch1.</description>
            <name>RMT_TX_SIM_CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rmt_tx_sim_en.</description>
            <name>RMT_TX_SIM_EN</name>
          </field>
        </fields>
        <name>TX_SIM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>RMT_REF_CNT_RST_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ref_cnt_rst_ch0.</description>
            <name>CH0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ref_cnt_rst_ch1.</description>
            <name>CH1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ref_cnt_rst_ch2.</description>
            <name>CH2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ref_cnt_rst_ch3.</description>
            <name>CH3</name>
          </field>
        </fields>
        <name>REF_CNT_RST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>RMT_DATE_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>reg_rmt_date.</description>
            <name>RMT_DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2006231</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x74</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x6003C000</baseAddress>
    <description>RSA (Rivest Shamir Adleman) Accelerator</description>
    <groupName>RSA</groupName>
    <interrupts>
      <interrupt>
        <name>RSA</name>
        <value>0x2F</value>
      </interrupt>
    </interrupts>
    <name>RSA</name>
    <registers>
      <register>
        <addressOffset>0x800</addressOffset>
        <description>RSA M_prime register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Those bits stores m'</description>
            <name>M_PRIME</name>
          </field>
        </fields>
        <name>M_PRIME</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x804</addressOffset>
        <description>RSA mode register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>rsa mode (rsa length).</description>
            <name>MODE</name>
          </field>
        </fields>
        <name>MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x808</addressOffset>
        <description>RSA query clean register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>query clean</description>
            <name>QUERY_CLEAN</name>
          </field>
        </fields>
        <name>QUERY_CLEAN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80C</addressOffset>
        <description>RSA modular exponentiation trigger register.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start modular exponentiation</description>
            <name>SET_START_MODEXP</name>
          </field>
        </fields>
        <name>SET_START_MODEXP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x810</addressOffset>
        <description>RSA modular multiplication trigger register.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start modular multiplication</description>
            <name>SET_START_MODMULT</name>
          </field>
        </fields>
        <name>SET_START_MODMULT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x814</addressOffset>
        <description>RSA normal multiplication trigger register.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start multiplicaiton</description>
            <name>SET_START_MULT</name>
          </field>
        </fields>
        <name>SET_START_MULT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x818</addressOffset>
        <description>RSA query idle register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>query rsa idle. 1'b0: busy, 1'b1: idle</description>
            <name>QUERY_IDLE</name>
          </field>
        </fields>
        <name>QUERY_IDLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81C</addressOffset>
        <description>RSA interrupt clear register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>set this bit to clear RSA interrupt.</description>
            <name>CLEAR_INTERRUPT</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x820</addressOffset>
        <description>RSA constant time option register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Configure this bit to 0 for acceleration. 0: with acceleration, 1: without acceleration(defalut).</description>
            <name>CONSTANT_TIME</name>
          </field>
        </fields>
        <name>CONSTANT_TIME</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x824</addressOffset>
        <description>RSA search option</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Configure this bit to 1 for acceleration. 1: with acceleration, 0: without acceleration(default). This option should be used together with RSA_SEARCH_POS.</description>
            <name>SEARCH_ENABLE</name>
          </field>
        </fields>
        <name>SEARCH_ENABLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x828</addressOffset>
        <description>RSA search position configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>Configure this field to set search position. This field should be used together with RSA_SEARCH_ENABLE. The field is only meaningful when RSA_SEARCH_ENABLE is high.</description>
            <name>SEARCH_POS</name>
          </field>
        </fields>
        <name>SEARCH_POS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82C</addressOffset>
        <description>RSA interrupt enable register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable interrupt that occurs when rsa calculation is done. 1'b0: disable, 1'b1: enable(default).</description>
            <name>INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x830</addressOffset>
        <description>RSA version control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>rsa version information</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20200618</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF</addressOffset>
        <description>The memory that stores M</description>
        <fields></fields>
        <name>M_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x200</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x201</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x202</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x203</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x204</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x205</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x206</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x207</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x208</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x209</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20A</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20B</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20C</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20D</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20E</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20F</addressOffset>
        <description>The memory that stores Z</description>
        <fields></fields>
        <name>Z_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x400</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x401</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x402</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x403</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x404</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x405</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x406</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x407</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x408</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x409</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40A</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40B</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40C</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40D</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40E</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40F</addressOffset>
        <description>The memory that stores Y</description>
        <fields></fields>
        <name>Y_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x600</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x601</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x602</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x603</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x604</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x605</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x606</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x607</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x608</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x609</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60A</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60B</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60C</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60D</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60E</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60F</addressOffset>
        <description>The memory that stores X</description>
        <fields></fields>
        <name>X_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x12C</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60008000</baseAddress>
    <description>Real-Time Clock Control</description>
    <groupName>RTC_CNTL</groupName>
    <interrupts>
      <interrupt>
        <name>RTC_CORE</name>
        <value>0x1B</value>
      </interrupt>
    </interrupts>
    <name>RTC_CNTL</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>{reg_sw_stall_appcpu_c1[5:0],  reg_sw_stall_appcpu_c0[1:0]} == 0x86 will stall APP CPU</description>
            <name>SW_STALL_APPCPU_C0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>{reg_sw_stall_procpu_c1[5:0],  reg_sw_stall_procpu_c0[1:0]} == 0x86 will stall PRO CPU</description>
            <name>SW_STALL_PROCPU_C0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU SW reset</description>
            <name>SW_APPCPU_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU SW reset</description>
            <name>SW_PROCPU_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_I2C force power down</description>
            <name>BB_I2C_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_I2C force power up</description>
            <name>BB_I2C_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_PLL _I2C force power down</description>
            <name>BBPLL_I2C_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_PLL_I2C force power up</description>
            <name>BBPLL_I2C_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_PLL force power down</description>
            <name>BBPLL_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BB_PLL force power up</description>
            <name>BBPLL_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>crystall force power down</description>
            <name>XTL_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>crystall force power up</description>
            <name>XTL_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>wait bias_sleep and current source wakeup</description>
            <name>XTL_EN_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>analog configure</description>
            <name>XTL_EXT_CTR_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>analog configure</description>
            <name>XTL_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>analog configure</description>
            <name>PLL_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>analog configure</description>
            <name>ANALOG_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>analog configure</description>
            <name>XTL_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>analog configure</description>
            <name>PLL_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>analog configure</description>
            <name>ANALOG_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital wrap force reset in deep sleep</description>
            <name>DG_WRAP_FORCE_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital core force no reset in deep sleep</description>
            <name>DG_WRAP_FORCE_NORST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SW system reset</description>
            <name>SW_SYS_RST</name>
          </field>
        </fields>
        <name>RTC_OPTIONS0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1C00A000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>configure the  sleep time</description>
            <name>SLP_VAL_LO</name>
          </field>
        </fields>
        <name>RTC_SLP_TIMER0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>RTC sleep timer high 16 bits</description>
            <name>SLP_VAL_HI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timer alarm enable bit</description>
            <name>RTC_MAIN_TIMER_ALARM_EN</name>
          </field>
        </fields>
        <name>RTC_SLP_TIMER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable to record system stall time</description>
            <name>TIMER_SYS_STALL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable to record 40M XTAL OFF time</description>
            <name>TIMER_XTL_OFF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable to record system reset time</description>
            <name>TIMER_SYS_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set 1: to update register with RTC timer</description>
            <name>RTC_TIME_UPDATE</name>
          </field>
        </fields>
        <name>RTC_TIME_UPDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>RTC timer low 32 bits</description>
            <name>RTC_TIMER_VALUE0_LOW</name>
          </field>
        </fields>
        <name>RTC_TIME_LOW0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>RTC timer high 16 bits</description>
            <name>RTC_TIMER_VALUE0_HIGH</name>
          </field>
        </fields>
        <name>RTC_TIME_HIGH0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc software interrupt to main cpu</description>
            <name>RTC_SW_CPU_INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear rtc sleep reject cause</description>
            <name>RTC_SLP_REJECT_CAUSE_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: APB to RTC using bridge</description>
            <name>APB2RTC_BRIDGE_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SDIO active indication</description>
            <name>SDIO_ACTIVE_IND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>leep wakeup bit</description>
            <name>SLP_WAKEUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>leep reject bit</description>
            <name>SLP_REJECT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep enable bit</description>
            <name>SLEEP_EN</name>
          </field>
        </fields>
        <name>RTC_STATE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CPU stall enable bit</description>
            <name>CPU_STALL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>CPU stall wait cycles in fast_clk_rtc</description>
            <name>CPU_STALL_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>CK8M wait cycles in slow_clk_rtc</description>
            <name>CK8M_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>XTAL wait cycles in slow_clk_rtc</description>
            <name>XTL_BUF_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>PLL wait cycles in slow_clk_rtc</description>
            <name>PLL_BUF_WAIT</name>
          </field>
        </fields>
        <name>RTC_TIMER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x28140403</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>minimal cycles in slow_clk_rtc for CK8M in power down state</description>
            <name>MIN_TIME_CK8M_OFF</name>
          </field>
        </fields>
        <name>RTC_TIMER2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>wifi power domain wakeup time</description>
            <name>WIFI_WAIT_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>wifi power domain power on time</description>
            <name>WIFI_POWERUP_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>bt power domain wakeup time</description>
            <name>BT_WAIT_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>bt power domain power on time</description>
            <name>BT_POWERUP_TIMER</name>
          </field>
        </fields>
        <name>RTC_TIMER3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA080A08</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>cpu top power domain wakeup time</description>
            <name>CPU_TOP_WAIT_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>cpu top power domain power on time</description>
            <name>CPU_TOP_POWERUP_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>digital wrap power domain wakeup time</description>
            <name>DG_WRAP_WAIT_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>digital wrap power domain power on time</description>
            <name>DG_WRAP_POWERUP_TIMER</name>
          </field>
        </fields>
        <name>RTC_TIMER4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10200A08</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>minimal sleep cycles in slow_clk_rtc</description>
            <name>MIN_SLP_VAL</name>
          </field>
        </fields>
        <name>RTC_TIMER5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>digital peri power domain wakeup time</description>
            <name>DG_PERI_WAIT_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>digital peri power domain power on time</description>
            <name>DG_PERI_POWERUP_TIMER</name>
          </field>
        </fields>
        <name>RTC_TIMER6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA080000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>force no bypass i2c power on reset</description>
            <name>RESET_POR_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>force bypass i2c power on reset</description>
            <name>RESET_POR_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable glitch reset</description>
            <name>GLITCH_RST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PLLA force power up</description>
            <name>SAR_I2C_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PLLA force power down</description>
            <name>PLLA_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PLLA force power up</description>
            <name>PLLA_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>start BBPLL calibration during sleep</description>
            <name>BBPLL_CAL_SLP_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: PVTMON power up</description>
            <name>PVTMON_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: TXRF_I2C power up</description>
            <name>TXRF_I2C_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: RFRX_PBUS power up</description>
            <name>RFRX_PBUS_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: CKGEN_I2C power up</description>
            <name>CKGEN_I2C_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>power up pll i2c</description>
            <name>PLL_I2C_PU</name>
          </field>
        </fields>
        <name>RTC_ANA_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC40000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>reset cause of PRO CPU</description>
            <name>RESET_CAUSE_PROCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>reset cause of APP CPU</description>
            <name>RESET_CAUSE_APPCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU state vector sel</description>
            <name>STAT_VECTOR_SEL_APPCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU state vector sel</description>
            <name>STAT_VECTOR_SEL_PROCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PRO CPU reset_flag</description>
            <name>ALL_RESET_FLAG_PROCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APP CPU reset flag</description>
            <name>ALL_RESET_FLAG_APPCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear PRO CPU reset_flag</description>
            <name>ALL_RESET_FLAG_CLR_PROCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear APP CPU reset flag</description>
            <name>ALL_RESET_FLAG_CLR_APPCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>APPCPU OcdHaltOnReset</description>
            <name>OCD_HALT_ON_RESET_APPCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PROCPU OcdHaltOnReset</description>
            <name>OCD_HALT_ON_RESET_PROCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>configure jtag reset configure</description>
            <name>JTAG_RESET_FLAG_PROCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>configure jtag reset configure</description>
            <name>JTAG_RESET_FLAG_APPCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>configure jtag reset configure</description>
            <name>JTAG_RESET_FLAG_CLR_PROCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>configure jtag reset configure</description>
            <name>JTAG_RESET_FLAG_CLR_APPCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>configure dreset configure</description>
            <name>RTC_DRESET_MASK_APPCPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>configure dreset configure</description>
            <name>RTC_DRESET_MASK_PROCPU</name>
          </field>
        </fields>
        <name>RTC_RESET_STATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x11</bitWidth>
            <description>wakeup enable bitmap</description>
            <name>RTC_WAKEUP_ENA</name>
          </field>
        </fields>
        <name>RTC_WAKEUP_STATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable sleep wakeup interrupt</description>
            <name>SLP_WAKEUP_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable sleep reject interrupt</description>
            <name>SLP_REJECT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable RTC WDT interrupt</description>
            <name>RTC_WDT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable brown out interrupt</description>
            <name>RTC_BROWN_OUT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable RTC main timer interrupt</description>
            <name>RTC_MAIN_TIMER_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable super watch dog interrupt</description>
            <name>RTC_SWD_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable xtal32k_dead  interrupt</description>
            <name>RTC_XTAL32K_DEAD_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enbale gitch det interrupt</description>
            <name>RTC_GLITCH_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enbale bbpll cal end interrupt</description>
            <name>RTC_BBPLL_CAL_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA_RTC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep wakeup interrupt raw</description>
            <name>SLP_WAKEUP_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep reject interrupt raw</description>
            <name>SLP_REJECT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC WDT interrupt raw</description>
            <name>RTC_WDT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>brown out interrupt raw</description>
            <name>RTC_BROWN_OUT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC main timer interrupt raw</description>
            <name>RTC_MAIN_TIMER_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>super watch dog interrupt raw</description>
            <name>RTC_SWD_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xtal32k dead detection interrupt raw</description>
            <name>RTC_XTAL32K_DEAD_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>glitch_det_interrupt_raw</description>
            <name>RTC_GLITCH_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bbpll cal end interrupt state</description>
            <name>RTC_BBPLL_CAL_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW_RTC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep wakeup interrupt state</description>
            <name>SLP_WAKEUP_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sleep reject interrupt state</description>
            <name>SLP_REJECT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC WDT interrupt state</description>
            <name>RTC_WDT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>brown out interrupt state</description>
            <name>RTC_BROWN_OUT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC main timer interrupt state</description>
            <name>RTC_MAIN_TIMER_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>super watch dog interrupt state</description>
            <name>RTC_SWD_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xtal32k dead detection interrupt state</description>
            <name>RTC_XTAL32K_DEAD_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>glitch_det_interrupt state</description>
            <name>RTC_GLITCH_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bbpll cal end interrupt state</description>
            <name>RTC_BBPLL_CAL_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST_RTC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear sleep wakeup interrupt state</description>
            <name>SLP_WAKEUP_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear sleep reject interrupt state</description>
            <name>SLP_REJECT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear RTC WDT interrupt state</description>
            <name>RTC_WDT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear brown out interrupt state</description>
            <name>RTC_BROWN_OUT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear RTC main timer interrupt state</description>
            <name>RTC_MAIN_TIMER_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear super watch dog interrupt state</description>
            <name>RTC_SWD_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear RTC WDT interrupt state</description>
            <name>RTC_XTAL32K_DEAD_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear glitch det interrupt state</description>
            <name>RTC_GLITCH_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear bbpll cal end interrupt state</description>
            <name>RTC_BBPLL_CAL_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR_RTC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reserved register</description>
            <name>RTC_SCRATCH0</name>
          </field>
        </fields>
        <name>RTC_STORE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reserved register</description>
            <name>RTC_SCRATCH1</name>
          </field>
        </fields>
        <name>RTC_STORE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reserved register</description>
            <name>RTC_SCRATCH2</name>
          </field>
        </fields>
        <name>RTC_STORE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reserved register</description>
            <name>RTC_SCRATCH3</name>
          </field>
        </fields>
        <name>RTC_STORE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xtal 32k watch dog enable</description>
            <name>XTAL32K_WDT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xtal 32k watch dog clock force on</description>
            <name>XTAL32K_WDT_CLK_FO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xtal 32k watch dog sw reset</description>
            <name>XTAL32K_WDT_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xtal 32k external xtal clock force on</description>
            <name>XTAL32K_EXT_CLK_FO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xtal 32k switch to back up clock when xtal is dead</description>
            <name>XTAL32K_AUTO_BACKUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xtal 32k restart xtal when xtal is dead</description>
            <name>XTAL32K_AUTO_RESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xtal 32k switch back xtal when xtal is restarted</description>
            <name>XTAL32K_AUTO_RETURN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Xtal 32k xpd control by sw or fsm</description>
            <name>XTAL32K_XPD_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>apply an internal clock to help xtal 32k to start</description>
            <name>ENCKINIT_XTAL_32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: single-end buffer 1: differential buffer</description>
            <name>DBUF_XTAL_32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>xtal_32k gm control</description>
            <name>DGM_XTAL_32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>DRES_XTAL_32K</description>
            <name>DRES_XTAL_32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>XPD_XTAL_32K</description>
            <name>XPD_XTAL_32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>DAC_XTAL_32K</description>
            <name>DAC_XTAL_32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>state of 32k_wdt</description>
            <name>RTC_WDT_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>XTAL_32K sel. 0: external XTAL_32K</description>
            <name>RTC_XTAL32K_GPIO_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0: power down XTAL at high level</description>
            <name>XTL_EXT_CTR_LV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable gpio configure xtal power on</description>
            <name>XTL_EXT_CTR_EN</name>
          </field>
        </fields>
        <name>RTC_EXT_XTL_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x66C80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable filter for gpio wakeup event</description>
            <name>GPIO_WAKEUP_FILTER</name>
          </field>
        </fields>
        <name>RTC_EXT_WAKEUP_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>sleep reject enable</description>
            <name>RTC_SLEEP_REJECT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable reject for light sleep</description>
            <name>LIGHT_SLP_REJECT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable reject for deep sleep</description>
            <name>DEEP_SLP_REJECT_EN</name>
          </field>
        </fields>
        <name>RTC_SLP_REJECT_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CPU sel option</description>
            <name>RTC_CPUSEL_CONF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>CPU clk sel option</description>
            <name>RTC_CPUPERIOD_SEL</name>
          </field>
        </fields>
        <name>RTC_CPU_PERIOD_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>efuse_clk_force_gating</description>
            <name>EFUSE_CLK_FORCE_GATING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>efuse_clk_force_nogating</description>
            <name>EFUSE_CLK_FORCE_NOGATING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>used to sync reg_ck8m_div_sel bus. Clear vld before set reg_ck8m_div_sel</description>
            <name>CK8M_DIV_SEL_VLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>CK8M_D256_OUT divider. 00: div128</description>
            <name>CK8M_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>disable CK8M and CK8M_D256_OUT</description>
            <name>ENB_CK8M</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: CK8M_D256_OUT is actually CK8M</description>
            <name>ENB_CK8M_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable CK_XTAL_32K for digital core (no relationship with RTC core)</description>
            <name>DIG_XTAL32K_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable CK8M_D256_OUT for digital core (no relationship with RTC core)</description>
            <name>DIG_CLK8M_D256_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable CK8M for digital core (no relationship with RTC core)</description>
            <name>DIG_CLK8M_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>divider = reg_ck8m_div_sel + 1</description>
            <name>CK8M_DIV_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>XTAL force no gating during sleep</description>
            <name>XTAL_FORCE_NOGATING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CK8M force no gating during sleep</description>
            <name>CK8M_FORCE_NOGATING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>CK8M_DFREQ</description>
            <name>CK8M_DFREQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CK8M force power down</description>
            <name>CK8M_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CK8M force power up</description>
            <name>CK8M_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>force enable xtal clk gating</description>
            <name>XTAL_GLOBAL_FORCE_GATING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>force bypass xtal clk gating</description>
            <name>XTAL_GLOBAL_FORCE_NOGATING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>fast_clk_rtc sel. 0: XTAL div 4</description>
            <name>FAST_CLK_RTC_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>slelect rtc slow clk</description>
            <name>ANA_CLK_RTC_SEL</name>
          </field>
        </fields>
        <name>RTC_CLK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x11583218</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>used to sync div bus. clear vld before set reg_rtc_ana_clk_div</description>
            <name>RTC_ANA_CLK_DIV_VLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>the clk divider num of RTC_CLK</description>
            <name>RTC_ANA_CLK_DIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>flag rtc_slow_clk_next_edge</description>
            <name>RTC_SLOW_CLK_NEXT_EDGE</name>
          </field>
        </fields>
        <name>RTC_SLOW_CLK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x400000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>timer count to apply reg_sdio_dcap after sdio power on</description>
            <name>SDIO_TIMER_TARGET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Tieh = 1 mode drive ability. Initially set to 0 to limit charge current</description>
            <name>SDIO_DTHDRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>ability to prevent LDO from overshoot</description>
            <name>SDIO_DCAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>add resistor from ldo output to ground. 0: no res</description>
            <name>SDIO_INITI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>0 to set init[1:0]=0</description>
            <name>SDIO_EN_INITI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>tune current limit threshold when tieh = 0. About 800mA/(8+d)</description>
            <name>SDIO_DCURLIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>select current limit mode</description>
            <name>SDIO_MODECURLIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable current limit</description>
            <name>SDIO_ENCURLIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>power down SDIO_REG in sleep. Only active when reg_sdio_force = 0</description>
            <name>SDIO_REG_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: use SW option to control SDIO_REG</description>
            <name>SDIO_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SW option for SDIO_TIEH. Only active when reg_sdio_force = 1</description>
            <name>SDIO_TIEH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read only register for REG1P8_READY</description>
            <name>_1P8_READY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SW option for DREFL_SDIO. Only active when reg_sdio_force = 1</description>
            <name>DREFL_SDIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SW option for DREFM_SDIO. Only active when reg_sdio_force = 1</description>
            <name>DREFM_SDIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SW option for DREFH_SDIO. Only active when reg_sdio_force = 1</description>
            <name>DREFH_SDIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>XPD_SDIO</name>
          </field>
        </fields>
        <name>RTC_SDIO_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xAB0BE0A</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <name>DG_VDD_DRV_B_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <name>DG_VDD_DRV_B_SLP_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bias buf when rtc in normal work state</description>
            <name>BIAS_BUF_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bias buf when rtc in wakeup state</description>
            <name>BIAS_BUF_WAKE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bias buf when rtc in sleep state</description>
            <name>BIAS_BUF_DEEP_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bias buf when rtc in monitor state</description>
            <name>BIAS_BUF_MONITOR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xpd cur when rtc in sleep_state</description>
            <name>PD_CUR_DEEP_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>xpd cur when rtc in monitor state</description>
            <name>PD_CUR_MONITOR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bias_sleep when rtc in sleep_state</description>
            <name>BIAS_SLEEP_DEEP_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bias_sleep when rtc in monitor state</description>
            <name>BIAS_SLEEP_MONITOR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>DBG_ATTEN when rtc in sleep state</description>
            <name>DBG_ATTEN_DEEP_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>DBG_ATTEN when rtc in monitor state</description>
            <name>DBG_ATTEN_MONITOR</name>
          </field>
        </fields>
        <name>RTC_BIAS_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10800</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>software enable digital regulator cali</description>
            <name>DIG_REG_CAL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SCK_DCAP</description>
            <name>SCK_DCAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC_DBOOST force power down</description>
            <name>DBOOST_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC_DBOOST force power up</description>
            <name>DBOOST_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC_REG force power down (for RTC_REG power down means decrease the voltage to 0.8v or lower )</description>
            <name>REGULATOR_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTC_REG force power up</description>
            <name>REGULATOR_FORCE_PU</name>
          </field>
        </fields>
        <name>RTC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA0000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc pad force hold</description>
            <name>RTC_PAD_FORCE_HOLD</name>
          </field>
        </fields>
        <name>RTC_PWC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>vdd_spi drv's software value</description>
            <name>VDD_SPI_PWR_DRV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>vdd_spi drv use software value</description>
            <name>VDD_SPI_PWR_FORCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>memories in digital core force PD in sleep</description>
            <name>LSLP_MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>memories in digital core force PU in sleep</description>
            <name>LSLP_MEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bt force power down</description>
            <name>BT_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bt force power up</description>
            <name>BT_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital peri force power down</description>
            <name>DG_PERI_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital peri force power up</description>
            <name>DG_PERI_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>fastmemory  retention mode in sleep</description>
            <name>RTC_FASTMEM_FORCE_LPD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>fastmemory donlt entry retention mode in sleep</description>
            <name>RTC_FASTMEM_FORCE_LPU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wifi force power down</description>
            <name>WIFI_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wifi force power up</description>
            <name>WIFI_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital core force power down</description>
            <name>DG_WRAP_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital core force power up</description>
            <name>DG_WRAP_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>cpu core force power down</description>
            <name>CPU_TOP_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>cpu force power up</description>
            <name>CPU_TOP_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down bt in sleep</description>
            <name>BT_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down digital peri in sleep</description>
            <name>DG_PERI_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down cpu in sleep</description>
            <name>CPU_TOP_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down wifi in sleep</description>
            <name>WIFI_PD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down digital wrap in sleep</description>
            <name>DG_WRAP_PD_EN</name>
          </field>
        </fields>
        <name>DIG_PWC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x555010</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>DIG_ISO force off</description>
            <name>FORCE_OFF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>DIG_ISO force on</description>
            <name>FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read only register to indicate digital pad auto-hold status</description>
            <name>DG_PAD_AUTOHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wtite only register to clear digital pad auto-hold</description>
            <name>CLR_DG_PAD_AUTOHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital pad enable auto-hold</description>
            <name>DG_PAD_AUTOHOLD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital pad force no ISO</description>
            <name>DG_PAD_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital pad force ISO</description>
            <name>DG_PAD_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital pad force un-hold</description>
            <name>DG_PAD_FORCE_UNHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital pad force hold</description>
            <name>DG_PAD_FORCE_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bt force ISO</description>
            <name>BT_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>bt force no ISO</description>
            <name>BT_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Digital peri force ISO</description>
            <name>DG_PERI_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital peri force no ISO</description>
            <name>DG_PERI_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>cpu force ISO</description>
            <name>CPU_TOP_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>cpu force no ISO</description>
            <name>CPU_TOP_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wifi force ISO</description>
            <name>WIFI_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wifi force no ISO</description>
            <name>WIFI_FORCE_NOISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital core force ISO</description>
            <name>DG_WRAP_FORCE_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital core force no ISO</description>
            <name>DG_WRAP_FORCE_NOISO</name>
          </field>
        </fields>
        <name>DIG_ISO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xAA805080</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>chip reset siginal pulse width</description>
            <name>WDT_CHIP_RESET_WIDTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wdt reset whole chip enable</description>
            <name>WDT_CHIP_RESET_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>pause WDT in sleep</description>
            <name>WDT_PAUSE_IN_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable WDT reset APP CPU</description>
            <name>WDT_APPCPU_RESET_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable WDT reset PRO CPU</description>
            <name>WDT_PROCPU_RESET_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable WDT in flash boot</description>
            <name>WDT_FLASHBOOT_MOD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>system reset counter length</description>
            <name>WDT_SYS_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>CPU reset counter length</description>
            <name>WDT_CPU_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>1: interrupt stage en</description>
            <name>WDT_STG3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>1: interrupt stage en</description>
            <name>WDT_STG2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>1: interrupt stage en</description>
            <name>WDT_STG1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>1: interrupt stage en</description>
            <name>WDT_STG0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable rtc wdt</description>
            <name>WDT_EN</name>
          </field>
        </fields>
        <name>RTC_WDTCONFIG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x13214</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>the hold time of stage0</description>
            <name>WDT_STG0_HOLD</name>
          </field>
        </fields>
        <name>RTC_WDTCONFIG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x30D40</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>the hold time of stage1</description>
            <name>WDT_STG1_HOLD</name>
          </field>
        </fields>
        <name>RTC_WDTCONFIG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x13880</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>the hold time of stage2</description>
            <name>WDT_STG2_HOLD</name>
          </field>
        </fields>
        <name>RTC_WDTCONFIG3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>the hold time of stage3</description>
            <name>WDT_STG3_HOLD</name>
          </field>
        </fields>
        <name>RTC_WDTCONFIG4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>sw feed rtc wdt</description>
            <name>RTC_WDT_FEED</name>
          </field>
        </fields>
        <name>RTC_WDTFEED</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>the key of rtc wdt</description>
            <name>WDT_WKEY</name>
          </field>
        </fields>
        <name>RTC_WDTWPROTECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>swd reset flag</description>
            <name>SWD_RESET_FLAG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>swd interrupt for feeding</description>
            <name>SWD_FEED_INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Bypass swd rst</description>
            <name>SWD_BYPASS_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>adjust signal width send to swd</description>
            <name>SWD_SIGNAL_WIDTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reset swd reset flag</description>
            <name>SWD_RST_FLAG_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sw feed swd</description>
            <name>SWD_FEED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>disabel SWD</description>
            <name>SWD_DISABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>automatically feed swd when int comes</description>
            <name>SWD_AUTO_FEED_EN</name>
          </field>
        </fields>
        <name>RTC_SWD_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4B00000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>the key of super wdt</description>
            <name>SWD_WKEY</name>
          </field>
        </fields>
        <name>RTC_SWD_WPROTECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>{reg_sw_stall_appcpu_c1[5:0]</description>
            <name>SW_STALL_APPCPU_C1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>stall cpu by software</description>
            <name>SW_STALL_PROCPU_C1</name>
          </field>
        </fields>
        <name>RTC_SW_CPU_STALL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reserved register</description>
            <name>RTC_SCRATCH4</name>
          </field>
        </fields>
        <name>RTC_STORE4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reserved register</description>
            <name>RTC_SCRATCH5</name>
          </field>
        </fields>
        <name>RTC_STORE5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reserved register</description>
            <name>RTC_SCRATCH6</name>
          </field>
        </fields>
        <name>RTC_STORE6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reserved register</description>
            <name>RTC_SCRATCH7</name>
          </field>
        </fields>
        <name>RTC_STORE7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rom0 power down</description>
            <name>XPD_ROM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External DCDC power down</description>
            <name>XPD_DIG_DCDC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc peripheral iso</description>
            <name>RTC_PERI_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc peripheral power down</description>
            <name>XPD_RTC_PERI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wifi iso</description>
            <name>WIFI_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wifi wrap power down</description>
            <name>XPD_WIFI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital wrap iso</description>
            <name>DIG_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>digital wrap power down</description>
            <name>XPD_DIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch should start to work</description>
            <name>RTC_TOUCH_STATE_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch is about to working. Switch rtc main state</description>
            <name>RTC_TOUCH_STATE_SWITCH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch is in sleep state</description>
            <name>RTC_TOUCH_STATE_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>touch is done</description>
            <name>RTC_TOUCH_STATE_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ulp/cocpu should start to work</description>
            <name>RTC_COCPU_STATE_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ulp/cocpu is about to working. Switch rtc main state</description>
            <name>RTC_COCPU_STATE_SWITCH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ulp/cocpu is in sleep state</description>
            <name>RTC_COCPU_STATE_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ulp/cocpu is done</description>
            <name>RTC_COCPU_STATE_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>no use any more</description>
            <name>RTC_MAIN_STATE_XTAL_ISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc main state machine is in states that pll should be running</description>
            <name>RTC_MAIN_STATE_PLL_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc is ready to receive wake up trigger from wake up source</description>
            <name>RTC_RDY_FOR_WAKEUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc main state machine has been waited for some cycles</description>
            <name>RTC_MAIN_STATE_WAIT_END</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc main state machine is in the states of wakeup process</description>
            <name>RTC_IN_WAKEUP_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc main state machine is in the states of low power</description>
            <name>RTC_IN_LOW_POWER_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc main state machine is in wait 8m state</description>
            <name>RTC_MAIN_STATE_IN_WAIT_8M</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc main state machine is in wait pll state</description>
            <name>RTC_MAIN_STATE_IN_WAIT_PLL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc main state machine is in wait xtal state</description>
            <name>RTC_MAIN_STATE_IN_WAIT_XTL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc main state machine is in sleep state</description>
            <name>RTC_MAIN_STATE_IN_SLP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc main state machine is in idle state</description>
            <name>RTC_MAIN_STATE_IN_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>rtc main state machine status</description>
            <name>RTC_MAIN_STATE</name>
          </field>
        </fields>
        <name>RTC_LOW_POWER_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <name>RTC_LOW_POWER_DIAG1</name>
          </field>
        </fields>
        <name>RTC_DIAG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the hold configure of rtc gpio0</description>
            <name>RTC_GPIO_PIN0_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the hold configure of rtc gpio1</description>
            <name>RTC_GPIO_PIN1_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the hold configure of rtc gpio2</description>
            <name>RTC_GPIO_PIN2_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the hold configure of rtc gpio3</description>
            <name>RTC_GPIO_PIN3_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the hold configure of rtc gpio4</description>
            <name>RTC_GPIO_PIN4_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the hold configure of rtc gpio5</description>
            <name>RTC_GPIO_PIN5_HOLD</name>
          </field>
        </fields>
        <name>RTC_PAD_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>the configure of digital pad</description>
            <name>DIG_PAD_HOLD</name>
          </field>
        </fields>
        <name>DIG_PAD_HOLD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>brown out interrupt wait cycles</description>
            <name>BROWN_OUT_INT_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable close flash when brown out happens</description>
            <name>BROWN_OUT_CLOSE_FLASH_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power down RF when brown out happens</description>
            <name>BROWN_OUT_PD_RF_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>brown out reset wait cycles</description>
            <name>BROWN_OUT_RST_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable brown out reset</description>
            <name>BROWN_OUT_RST_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1:  4-pos reset</description>
            <name>BROWN_OUT_RST_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>brown_out origin reset enable</description>
            <name>BROWN_OUT_ANA_RST_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear brown out counter</description>
            <name>BROWN_OUT_CNT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable brown out</description>
            <name>BROWN_OUT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the flag of brown det from analog</description>
            <name>DET</name>
          </field>
        </fields>
        <name>RTC_BROWN_OUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x43FF0010</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>RTC timer low 32 bits</description>
            <name>RTC_TIMER_VALUE1_LOW</name>
          </field>
        </fields>
        <name>RTC_TIME_LOW1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>RTC timer high 16 bits</description>
            <name>RTC_TIMER_VALUE1_HIGH</name>
          </field>
        </fields>
        <name>RTC_TIME_HIGH1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>xtal 32k watch dog backup clock factor</description>
            <name>XTAL32K_CLK_FACTOR</name>
          </field>
        </fields>
        <name>RTC_XTAL32K_CLK_FACTOR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>cycles to wait to return noral xtal 32k</description>
            <name>XTAL32K_RETURN_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>cycles to wait to repower on xtal 32k</description>
            <name>XTAL32K_RESTART_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>If no clock detected for this amount of time</description>
            <name>XTAL32K_WDT_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>if restarted xtal32k period is smaller than this</description>
            <name>XTAL32K_STABLE_THRES</name>
          </field>
        </fields>
        <name>RTC_XTAL32K_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF00000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>disable io_mux reset</description>
            <name>IO_MUX_RESET_DISABLE</name>
          </field>
        </fields>
        <name>RTC_USB_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <description>RTC_CNTL_RTC_SLP_REJECT_CAUSE_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>sleep reject cause</description>
            <name>REJECT_CAUSE</name>
          </field>
        </fields>
        <name>RTC_SLP_REJECT_CAUSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>force chip entry download mode</description>
            <name>FORCE_DOWNLOAD_BOOT</name>
          </field>
        </fields>
        <name>RTC_OPTION1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>RTC_CNTL_RTC_SLP_WAKEUP_CAUSE_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x11</bitWidth>
            <description>sleep wakeup cause</description>
            <name>WAKEUP_CAUSE</name>
          </field>
        </fields>
        <name>RTC_SLP_WAKEUP_CAUSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>sleep cycles for ULP-coprocessor timer</description>
            <name>ULP_CP_TIMER_SLP_CYCLE</name>
          </field>
        </fields>
        <name>RTC_ULP_CP_TIMER_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC800</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable sleep wakeup interrupt</description>
            <name>SLP_WAKEUP_INT_ENA_W1TS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable sleep reject interrupt</description>
            <name>SLP_REJECT_INT_ENA_W1TS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable RTC WDT interrupt</description>
            <name>RTC_WDT_INT_ENA_W1TS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable brown out interrupt</description>
            <name>RTC_BROWN_OUT_INT_ENA_W1TS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable RTC main timer interrupt</description>
            <name>RTC_MAIN_TIMER_INT_ENA_W1TS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable super watch dog interrupt</description>
            <name>RTC_SWD_INT_ENA_W1TS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable xtal32k_dead  interrupt</description>
            <name>RTC_XTAL32K_DEAD_INT_ENA_W1TS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enbale gitch det interrupt</description>
            <name>RTC_GLITCH_DET_INT_ENA_W1TS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enbale bbpll cal interrupt</description>
            <name>RTC_BBPLL_CAL_INT_ENA_W1TS</name>
          </field>
        </fields>
        <name>INT_ENA_RTC_W1TS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear sleep wakeup interrupt enable</description>
            <name>SLP_WAKEUP_INT_ENA_W1TC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear sleep reject interrupt enable</description>
            <name>SLP_REJECT_INT_ENA_W1TC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear RTC WDT interrupt enable</description>
            <name>RTC_WDT_INT_ENA_W1TC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear brown out interrupt enable</description>
            <name>RTC_BROWN_OUT_INT_ENA_W1TC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear RTC main timer interrupt enable</description>
            <name>RTC_MAIN_TIMER_INT_ENA_W1TC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear super watch dog interrupt enable</description>
            <name>RTC_SWD_INT_ENA_W1TC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear xtal32k_dead  interrupt enable</description>
            <name>RTC_XTAL32K_DEAD_INT_ENA_W1TC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear gitch det interrupt enable</description>
            <name>RTC_GLITCH_DET_INT_ENA_W1TC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear bbpll cal interrupt enable</description>
            <name>RTC_BBPLL_CAL_INT_ENA_W1TC</name>
          </field>
        </fields>
        <name>INT_ENA_RTC_W1TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Retention clk sel</description>
            <name>RETENTION_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Retention done wait time</description>
            <name>RETENTION_DONE_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Retention clkoff wait time</description>
            <name>RETENTION_CLKOFF_WAIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable cpu retention when light sleep</description>
            <name>RETENTION_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>wait cycles for rention operation</description>
            <name>RETENTION_WAIT</name>
          </field>
        </fields>
        <name>RTC_CNTL_RETENTION_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA0D00000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>select use analog fib signal</description>
            <name>RTC_FIB_SEL</name>
          </field>
        </fields>
        <name>RTC_FIB_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>rtc gpio wakeup flag</description>
            <name>RTC_GPIO_WAKEUP_STATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clear rtc gpio wakeup flag</description>
            <name>RTC_GPIO_WAKEUP_STATUS_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable rtc io clk gate</description>
            <name>RTC_GPIO_PIN_CLK_GATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>configure gpio wakeup type</description>
            <name>RTC_GPIO_PIN5_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>configure gpio wakeup type</description>
            <name>RTC_GPIO_PIN4_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>configure gpio wakeup type</description>
            <name>RTC_GPIO_PIN3_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>configure gpio wakeup type</description>
            <name>RTC_GPIO_PIN2_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>configure gpio wakeup type</description>
            <name>RTC_GPIO_PIN1_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>configure gpio wakeup type</description>
            <name>RTC_GPIO_PIN0_INT_TYPE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable wakeup from rtc gpio5</description>
            <name>RTC_GPIO_PIN5_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable wakeup from rtc gpio4</description>
            <name>RTC_GPIO_PIN4_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable wakeup from rtc gpio3</description>
            <name>RTC_GPIO_PIN3_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable wakeup from rtc gpio2</description>
            <name>RTC_GPIO_PIN2_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable wakeup from rtc gpio1</description>
            <name>RTC_GPIO_PIN1_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable wakeup from rtc gpio0</description>
            <name>RTC_GPIO_PIN0_WAKEUP_ENABLE</name>
          </field>
        </fields>
        <name>RTC_CNTL_GPIO_WAKEUP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>use for debug</description>
            <name>RTC_DEBUG_12M_NO_GATING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>use for debug</description>
            <name>RTC_DEBUG_BIT_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>use for debug</description>
            <name>RTC_DEBUG_SEL0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>use for debug</description>
            <name>RTC_DEBUG_SEL1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>use for debug</description>
            <name>RTC_DEBUG_SEL2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>use for debug</description>
            <name>RTC_DEBUG_SEL3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>use for debug</description>
            <name>RTC_DEBUG_SEL4</name>
          </field>
        </fields>
        <name>RTC_CNTL_DBG_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN5_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN4_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN3_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN2_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN1_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN0_MUX_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN5_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN4_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN3_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN2_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN1_FUN_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>use for debug</description>
            <name>RTC_GPIO_PIN0_FUN_SEL</name>
          </field>
        </fields>
        <name>RTC_CNTL_DBG_MAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_sar2_pwdet_cct</description>
            <name>SAR2_PWDET_CCT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>force power up SAR</description>
            <name>FORCE_XPD_SAR</name>
          </field>
        </fields>
        <name>RTC_CNTL_SENSOR_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>use for debug</description>
            <name>SAR_DEBUG_SEL</name>
          </field>
        </fields>
        <name>RTC_CNTL_DBG_SAR_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>power glitch desense</description>
            <name>POWER_GLITCH_DSENSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>force disable power glitch</description>
            <name>POWER_GLITCH_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>force enable power glitch</description>
            <name>POWER_GLITCH_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>use efuse value control power glitch enable</description>
            <name>POWER_GLITCH_EFUSE_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>enable power glitch</description>
            <name>POWER_GLITCH_EN</name>
          </field>
        </fields>
        <name>RTC_CNTL_PG_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1FC</addressOffset>
        <description>rtc configure register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>verision</description>
            <name>RTC_CNTL_DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007270</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x178</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x600C1000</baseAddress>
    <description>Sensitive</description>
    <groupName>SENSITIVE</groupName>
    <interrupts></interrupts>
    <name>SENSITIVE</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>SENSITIVE_ROM_TABLE_LOCK_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rom_table_lock</description>
            <name>ROM_TABLE_LOCK</name>
          </field>
        </fields>
        <name>ROM_TABLE_LOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>SENSITIVE_ROM_TABLE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>rom_table</description>
            <name>ROM_TABLE</name>
          </field>
        </fields>
        <name>ROM_TABLE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>SENSITIVE_PRIVILEGE_MODE_SEL_LOCK_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>privilege_mode_sel_lock</description>
            <name>PRIVILEGE_MODE_SEL_LOCK</name>
          </field>
        </fields>
        <name>PRIVILEGE_MODE_SEL_LOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>SENSITIVE_PRIVILEGE_MODE_SEL_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>privilege_mode_sel</description>
            <name>PRIVILEGE_MODE_SEL</name>
          </field>
        </fields>
        <name>PRIVILEGE_MODE_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>SENSITIVE_APB_PERIPHERAL_ACCESS_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>apb_peripheral_access_lock</description>
            <name>APB_PERIPHERAL_ACCESS_LOCK</name>
          </field>
        </fields>
        <name>APB_PERIPHERAL_ACCESS_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>SENSITIVE_APB_PERIPHERAL_ACCESS_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>apb_peripheral_access_split_burst</description>
            <name>APB_PERIPHERAL_ACCESS_SPLIT_BURST</name>
          </field>
        </fields>
        <name>APB_PERIPHERAL_ACCESS_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>SENSITIVE_INTERNAL_SRAM_USAGE_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal_sram_usage_lock</description>
            <name>INTERNAL_SRAM_USAGE_LOCK</name>
          </field>
        </fields>
        <name>INTERNAL_SRAM_USAGE_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>SENSITIVE_INTERNAL_SRAM_USAGE_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal_sram_usage_cpu_cache</description>
            <name>INTERNAL_SRAM_USAGE_CPU_CACHE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>internal_sram_usage_cpu_sram</description>
            <name>INTERNAL_SRAM_USAGE_CPU_SRAM</name>
          </field>
        </fields>
        <name>INTERNAL_SRAM_USAGE_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>SENSITIVE_INTERNAL_SRAM_USAGE_3_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>internal_sram_usage_mac_dump_sram</description>
            <name>INTERNAL_SRAM_USAGE_MAC_DUMP_SRAM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal_sram_alloc_mac_dump</description>
            <name>INTERNAL_SRAM_ALLOC_MAC_DUMP</name>
          </field>
        </fields>
        <name>INTERNAL_SRAM_USAGE_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>SENSITIVE_INTERNAL_SRAM_USAGE_4_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>internal_sram_usage_log_sram</description>
            <name>INTERNAL_SRAM_USAGE_LOG_SRAM</name>
          </field>
        </fields>
        <name>INTERNAL_SRAM_USAGE_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>SENSITIVE_CACHE_TAG_ACCESS_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>cache_tag_access_lock</description>
            <name>CACHE_TAG_ACCESS_LOCK</name>
          </field>
        </fields>
        <name>CACHE_TAG_ACCESS_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>SENSITIVE_CACHE_TAG_ACCESS_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>pro_i_tag_rd_acs</description>
            <name>PRO_I_TAG_RD_ACS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>pro_i_tag_wr_acs</description>
            <name>PRO_I_TAG_WR_ACS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>pro_d_tag_rd_acs</description>
            <name>PRO_D_TAG_RD_ACS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>pro_d_tag_wr_acs</description>
            <name>PRO_D_TAG_WR_ACS</name>
          </field>
        </fields>
        <name>CACHE_TAG_ACCESS_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>SENSITIVE_CACHE_MMU_ACCESS_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>cache_mmu_access_lock</description>
            <name>CACHE_MMU_ACCESS_LOCK</name>
          </field>
        </fields>
        <name>CACHE_MMU_ACCESS_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>SENSITIVE_CACHE_MMU_ACCESS_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>pro_mmu_rd_acs</description>
            <name>PRO_MMU_RD_ACS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>pro_mmu_wr_acs</description>
            <name>PRO_MMU_WR_ACS</name>
          </field>
        </fields>
        <name>CACHE_MMU_ACCESS_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_spi2_pms_constrain_lock</description>
            <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_spi2_pms_constrain_sram_world_0_pms_0</description>
            <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_spi2_pms_constrain_sram_world_0_pms_1</description>
            <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_spi2_pms_constrain_sram_world_0_pms_2</description>
            <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_spi2_pms_constrain_sram_world_0_pms_3</description>
            <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_spi2_pms_constrain_sram_world_1_pms_0</description>
            <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_spi2_pms_constrain_sram_world_1_pms_1</description>
            <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_spi2_pms_constrain_sram_world_1_pms_2</description>
            <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_spi2_pms_constrain_sram_world_1_pms_3</description>
            <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF0FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_uchi0_pms_constrain_lock</description>
            <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_0</description>
            <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_1</description>
            <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_2</description>
            <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_3</description>
            <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_0</description>
            <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_1</description>
            <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_2</description>
            <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_3</description>
            <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <name>DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF0FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_i2s0_pms_constrain_lock</description>
            <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_0</description>
            <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_1</description>
            <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_2</description>
            <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_3</description>
            <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_0</description>
            <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_1</description>
            <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_2</description>
            <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_3</description>
            <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF0FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_mac_pms_constrain_lock</description>
            <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_mac_pms_constrain_sram_world_0_pms_0</description>
            <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_mac_pms_constrain_sram_world_0_pms_1</description>
            <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_mac_pms_constrain_sram_world_0_pms_2</description>
            <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_mac_pms_constrain_sram_world_0_pms_3</description>
            <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_mac_pms_constrain_sram_world_1_pms_0</description>
            <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_mac_pms_constrain_sram_world_1_pms_1</description>
            <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_mac_pms_constrain_sram_world_1_pms_2</description>
            <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_mac_pms_constrain_sram_world_1_pms_3</description>
            <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF0FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_backup_pms_constrain_lock</description>
            <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_backup_pms_constrain_sram_world_0_pms_0</description>
            <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_backup_pms_constrain_sram_world_0_pms_1</description>
            <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_backup_pms_constrain_sram_world_0_pms_2</description>
            <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_backup_pms_constrain_sram_world_0_pms_3</description>
            <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_backup_pms_constrain_sram_world_1_pms_0</description>
            <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_backup_pms_constrain_sram_world_1_pms_1</description>
            <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_backup_pms_constrain_sram_world_1_pms_2</description>
            <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_backup_pms_constrain_sram_world_1_pms_3</description>
            <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF0FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_lc_pms_constrain_lock</description>
            <name>DMA_APBPERI_LC_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>DMA_APBPERI_LC_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_lc_pms_constrain_sram_world_0_pms_0</description>
            <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_lc_pms_constrain_sram_world_0_pms_1</description>
            <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_lc_pms_constrain_sram_world_0_pms_2</description>
            <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_lc_pms_constrain_sram_world_0_pms_3</description>
            <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_lc_pms_constrain_sram_world_1_pms_0</description>
            <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_lc_pms_constrain_sram_world_1_pms_1</description>
            <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_lc_pms_constrain_sram_world_1_pms_2</description>
            <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_lc_pms_constrain_sram_world_1_pms_3</description>
            <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <name>DMA_APBPERI_LC_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF0FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_aes_pms_constrain_lock</description>
            <name>DMA_APBPERI_AES_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>DMA_APBPERI_AES_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_aes_pms_constrain_sram_world_0_pms_0</description>
            <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_aes_pms_constrain_sram_world_0_pms_1</description>
            <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_aes_pms_constrain_sram_world_0_pms_2</description>
            <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_aes_pms_constrain_sram_world_0_pms_3</description>
            <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_aes_pms_constrain_sram_world_1_pms_0</description>
            <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_aes_pms_constrain_sram_world_1_pms_1</description>
            <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_aes_pms_constrain_sram_world_1_pms_2</description>
            <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_aes_pms_constrain_sram_world_1_pms_3</description>
            <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <name>DMA_APBPERI_AES_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF0FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_sha_pms_constrain_lock</description>
            <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_sha_pms_constrain_sram_world_0_pms_0</description>
            <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_sha_pms_constrain_sram_world_0_pms_1</description>
            <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_sha_pms_constrain_sram_world_0_pms_2</description>
            <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_sha_pms_constrain_sram_world_0_pms_3</description>
            <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_sha_pms_constrain_sram_world_1_pms_0</description>
            <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_sha_pms_constrain_sram_world_1_pms_1</description>
            <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_sha_pms_constrain_sram_world_1_pms_2</description>
            <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_sha_pms_constrain_sram_world_1_pms_3</description>
            <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF0FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_adc_dac_pms_constrain_lock</description>
            <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_0</description>
            <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_1</description>
            <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_2</description>
            <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_3</description>
            <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_0</description>
            <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_1</description>
            <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_2</description>
            <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_3</description>
            <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF0FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_PMS_MONITOR_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_pms_monitor_lock</description>
            <name>DMA_APBPERI_PMS_MONITOR_LOCK</name>
          </field>
        </fields>
        <name>DMA_APBPERI_PMS_MONITOR_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_PMS_MONITOR_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_pms_monitor_violate_clr</description>
            <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_pms_monitor_violate_en</description>
            <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_EN</name>
          </field>
        </fields>
        <name>DMA_APBPERI_PMS_MONITOR_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_PMS_MONITOR_2_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_pms_monitor_violate_intr</description>
            <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>dma_apbperi_pms_monitor_violate_status_world</description>
            <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WORLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>dma_apbperi_pms_monitor_violate_status_addr</description>
            <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_ADDR</name>
          </field>
        </fields>
        <name>DMA_APBPERI_PMS_MONITOR_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>SENSITIVE_DMA_APBPERI_PMS_MONITOR_3_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>dma_apbperi_pms_monitor_violate_status_wr</description>
            <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>dma_apbperi_pms_monitor_violate_status_byteen</description>
            <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_BYTEEN</name>
          </field>
        </fields>
        <name>DMA_APBPERI_PMS_MONITOR_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_x_iram0_dram0_dma_split_line_constrain_lock</description>
            <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_iram0_dram0_dma_sram_category_0</description>
            <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_iram0_dram0_dma_sram_category_1</description>
            <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_iram0_dram0_dma_sram_category_2</description>
            <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>core_x_iram0_dram0_dma_sram_splitaddr</description>
            <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_SPLITADDR</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_iram0_sram_line_0_category_0</description>
            <name>CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_iram0_sram_line_0_category_1</description>
            <name>CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_iram0_sram_line_0_category_2</description>
            <name>CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>core_x_iram0_sram_line_0_splitaddr</description>
            <name>CORE_X_IRAM0_SRAM_LINE_0_SPLITADDR</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_iram0_sram_line_1_category_0</description>
            <name>CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_iram0_sram_line_1_category_1</description>
            <name>CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_iram0_sram_line_1_category_2</description>
            <name>CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>core_x_iram0_sram_line_1_splitaddr</description>
            <name>CORE_X_IRAM0_SRAM_LINE_1_SPLITADDR</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_dma_sram_line_0_category_0</description>
            <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_dma_sram_line_0_category_1</description>
            <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_dma_sram_line_0_category_2</description>
            <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>core_x_dram0_dma_sram_line_0_splitaddr</description>
            <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_SPLITADDR</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_dma_sram_line_1_category_0</description>
            <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_dma_sram_line_1_category_1</description>
            <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_dma_sram_line_1_category_2</description>
            <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>core_x_dram0_dma_sram_line_1_splitaddr</description>
            <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_SPLITADDR</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_x_iram0_pms_constrain_lock</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_sram_world_1_pms_0</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_sram_world_1_pms_1</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_sram_world_1_pms_2</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_sram_world_1_pms_3</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_sram_world_1_cachedataarray_pms_0</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_rom_world_1_pms</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1C7FFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_sram_world_0_pms_0</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_sram_world_0_pms_1</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_sram_world_0_pms_2</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_sram_world_0_pms_3</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_sram_world_0_cachedataarray_pms_0</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_x_iram0_pms_constrain_rom_world_0_pms</description>
            <name>CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS</name>
          </field>
        </fields>
        <name>CORE_X_IRAM0_PMS_CONSTRAIN_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1C7FFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_iram0_pms_monitor_lock</description>
            <name>CORE_0_IRAM0_PMS_MONITOR_LOCK</name>
          </field>
        </fields>
        <name>CORE_0_IRAM0_PMS_MONITOR_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_iram0_pms_monitor_violate_clr</description>
            <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_iram0_pms_monitor_violate_en</description>
            <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_EN</name>
          </field>
        </fields>
        <name>CORE_0_IRAM0_PMS_MONITOR_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_iram0_pms_monitor_violate_intr</description>
            <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_iram0_pms_monitor_violate_status_wr</description>
            <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_iram0_pms_monitor_violate_status_loadstore</description>
            <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_iram0_pms_monitor_violate_status_world</description>
            <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>core_0_iram0_pms_monitor_violate_status_addr</description>
            <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR</name>
          </field>
        </fields>
        <name>CORE_0_IRAM0_PMS_MONITOR_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_x_dram0_pms_constrain_lock</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>CORE_X_DRAM0_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_pms_constrain_sram_world_0_pms_0</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_pms_constrain_sram_world_0_pms_1</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_pms_constrain_sram_world_0_pms_2</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_pms_constrain_sram_world_0_pms_3</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_pms_constrain_sram_world_1_pms_0</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_pms_constrain_sram_world_1_pms_1</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_pms_constrain_sram_world_1_pms_2</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_pms_constrain_sram_world_1_pms_3</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_pms_constrain_rom_world_0_pms</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_x_dram0_pms_constrain_rom_world_1_pms</description>
            <name>CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS</name>
          </field>
        </fields>
        <name>CORE_X_DRAM0_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0FF0FF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_dram0_pms_monitor_lock</description>
            <name>CORE_0_DRAM0_PMS_MONITOR_LOCK</name>
          </field>
        </fields>
        <name>CORE_0_DRAM0_PMS_MONITOR_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_dram0_pms_monitor_violate_clr</description>
            <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_dram0_pms_monitor_violate_en</description>
            <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_EN</name>
          </field>
        </fields>
        <name>CORE_0_DRAM0_PMS_MONITOR_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_dram0_pms_monitor_violate_intr</description>
            <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_dram0_pms_monitor_violate_status_lock</description>
            <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_dram0_pms_monitor_violate_status_world</description>
            <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>core_0_dram0_pms_monitor_violate_status_addr</description>
            <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR</name>
          </field>
        </fields>
        <name>CORE_0_DRAM0_PMS_MONITOR_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_3_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_dram0_pms_monitor_violate_status_wr</description>
            <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>core_0_dram0_pms_monitor_violate_status_byteen</description>
            <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_BYTEEN</name>
          </field>
        </fields>
        <name>CORE_0_DRAM0_PMS_MONITOR_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD8</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_pif_pms_constrain_lock</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_uart</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_g0spi_1</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_g0spi_0</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_gpio</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_fe2</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_fe</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_timer</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_rtc</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RTC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_io_mux</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_IO_MUX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_wdg</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WDG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_misc</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_MISC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_i2c</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_uart1</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART1</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xCF0FFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_bt</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_i2c_ext0</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_uhci0</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UHCI0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_rmt</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RMT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_ledc</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_LEDC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_bb</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_timergroup</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_timergroup1</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_systimer</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTIMER</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFCC30CF3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_spi_2</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SPI_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_apb_ctrl</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_CTRL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_can</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CAN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_i2s1</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2S1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_rwbt</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RWBT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_wifimac</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WIFIMAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_pwr</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWR</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3CC0CC33</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_usb_wrap</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_WRAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_crypto_peri</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_PERI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_crypto_dma</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_DMA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_apb_adc</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_ADC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_bt_pwr</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_PWR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_usb_device</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_DEVICE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_system</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTEM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_sensitive</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SENSITIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_interrupt</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_INTERRUPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_dma_copy</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DMA_COPY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_cache_config</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CACHE_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_ad</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_AD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_dio</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_0_world_controller</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WORLD_CONTROLLER</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF3FC</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xEC</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_uart</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_g0spi_1</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_g0spi_0</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_gpio</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_fe2</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_fe</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_timer</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_rtc</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RTC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_io_mux</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_IO_MUX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_wdg</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WDG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_misc</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_MISC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_i2c</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_uart1</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART1</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xCF0FFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_bt</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_i2c_ext0</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_uhci0</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UHCI0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_rmt</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RMT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_ledc</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_LEDC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_bb</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_timergroup</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_timergroup1</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_systimer</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTIMER</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFCC30CF3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF4</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_spi_2</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SPI_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_apb_ctrl</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_CTRL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_can</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CAN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_i2s1</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2S1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_rwbt</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RWBT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_wifimac</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WIFIMAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_pwr</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWR</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3CC0CC33</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_usb_wrap</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_WRAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_crypto_peri</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_PERI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_crypto_dma</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_DMA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_apb_adc</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_ADC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_bt_pwr</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_PWR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_usb_device</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_DEVICE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_system</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTEM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_sensitive</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SENSITIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_interrupt</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_INTERRUPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_dma_copy</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DMA_COPY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_cache_config</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CACHE_CONFIG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_ad</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_AD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_dio</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_constrain_world_1_world_controller</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WORLD_CONTROLLER</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF3FC</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_9_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>core_0_pif_pms_constrain_rtcfast_spltaddr_world_0</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>core_0_pif_pms_constrain_rtcfast_spltaddr_world_1</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_1</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3FFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x100</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_0_pif_pms_constrain_rtcfast_world_0_l</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_L</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_0_pif_pms_constrain_rtcfast_world_0_h</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_H</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_0_pif_pms_constrain_rtcfast_world_1_l</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_L</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_0_pif_pms_constrain_rtcfast_world_1_h</description>
            <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_H</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_CONSTRAIN_10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x104</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>region_pms_constrain_lock</description>
            <name>REGION_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x108</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_0_area_0</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_0_AREA_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_0_area_1</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_0_AREA_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_0_area_2</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_0_AREA_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_0_area_3</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_0_AREA_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_0_area_4</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_0_AREA_4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_0_area_5</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_0_AREA_5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_0_area_6</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_0_AREA_6</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3FFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10C</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_2_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_1_area_0</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_1_AREA_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_1_area_1</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_1_AREA_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_1_area_2</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_1_AREA_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_1_area_3</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_1_AREA_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_1_area_4</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_1_AREA_4</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_1_area_5</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_1_AREA_5</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>region_pms_constrain_world_1_area_6</description>
            <name>REGION_PMS_CONSTRAIN_WORLD_1_AREA_6</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3FFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x110</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_3_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>region_pms_constrain_addr_0</description>
            <name>REGION_PMS_CONSTRAIN_ADDR_0</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x114</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_4_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>region_pms_constrain_addr_1</description>
            <name>REGION_PMS_CONSTRAIN_ADDR_1</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x118</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_5_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>region_pms_constrain_addr_2</description>
            <name>REGION_PMS_CONSTRAIN_ADDR_2</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x11C</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_6_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>region_pms_constrain_addr_3</description>
            <name>REGION_PMS_CONSTRAIN_ADDR_3</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x120</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_7_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>region_pms_constrain_addr_4</description>
            <name>REGION_PMS_CONSTRAIN_ADDR_4</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x124</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_8_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>region_pms_constrain_addr_5</description>
            <name>REGION_PMS_CONSTRAIN_ADDR_5</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x128</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_9_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>region_pms_constrain_addr_6</description>
            <name>REGION_PMS_CONSTRAIN_ADDR_6</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x12C</addressOffset>
        <description>SENSITIVE_REGION_PMS_CONSTRAIN_10_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>region_pms_constrain_addr_7</description>
            <name>REGION_PMS_CONSTRAIN_ADDR_7</name>
          </field>
        </fields>
        <name>REGION_PMS_CONSTRAIN_10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x130</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_MONITOR_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_pif_pms_monitor_lock</description>
            <name>CORE_0_PIF_PMS_MONITOR_LOCK</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_MONITOR_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x134</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_MONITOR_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_pif_pms_monitor_violate_clr</description>
            <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_pif_pms_monitor_violate_en</description>
            <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_EN</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_MONITOR_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x138</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_pif_pms_monitor_violate_intr</description>
            <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_pif_pms_monitor_violate_status_hport_0</description>
            <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>core_0_pif_pms_monitor_violate_status_hsize</description>
            <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HSIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_pif_pms_monitor_violate_status_hwrite</description>
            <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_monitor_violate_status_hworld</description>
            <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWORLD</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_MONITOR_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x13C</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_MONITOR_3_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>core_0_pif_pms_monitor_violate_status_haddr</description>
            <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HADDR</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_MONITOR_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x140</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_MONITOR_4_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_pif_pms_monitor_nonword_violate_clr</description>
            <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_pif_pms_monitor_nonword_violate_en</description>
            <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_MONITOR_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x144</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_MONITOR_5_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>core_0_pif_pms_monitor_nonword_violate_intr</description>
            <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_monitor_nonword_violate_status_hsize</description>
            <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HSIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>core_0_pif_pms_monitor_nonword_violate_status_hworld</description>
            <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HWORLD</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_MONITOR_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x148</addressOffset>
        <description>SENSITIVE_CORE_0_PIF_PMS_MONITOR_6_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>core_0_pif_pms_monitor_nonword_violate_status_haddr</description>
            <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HADDR</name>
          </field>
        </fields>
        <name>CORE_0_PIF_PMS_MONITOR_6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14C</addressOffset>
        <description>SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>backup_bus_pms_constrain_lock</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_LOCK</name>
          </field>
        </fields>
        <name>BACKUP_BUS_PMS_CONSTRAIN_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x150</addressOffset>
        <description>SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_uart</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_UART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_g0spi_1</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_G0SPI_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_g0spi_0</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_G0SPI_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_gpio</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_fe2</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_FE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_fe</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_timer</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_TIMER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_rtc</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_RTC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_io_mux</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_IO_MUX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_wdg</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_WDG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_misc</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_MISC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_i2c</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_I2C</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_uart1</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_UART1</name>
          </field>
        </fields>
        <name>BACKUP_BUS_PMS_CONSTRAIN_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xCF0FFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x154</addressOffset>
        <description>SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_bt</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_BT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_i2c_ext0</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_I2C_EXT0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_uhci0</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_UHCI0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_rmt</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_RMT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_ledc</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_LEDC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_bb</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_BB</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_timergroup</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_timergroup1</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_systimer</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_SYSTIMER</name>
          </field>
        </fields>
        <name>BACKUP_BUS_PMS_CONSTRAIN_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFCC30CF3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x158</addressOffset>
        <description>SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_spi_2</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_SPI_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_apb_ctrl</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_APB_CTRL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_can</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_CAN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_i2s1</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_I2S1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_rwbt</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_RWBT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_wifimac</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_WIFIMAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_pwr</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_PWR</name>
          </field>
        </fields>
        <name>BACKUP_BUS_PMS_CONSTRAIN_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3CC0CC33</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x15C</addressOffset>
        <description>SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_usb_wrap</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_USB_WRAP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_crypto_peri</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_PERI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_crypto_dma</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_DMA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_apb_adc</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_APB_ADC</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_bt_pwr</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_BT_PWR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_constrain_usb_device</description>
            <name>BACKUP_BUS_PMS_CONSTRAIN_USB_DEVICE</name>
          </field>
        </fields>
        <name>BACKUP_BUS_PMS_CONSTRAIN_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF3FC</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x160</addressOffset>
        <description>SENSITIVE_BACKUP_BUS_PMS_MONITOR_0_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>backup_bus_pms_monitor_lock</description>
            <name>BACKUP_BUS_PMS_MONITOR_LOCK</name>
          </field>
        </fields>
        <name>BACKUP_BUS_PMS_MONITOR_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x164</addressOffset>
        <description>SENSITIVE_BACKUP_BUS_PMS_MONITOR_1_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>backup_bus_pms_monitor_violate_clr</description>
            <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>backup_bus_pms_monitor_violate_en</description>
            <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_EN</name>
          </field>
        </fields>
        <name>BACKUP_BUS_PMS_MONITOR_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x168</addressOffset>
        <description>SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>backup_bus_pms_monitor_violate_intr</description>
            <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_INTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>backup_bus_pms_monitor_violate_status_htrans</description>
            <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HTRANS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>backup_bus_pms_monitor_violate_status_hsize</description>
            <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HSIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>backup_bus_pms_monitor_violate_status_hwrite</description>
            <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HWRITE</name>
          </field>
        </fields>
        <name>BACKUP_BUS_PMS_MONITOR_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x16C</addressOffset>
        <description>SENSITIVE_BACKUP_BUS_PMS_MONITOR_3_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>backup_bus_pms_monitor_violate_haddr</description>
            <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_HADDR</name>
          </field>
        </fields>
        <name>BACKUP_BUS_PMS_MONITOR_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x170</addressOffset>
        <description>SENSITIVE_CLOCK_GATE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>clk_en</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CLOCK_GATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFFC</addressOffset>
        <description>SENSITIVE_DATE_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>reg_date</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2010200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xB0</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x6003B000</baseAddress>
    <description>SHA (Secure Hash Algorithm) Accelerator</description>
    <groupName>SHA</groupName>
    <interrupts>
      <interrupt>
        <name>SHA</name>
        <value>0x31</value>
      </interrupt>
    </interrupts>
    <name>SHA</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>Initial configuration register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Sha mode.</description>
            <name>MODE</name>
          </field>
        </fields>
        <name>MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>SHA 512/t configuration register 0.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Sha t_string (used if and only if mode == SHA_512/t).</description>
            <name>T_STRING</name>
          </field>
        </fields>
        <name>T_STRING</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>SHA 512/t configuration register 1.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Sha t_length (used if and only if mode == SHA_512/t).</description>
            <name>T_LENGTH</name>
          </field>
        </fields>
        <name>T_LENGTH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>DMA configuration register 0.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Dma-sha block number.</description>
            <name>DMA_BLOCK_NUM</name>
          </field>
        </fields>
        <name>DMA_BLOCK_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>Typical SHA configuration register 0.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1F</bitWidth>
            <description>Reserved.</description>
            <name>START</name>
          </field>
        </fields>
        <name>START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>Typical SHA configuration register 1.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1F</bitWidth>
            <description>Reserved.</description>
            <name>CONTINUE</name>
          </field>
        </fields>
        <name>CONTINUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>Busy register.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sha busy state. 1'b0: idle. 1'b1: busy.</description>
            <name>STATE</name>
          </field>
        </fields>
        <name>BUSY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>DMA configuration register 1.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start dma-sha.</description>
            <name>DMA_START</name>
          </field>
        </fields>
        <name>DMA_START</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>DMA configuration register 2.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Continue dma-sha.</description>
            <name>DMA_CONTINUE</name>
          </field>
        </fields>
        <name>DMA_CONTINUE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>Interrupt clear register.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear sha interrupt.</description>
            <name>CLEAR_INTERRUPT</name>
          </field>
        </fields>
        <name>CLEAR_IRQ</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>Interrupt enable register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sha interrupt enable register. 1'b0: disable(default). 1'b1: enable.</description>
            <name>INTERRUPT_ENA</name>
          </field>
        </fields>
        <name>IRQ_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>Date register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>Sha date information/ sha version information.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20200616</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x41</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x42</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x43</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x45</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x46</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x47</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x49</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4A</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4B</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4D</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4E</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4F</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[16]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x51</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[17]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x52</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[18]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x53</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[19]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[20]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x55</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[21]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x56</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[22]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x57</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[23]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[24]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x59</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[25]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5A</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[26]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5B</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[27]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[28]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5D</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[29]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5E</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[30]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5F</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[31]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[32]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x61</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[33]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x62</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[34]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x63</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[35]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[36]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x65</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[37]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x66</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[38]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x67</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[39]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[40]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x69</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[41]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6A</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[42]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6B</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[43]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[44]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6D</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[45]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6E</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[46]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6F</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[47]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[48]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x71</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[49]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x72</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[50]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x73</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[51]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[52]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x75</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[53]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x76</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[54]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x77</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[55]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[56]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x79</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[57]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7A</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[58]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7B</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[59]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[60]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7D</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[61]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7E</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[62]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7F</addressOffset>
        <description>Sha H memory which contains intermediate hash or finial hash.</description>
        <fields></fields>
        <name>H_MEM[63]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x81</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x82</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x83</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x85</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x86</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x87</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x89</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8A</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8B</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8D</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8E</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8F</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[16]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x91</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[17]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x92</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[18]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x93</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[19]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[20]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x95</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[21]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x96</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[22]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x97</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[23]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[24]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x99</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[25]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9A</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[26]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9B</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[27]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[28]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9D</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[29]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9E</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[30]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9F</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[31]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[32]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA1</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[33]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA2</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[34]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA3</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[35]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[36]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA5</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[37]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA6</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[38]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA7</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[39]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[40]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA9</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[41]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAA</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[42]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAB</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[43]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[44]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAD</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[45]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAE</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[46]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAF</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[47]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[48]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB1</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[49]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB2</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[50]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB3</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[51]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[52]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB5</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[53]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB6</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[54]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB7</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[55]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[56]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB9</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[57]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBA</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[58]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBB</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[59]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[60]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBD</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[61]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBE</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[62]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBF</addressOffset>
        <description>Sha M memory which contains message.</description>
        <fields></fields>
        <name>M_MEM[63]</name>
        <size>0x8</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x48</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60003000</baseAddress>
    <description>SPI (Serial Peripheral Interface) Controller</description>
    <groupName>SPI0</groupName>
    <interrupts>
      <interrupt>
        <name>SPI_MEM_REJECT_CACHE</name>
        <value>0x28</value>
      </interrupt>
    </interrupts>
    <name>SPI0</name>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>SPI0 control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the dummy phase the signal level of spi is output by the spi controller.</description>
            <name>FDUMMY_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Apply 2 signals during command phase 1:enable 0: disable</description>
            <name>FCMD_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Apply 4 signals during command phase 1:enable 0: disable</description>
            <name>FCMD_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the bits: spi_mem_fread_qio, spi_mem_fread_dio, spi_mem_fread_qout and spi_mem_fread_dout. 1: enable 0: disable.</description>
            <name>FASTRD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations, read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to set MISO line polarity, 1: high 0, low</description>
            <name>Q_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to set MOSI line polarity, 1: high 0, low</description>
            <name>D_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write protect signal output when SPI is idle.  1: output high, 0: output low.</description>
            <name>WP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QIO</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2C2000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>SPI0 control1 register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SPI clock mode bits. 0: SPI clock is off when CS inactive 1: SPI clock is delayed one cycle after CS inactive 2: SPI clock is delayed two cycles after CS inactive 3: SPI clock is alwasy on.</description>
            <name>CLK_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI0 RX FIFO reset signal.</description>
            <name>RXFIFO_RST</name>
          </field>
        </fields>
        <name>CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>SPI0 control2 register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>(cycles-1) of prepare phase by spi clock this bits are combined with spi_mem_cs_setup bit.</description>
            <name>CS_SETUP_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Spi cs signal is delayed to inactive by spi clock this bits are combined with spi_mem_cs_hold bit.</description>
            <name>CS_HOLD_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>These bits are used to set the minimum CS high time tSHSL between SPI burst transfer when accesses to flash. tSHSL is (SPI_MEM_CS_HOLD_DELAY[5:0] + 1) MSPI core clock cycles.</description>
            <name>CS_HOLD_DELAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The FSM will be reset.</description>
            <name>SYNC_RESET</name>
          </field>
        </fields>
        <name>CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x21</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>SPI clock division control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the master mode it must be equal to spi_mem_clkcnt_N.</description>
            <name>CLKCNT_L</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the master mode it must be floor((spi_mem_clkcnt_N+1)/2-1).</description>
            <name>CLKCNT_H</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the master mode it is the divider of spi_mem_clk. So spi_mem_clk frequency is system/(spi_mem_clkcnt_N+1)</description>
            <name>CLKCNT_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit in 1-division mode.</description>
            <name>CLK_EQU_SYSCLK</name>
          </field>
        </fields>
        <name>CLOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x30103</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>SPI0 user register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs keep low when spi is in  done  phase. 1: enable 0: disable.</description>
            <name>CS_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs is enable when spi is in  prepare  phase. 1: enable 0: disable.</description>
            <name>CS_SETUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the bit combined with spi_mem_mosi_delay_mode bits to set mosi signal delay mode.</description>
            <name>CK_OUT_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi clock is disable in dummy phase when the bit is enable.</description>
            <name>USR_DUMMY_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the dummy phase of an operation.</description>
            <name>USR_DUMMY</name>
          </field>
        </fields>
        <name>USER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>SPI0 user1 register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The length in spi_mem_clk cycles of dummy phase. The register value shall be (cycle_num-1).</description>
            <name>USR_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>USR_ADDR_BITLEN</name>
          </field>
        </fields>
        <name>USER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5C000007</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>SPI0 user2 register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The value of  command.</description>
            <name>USR_COMMAND_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The length in bits of command phase. The register value shall be (bit_num-1)</description>
            <name>USR_COMMAND_BITLEN</name>
          </field>
        </fields>
        <name>USER2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x70000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>SPI0 read control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Mode bits in the flash fast read mode  it is combined with spi_mem_fastrd_mode bit.</description>
            <name>WB_MODE</name>
          </field>
        </fields>
        <name>RD_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>SPI0 misc register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate the  spi0_mst_st controlled transmitting is done.</description>
            <name>TRANS_END</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable the interrupt of  spi0_mst_st controlled transmitting is done.</description>
            <name>TRANS_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to indicate the  spi0_slv_st controlled transmitting is done.</description>
            <name>CSPI_ST_TRANS_END</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable the interrupt of spi0_slv_st controlled transmitting is done.</description>
            <name>CSPI_ST_TRANS_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk line is high when idle     0: spi clk line is low when idle</description>
            <name>CK_IDLE_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs line keep low when the bit is set.</description>
            <name>CS_KEEP_ACTIVE</name>
          </field>
        </fields>
        <name>MISC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>SPI0 bit mode control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0, Cache access enable, 1: enable, 0:disable.</description>
            <name>CACHE_REQ_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0,  cache  read flash with 4 bytes address, 1: enable, 0:disable.</description>
            <name>CACHE_USR_ADDR_4BYTE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0,  cache  read flash for user define command, 1: enable, 0:disable.</description>
            <name>CACHE_FLASH_USR_CMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 flash, din phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_fread_dio.</description>
            <name>FDIN_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 flash, dout phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_fread_dio.</description>
            <name>FDOUT_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 flash, address phase apply 2 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_dio.</description>
            <name>FADDR_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 flash, din phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio.</description>
            <name>FDIN_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 flash, dout phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio.</description>
            <name>FDOUT_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI0 flash, address phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio.</description>
            <name>FADDR_QUAD</name>
          </field>
        </fields>
        <name>CACHE_FCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>SPI0 FSM status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The current status of SPI0 slave FSM: spi0_slv_st. 0: idle state, 1: preparation state, 2: send command state, 3: send address state, 4: wait state, 5: read data state, 6:write data state, 7: done state, 8: read data end state.</description>
            <name>CSPI_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>The current status of SPI0 master FSM: spi0_mst_st. 0: idle state, 1:EM_CACHE_GRANT , 2: program/erase suspend state, 3: SPI0 read data state, 4: wait cache/EDMA sent data is stored in SPI0 TX FIFO, 5: SPI0 write data state.</description>
            <name>EM_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>The lock delay time of SPI0/1 arbiter by spi0_slv_st, after PER is sent by SPI1.</description>
            <name>CSPI_LOCK_DELAY_TIME</name>
          </field>
        </fields>
        <name>FSM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>SPI0 timing calibration register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable timing adjust clock for all reading operations.</description>
            <name>TIMING_CLK_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable timing auto-calibration for all reading operations.</description>
            <name>TIMING_CALI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>add extra dummy spi clock cycle length for spi clock calibration.</description>
            <name>EXTRA_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <name>TIMING_CALI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>SPI0 input delay mode control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge</description>
            <name>DIN0_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge</description>
            <name>DIN1_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge</description>
            <name>DIN2_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge</description>
            <name>DIN3_MODE</name>
          </field>
        </fields>
        <name>DIN_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>SPI0 input delay number control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...</description>
            <name>DIN0_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...</description>
            <name>DIN1_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...</description>
            <name>DIN2_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...</description>
            <name>DIN3_NUM</name>
          </field>
        </fields>
        <name>DIN_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>SPI0 output delay mode control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge</description>
            <name>DOUT0_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge</description>
            <name>DOUT1_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge</description>
            <name>DOUT2_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge</description>
            <name>DOUT3_MODE</name>
          </field>
        </fields>
        <name>DOUT_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <description>SPI0 clk_gate register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Register clock gate enable signal. 1: Enable. 0: Disable.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CLOCK_GATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <description>SPI0 module clock select register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>When the digital system clock selects PLL clock and the frequency of PLL clock is 480MHz, the value of reg_spi01_clk_sel:  0: SPI0/1 module clock (clk) is 80MHz. 1: SPI0/1 module clock (clk) is 120MHz.  2: SPI0/1 module clock (clk) 160MHz. 3: Not used. When the digital system clock selects PLL clock and the frequency of PLL clock is 320MHz, the value of reg_spi01_clk_sel:  0: SPI0/1 module clock (clk) is 80MHz. 1: SPI0/1 module clock (clk) is 80MHz.  2: SPI0/1 module clock (clk) 160MHz. 3: Not used.</description>
            <name>SPI01_CLK_SEL</name>
          </field>
        </fields>
        <name>CORE_CLK_SEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <description>Version control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>SPI register version.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007130</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xA8</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60002000</baseAddress>
    <description>SPI (Serial Peripheral Interface) Controller</description>
    <groupName>SPI1</groupName>
    <interrupts>
      <interrupt>
        <name>SPI1</name>
        <value>0x12</value>
      </interrupt>
    </interrupts>
    <name>SPI1</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>SPI1 memory command register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The current status of SPI1 master FSM.</description>
            <name>SPI1_MST_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The current status of SPI1 slave FSM: mspi_st. 0: idle state, 1: preparation state, 2: send command state, 3: send address state, 4: wait state, 5: read data state, 6:write data state, 7: done state, 8: read data end state.</description>
            <name>MSPI_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In user mode, it is set to indicate that program/erase operation will be triggered. The bit is combined with spi_mem_usr bit. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>User define command enable.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>USR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Drive Flash into high performance mode.  The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_HPM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit combined with reg_resandres bit releases Flash from the power-down state or high performance mode and obtains the devices ID. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_RES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Drive Flash into power down.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_DP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Chip erase enable. Chip erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Block erase enable(32KB) .  Block erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_BE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sector erase enable(4KB). Sector erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_SE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Page program enable(1 byte ~256 bytes data to be programmed). Page program operation  will be triggered when the bit is set. The bit will be cleared once the operation done .1: enable 0: disable.</description>
            <name>FLASH_PP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write status register enable.   Write status operation  will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_WRSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read status register-1.  Read status operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_RDSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read JEDEC ID . Read ID command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_RDID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write flash disable. Write disable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_WRDI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write flash enable.  Write enable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_WREN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read flash enable. Read flash operation will be triggered when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
            <name>FLASH_READ</name>
          </field>
        </fields>
        <name>CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>SPI1 address register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>In user mode, it is the memory address. other then the bit0-bit23 is the memory address, the bit24-bit31 are the byte length of a transfer.</description>
            <name>USR_ADDR_VALUE</name>
          </field>
        </fields>
        <name>ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>SPI1 control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the dummy phase the signal level of spi is output by the spi controller.</description>
            <name>FDUMMY_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Apply 2 signals during command phase 1:enable 0: disable</description>
            <name>FCMD_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Apply 4 signals during command phase 1:enable 0: disable</description>
            <name>FCMD_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1,  initialize crc32 module before writing encrypted data to flash. Active low.</description>
            <name>FCS_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1,  enable crc32 when writing encrypted data to flash. 1: enable 0:disable</description>
            <name>TX_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the bits: spi_mem_fread_qio, spi_mem_fread_dio, spi_mem_fread_qout and spi_mem_fread_dout. 1: enable 0: disable.</description>
            <name>FASTRD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations, read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The Device ID is read out to SPI_MEM_RD_STATUS register,  this bit combine with spi_mem_flash_res bit. 1: enable 0: disable.</description>
            <name>RESANDRES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to set MISO line polarity, 1: high 0, low</description>
            <name>Q_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to set MOSI line polarity, 1: high 0, low</description>
            <name>D_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write protect signal output when SPI is idle.  1: output high, 0: output low.</description>
            <name>WP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>two bytes data will be written to status register when it is set. 1: enable 0: disable.</description>
            <name>WRSR_2B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 2 signals. 1: enable 0: disable.</description>
            <name>FREAD_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations address phase and read-data phase apply 4 signals. 1: enable 0: disable.</description>
            <name>FREAD_QIO</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2CA000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>SPI1 control1 register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SPI clock mode bits. 0: SPI clock is off when CS inactive 1: SPI clock is delayed one cycle after CS inactive 2: SPI clock is delayed two cycles after CS inactive 3: SPI clock is alwasy on.</description>
            <name>CLK_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>After RES/DP/HPM command is sent, SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 512) SPI_CLK cycles.</description>
            <name>CS_HOLD_DLY_RES</name>
          </field>
        </fields>
        <name>CTRL1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFC</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>SPI1 control2 register.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The FSM will be reset.</description>
            <name>SYNC_RESET</name>
          </field>
        </fields>
        <name>CTRL2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>SPI1 clock division control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the master mode it must be equal to spi_mem_clkcnt_N.</description>
            <name>CLKCNT_L</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the master mode it must be floor((spi_mem_clkcnt_N+1)/2-1).</description>
            <name>CLKCNT_H</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the master mode it is the divider of spi_mem_clk. So spi_mem_clk frequency is system/(spi_mem_clkcnt_N+1)</description>
            <name>CLKCNT_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reserved</description>
            <name>CLK_EQU_SYSCLK</name>
          </field>
        </fields>
        <name>CLOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x30103</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>SPI1 user register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the bit combined with spi_mem_mosi_delay_mode bits to set mosi signal delay mode.</description>
            <name>CK_OUT_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 2 signals</description>
            <name>FWRITE_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 4 signals</description>
            <name>FWRITE_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations address phase and read-data phase apply 2 signals.</description>
            <name>FWRITE_DIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations address phase and read-data phase apply 4 signals.</description>
            <name>FWRITE_QIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read-data phase only access to high-part of the buffer spi_mem_w8~spi_mem_w15. 1: enable 0: disable.</description>
            <name>USR_MISO_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write-data phase only access to high-part of the buffer spi_mem_w8~spi_mem_w15. 1: enable 0: disable.</description>
            <name>USR_MOSI_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI clock is disable in dummy phase when the bit is enable.</description>
            <name>USR_DUMMY_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the write-data phase of an operation.</description>
            <name>USR_MOSI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the read-data phase of an operation.</description>
            <name>USR_MISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the dummy phase of an operation.</description>
            <name>USR_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the address phase of an operation.</description>
            <name>USR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the command phase of an operation.</description>
            <name>USR_COMMAND</name>
          </field>
        </fields>
        <name>USER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>SPI1 user1 register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The length in spi_mem_clk cycles of dummy phase. The register value shall be (cycle_num-1).</description>
            <name>USR_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The length in bits of address phase. The register value shall be (bit_num-1).</description>
            <name>USR_ADDR_BITLEN</name>
          </field>
        </fields>
        <name>USER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5C000007</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>SPI1 user2 register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The value of  command.</description>
            <name>USR_COMMAND_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The length in bits of command phase. The register value shall be (bit_num-1)</description>
            <name>USR_COMMAND_BITLEN</name>
          </field>
        </fields>
        <name>USER2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x70000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>SPI1 send data bit length control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The length in bits of write-data. The register value shall be (bit_num-1).</description>
            <name>USR_MOSI_DBITLEN</name>
          </field>
        </fields>
        <name>MOSI_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>SPI1 receive data bit length control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The length in bits of  read-data. The register value shall be (bit_num-1).</description>
            <name>USR_MISO_DBITLEN</name>
          </field>
        </fields>
        <name>MISO_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>SPI1 status register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The value is stored when set spi_mem_flash_rdsr bit and spi_mem_flash_res bit.</description>
            <name>STATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Mode bits in the flash fast read mode  it is combined with spi_mem_fastrd_mode bit.</description>
            <name>WB_MODE</name>
          </field>
        </fields>
        <name>RD_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>SPI1 misc register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI_CS0 pin enable, 1: disable SPI_CS0, 0: SPI_CS0 pin is active to select SPI device, such as flash, external RAM and so on.</description>
            <name>CS0_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI_CS1 pin enable, 1: disable SPI_CS1, 0: SPI_CS1 pin is active to select SPI device, such as flash, external RAM and so on.</description>
            <name>CS1_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk line is high when idle     0: spi clk line is low when idle</description>
            <name>CK_IDLE_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs line keep low when the bit is set.</description>
            <name>CS_KEEP_ACTIVE</name>
          </field>
        </fields>
        <name>MISC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>SPI1 TX CRC data register.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>For SPI1, the value of crc32.</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>TX_CRC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>SPI1 bit mode control register.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1,  cache  read flash with 4 bytes address, 1: enable, 0:disable.</description>
            <name>CACHE_USR_ADDR_4BYTE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1, din phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_fread_dio.</description>
            <name>FDIN_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1, dout phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_fread_dio.</description>
            <name>FDOUT_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1, address phase apply 2 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_dio.</description>
            <name>FADDR_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1, din phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio.</description>
            <name>FDIN_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1, dout phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio.</description>
            <name>FDOUT_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>For SPI1, address phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio.</description>
            <name>FADDR_QUAD</name>
          </field>
        </fields>
        <name>CACHE_FCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>SPI1 memory data buffer0</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF0</name>
          </field>
        </fields>
        <name>W0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>SPI1 memory data buffer1</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF1</name>
          </field>
        </fields>
        <name>W1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>SPI1 memory data buffer2</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF2</name>
          </field>
        </fields>
        <name>W2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>SPI1 memory data buffer3</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF3</name>
          </field>
        </fields>
        <name>W3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>SPI1 memory data buffer4</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF4</name>
          </field>
        </fields>
        <name>W4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>SPI1 memory data buffer5</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF5</name>
          </field>
        </fields>
        <name>W5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>SPI1 memory data buffer6</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF6</name>
          </field>
        </fields>
        <name>W6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>SPI1 memory data buffer7</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF7</name>
          </field>
        </fields>
        <name>W7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>SPI1 memory data buffer8</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF8</name>
          </field>
        </fields>
        <name>W8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>SPI1 memory data buffer9</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF9</name>
          </field>
        </fields>
        <name>W9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>SPI1 memory data buffer10</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF10</name>
          </field>
        </fields>
        <name>W10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>SPI1 memory data buffer11</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF11</name>
          </field>
        </fields>
        <name>W11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>SPI1 memory data buffer12</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF12</name>
          </field>
        </fields>
        <name>W12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>SPI1 memory data buffer13</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF13</name>
          </field>
        </fields>
        <name>W13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>SPI1 memory data buffer14</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF14</name>
          </field>
        </fields>
        <name>W14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>SPI1 memory data buffer15</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF15</name>
          </field>
        </fields>
        <name>W15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>SPI1 wait idle control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The dummy phase enable when wait flash idle (RDSR)</description>
            <name>WAITI_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The command to wait flash idle(RDSR).</description>
            <name>WAITI_CMD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The dummy cycle length when wait flash idle(RDSR).</description>
            <name>WAITI_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <name>FLASH_WAITI_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x14</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>SPI1 flash suspend control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program erase resume bit, program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>program erase suspend bit, program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
            <name>FLASH_PES</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4 or *128) SPI_CLK cycles after program erase resume command is sent. 0: SPI1 does not wait after program erase resume command is sent.</description>
            <name>FLASH_PER_WAIT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4 or *128) SPI_CLK cycles after program erase suspend command is sent. 0: SPI1 does not wait after program erase suspend command is sent.</description>
            <name>FLASH_PES_WAIT_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable PES end triggers PER transfer option. If this bit is 0, application should send PER after PES is done.</description>
            <name>PES_PER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable Auto-suspending function.</description>
            <name>FLASH_PES_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The mask value when check SUS/SUS1/SUS2 status bit. If the read status value is status_in[15:0](only status_in[7:0] is valid when only one byte of data is read out, status_in[15:0] is valid when two bytes of data are read out), SUS/SUS1/SUS2 = status_in[15:0]^ SPI_MEM_PESR_END_MSK[15:0].</description>
            <name>PESR_END_MSK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Read two bytes when check flash SUS/SUS1/SUS2 status bit. 0:  Read one byte when check flash SUS/SUS1/SUS2 status bit</description>
            <name>RD_SUS_2B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Both WIP and SUS/SUS1/SUS2 bits should be checked to insure the resume status of flash. 0: Only need to check WIP is 0.</description>
            <name>PER_END_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Both WIP and SUS/SUS1/SUS2 bits should be checked to insure the suspend status of flash. 0: Only need to check WIP is 0.</description>
            <name>PES_END_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>When SPI1 checks SUS/SUS1/SUS2 bits fail for SPI_MEM_SUS_TIMEOUT_CNT[6:0] times, it will be treated as check pass.</description>
            <name>SUS_TIMEOUT_CNT</name>
          </field>
        </fields>
        <name>FLASH_SUS_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8002000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>SPI1 flash suspend command register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Program/Erase resume command.</description>
            <name>FLASH_PER_COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Program/Erase suspend command.</description>
            <name>FLASH_PES_COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Flash SUS/SUS1/SUS2 status bit read command. The command should be sent when SUS/SUS1/SUS2 bit should be checked to insure the suspend or resume status of flash.</description>
            <name>WAIT_PESR_COMMAND</name>
          </field>
        </fields>
        <name>FLASH_SUS_CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5757A</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>SPI1 flash suspend status register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status of flash suspend, only used in SPI1.</description>
            <name>FLASH_SUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI1 sends out SPI_MEM_WAIT_PESR_COMMAND[15:0] to check SUS/SUS1/SUS2 bit. 0: SPI1 sends out SPI_MEM_WAIT_PESR_COMMAND[7:0] to check SUS/SUS1/SUS2 bit.</description>
            <name>WAIT_PESR_CMD_2B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 128) SPI_CLK cycles after HPM command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after HPM command is sent.</description>
            <name>FLASH_HPM_DLY_128</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 128) SPI_CLK cycles after RES command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after RES command is sent.</description>
            <name>FLASH_RES_DLY_128</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 128) SPI_CLK cycles after DP command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after DP command is sent.</description>
            <name>FLASH_DP_DLY_128</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Valid when SPI_MEM_FLASH_PER_WAIT_EN is 1. 1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 128) SPI_CLK cycles after PER command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after PER command is sent.</description>
            <name>FLASH_PER_DLY_128</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Valid when SPI_MEM_FLASH_PES_WAIT_EN is 1. 1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 128) SPI_CLK cycles after PES command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after PES command is sent.</description>
            <name>FLASH_PES_DLY_128</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable SPI0 lock SPI0/1 arbiter option. 0: Disable it.</description>
            <name>SPI0_LOCK_EN</name>
          </field>
        </fields>
        <name>SUS_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>SPI1 timing control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to enable timing auto-calibration for all reading operations.</description>
            <name>TIMING_CALI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>add extra dummy spi clock cycle length for spi clock calibration.</description>
            <name>EXTRA_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <name>TIMING_CALI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>SPI1 interrupt enable register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_MEM_PER_END_INT interrupt.</description>
            <name>PER_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_MEM_PES_END_INT interrupt.</description>
            <name>PES_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_MEM_WPE_END_INT interrupt.</description>
            <name>WPE_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_MEM_SLV_ST_END_INT interrupt.</description>
            <name>SLV_ST_END_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_MEM_MST_ST_END_INT interrupt.</description>
            <name>MST_ST_END_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>SPI1 interrupt clear register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_MEM_PER_END_INT interrupt.</description>
            <name>PER_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_MEM_PES_END_INT interrupt.</description>
            <name>PES_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_MEM_WPE_END_INT interrupt.</description>
            <name>WPE_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_MEM_SLV_ST_END_INT interrupt.</description>
            <name>SLV_ST_END_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_MEM_MST_ST_END_INT interrupt.</description>
            <name>MST_ST_END_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>SPI1 interrupt raw register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_MEM_PER_END_INT interrupt. 1: Triggered when Auto Resume command (0x7A) is sent and flash is resumed. 0: Others.</description>
            <name>PER_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_MEM_PES_END_INT interrupt.1: Triggered when Auto Suspend command (0x75) is sent and flash is suspended. 0: Others.</description>
            <name>PES_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_MEM_WPE_END_INT interrupt. 1: Triggered when WRSR/PP/SE/BE/CE is sent and flash is already idle. 0: Others.</description>
            <name>WPE_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_MEM_SLV_ST_END_INT interrupt. 1: Triggered when spi1_slv_st is changed from non idle state to idle state. It means that SPI_CS raises high. 0: Others</description>
            <name>SLV_ST_END_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_MEM_MST_ST_END_INT interrupt. 1: Triggered when spi1_mst_st is changed from non idle state to idle state. 0: Others.</description>
            <name>MST_ST_END_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>SPI1 interrupt status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_MEM_PER_END_INT interrupt.</description>
            <name>PER_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_MEM_PES_END_INT interrupt.</description>
            <name>PES_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_MEM_WPE_END_INT interrupt.</description>
            <name>WPE_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_MEM_SLV_ST_END_INT interrupt.</description>
            <name>SLV_ST_END_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_MEM_MST_ST_END_INT interrupt.</description>
            <name>MST_ST_END_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xDC</addressOffset>
        <description>SPI1 clk_gate register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Register clock gate enable signal. 1: Enable. 0: Disable.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CLOCK_GATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3FC</addressOffset>
        <description>Version control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>Version control register</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007170</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x94</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60024000</baseAddress>
    <description>SPI (Serial Peripheral Interface) Controller</description>
    <groupName>SPI2</groupName>
    <interrupts>
      <interrupt>
        <name>SPI2</name>
        <value>0x13</value>
      </interrupt>
    </interrupts>
    <name>SPI2</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>Command control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>Define the APB cycles of  SPI_CONF state. Can be configured in CONF state.</description>
            <name>CONF_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to synchronize SPI registers from APB clock domain into SPI module clock domain, which is only used in SPI master mode.</description>
            <name>UPDATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>User define command enable.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable. Can not be changed by CONF_buf.</description>
            <name>USR</name>
          </field>
        </fields>
        <name>CMD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>Address value register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Address to slave. Can be configured in CONF state.</description>
            <name>USR_ADDR_VALUE</name>
          </field>
        </fields>
        <name>ADDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>SPI control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the dummy phase the signal level of spi is output by the spi controller. Can be configured in CONF state.</description>
            <name>DUMMY_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Apply 2 signals during addr phase 1:enable 0: disable. Can be configured in CONF state.</description>
            <name>FADDR_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Apply 4 signals during addr phase 1:enable 0: disable. Can be configured in CONF state.</description>
            <name>FADDR_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Apply 2 signals during command phase 1:enable 0: disable. Can be configured in CONF state.</description>
            <name>FCMD_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Apply 4 signals during command phase 1:enable 0: disable. Can be configured in CONF state.</description>
            <name>FCMD_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations, read-data phase apply 2 signals. 1: enable 0: disable. Can be configured in CONF state.</description>
            <name>FREAD_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the read operations read-data phase apply 4 signals. 1: enable 0: disable.  Can be configured in CONF state.</description>
            <name>FREAD_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to set MISO line polarity, 1: high 0, low. Can be configured in CONF state.</description>
            <name>Q_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The bit is used to set MOSI line polarity, 1: high 0, low. Can be configured in CONF state.</description>
            <name>D_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI_HOLD output value when SPI is idle. 1: output high, 0: output low. Can be configured in CONF state.</description>
            <name>HOLD_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write protect signal output when SPI is idle.  1: output high, 0: output low.  Can be configured in CONF state.</description>
            <name>WP_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In read-data (MISO) phase 1: LSB first 0: MSB first. Can be configured in CONF state.</description>
            <name>RD_BIT_ORDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In command address write-data (MOSI) phases 1: LSB firs 0: MSB first. Can be configured in CONF state.</description>
            <name>WR_BIT_ORDER</name>
          </field>
        </fields>
        <name>CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3C0000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>SPI clock control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it must be equal to spi_clkcnt_N. In the slave mode it must be 0. Can be configured in CONF state.</description>
            <name>CLKCNT_L</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it must be floor((spi_clkcnt_N+1)/2-1). In the slave mode it must be 0. Can be configured in CONF state.</description>
            <name>CLKCNT_H</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode it is the divider of spi_clk. So spi_clk frequency is system/(spi_clkdiv_pre+1)/(spi_clkcnt_N+1). Can be configured in CONF state.</description>
            <name>CLKCNT_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>In the master mode it is pre-divider of spi_clk.  Can be configured in CONF state.</description>
            <name>CLKDIV_PRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the master mode 1: spi_clk is eqaul to system 0: spi_clk is divided from system clock. Can be configured in CONF state.</description>
            <name>CLK_EQU_SYSCLK</name>
          </field>
        </fields>
        <name>CLOCK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80003043</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>SPI USER control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to enable full duplex communication. 1: enable 0: disable. Can be configured in CONF state.</description>
            <name>DOUTDIN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Both for master mode and slave mode. 1: spi controller is in QPI mode. 0: others. Can be configured in CONF state.</description>
            <name>QPI_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode, this bit can be used to change the polarity of tsck. 0: tsck = spi_ck_i. 1:tsck = !spi_ck_i.</description>
            <name>TSCK_I_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs keep low when spi is in  done  phase. 1: enable 0: disable. Can be configured in CONF state.</description>
            <name>CS_HOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs is enable when spi is in  prepare  phase. 1: enable 0: disable. Can be configured in CONF state.</description>
            <name>CS_SETUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the slave mode, this bit can be used to change the polarity of rsck. 0: rsck = !spi_ck_i. 1:rsck = spi_ck_i.</description>
            <name>RSCK_I_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>the bit combined with spi_mosi_delay_mode bits to set mosi signal delay mode. Can be configured in CONF state.</description>
            <name>CK_OUT_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 2 signals. Can be configured in CONF state.</description>
            <name>FWRITE_DUAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>In the write operations read-data phase apply 4 signals. Can be configured in CONF state.</description>
            <name>FWRITE_QUAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the DMA CONF phase of next seg-trans operation, which means seg-trans will continue. 0: The seg-trans will end after the current SPI seg-trans or this is not seg-trans mode. Can be configured in CONF state.</description>
            <name>USR_CONF_NXT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set the bit to enable 3-line half duplex communication mosi and miso signals share the same pin. 1: enable 0: disable. Can be configured in CONF state.</description>
            <name>SIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>read-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable. Can be configured in CONF state.</description>
            <name>USR_MISO_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>write-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.  Can be configured in CONF state.</description>
            <name>USR_MOSI_HIGHPART</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi clock is disable in dummy phase when the bit is enable. Can be configured in CONF state.</description>
            <name>USR_DUMMY_IDLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the write-data phase of an operation. Can be configured in CONF state.</description>
            <name>USR_MOSI</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the read-data phase of an operation. Can be configured in CONF state.</description>
            <name>USR_MISO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the dummy phase of an operation. Can be configured in CONF state.</description>
            <name>USR_DUMMY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the address phase of an operation. Can be configured in CONF state.</description>
            <name>USR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit enable the command phase of an operation. Can be configured in CONF state.</description>
            <name>USR_COMMAND</name>
          </field>
        </fields>
        <name>USER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x800000C0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>SPI USER control register 1</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The length in spi_clk cycles of dummy phase. The register value shall be (cycle_num-1). Can be configured in CONF state.</description>
            <name>USR_DUMMY_CYCLELEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI transfer is ended when SPI RX AFIFO wfull error is valid in GP-SPI master FD/HD-mode. 0: SPI transfer is not ended when SPI RX AFIFO wfull error is valid in GP-SPI master FD/HD-mode.</description>
            <name>MST_WFULL_ERR_END_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>(cycles+1) of prepare phase by spi clock this bits are combined with spi_cs_setup bit. Can be configured in CONF state.</description>
            <name>CS_SETUP_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>delay cycles of cs pin by spi clock this bits are combined with spi_cs_hold bit. Can be configured in CONF state.</description>
            <name>CS_HOLD_TIME</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>The length in bits of address phase. The register value shall be (bit_num-1). Can be configured in CONF state.</description>
            <name>USR_ADDR_BITLEN</name>
          </field>
        </fields>
        <name>USER1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xB8410007</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>SPI USER control register 2</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>The value of  command. Can be configured in CONF state.</description>
            <name>USR_COMMAND_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI transfer is ended when SPI TX AFIFO read empty error is valid in GP-SPI master FD/HD-mode. 0: SPI transfer is not ended when SPI TX AFIFO read empty error is valid in GP-SPI master FD/HD-mode.</description>
            <name>MST_REMPTY_ERR_END_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The length in bits of command phase. The register value shall be (bit_num-1). Can be configured in CONF state.</description>
            <name>USR_COMMAND_BITLEN</name>
          </field>
        </fields>
        <name>USER2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x78000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>SPI data bit length control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>The value of these bits is the configured SPI transmission data bit length in master mode DMA controlled transfer or CPU controlled transfer. The value is also the configured bit length in slave mode DMA RX controlled transfer. The register value shall be (bit_num-1). Can be configured in CONF state.</description>
            <name>MS_DATA_BITLEN</name>
          </field>
        </fields>
        <name>MS_DLEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>SPI misc register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS0 pin enable, 1: disable CS0, 0: spi_cs0 signal is from/to CS0 pin. Can be configured in CONF state.</description>
            <name>CS0_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS1 pin enable, 1: disable CS1, 0: spi_cs1 signal is from/to CS1 pin. Can be configured in CONF state.</description>
            <name>CS1_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS2 pin enable, 1: disable CS2, 0: spi_cs2 signal is from/to CS2 pin. Can be configured in CONF state.</description>
            <name>CS2_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS3 pin enable, 1: disable CS3, 0: spi_cs3 signal is from/to CS3 pin. Can be configured in CONF state.</description>
            <name>CS3_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS4 pin enable, 1: disable CS4, 0: spi_cs4 signal is from/to CS4 pin. Can be configured in CONF state.</description>
            <name>CS4_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI CS5 pin enable, 1: disable CS5, 0: spi_cs5 signal is from/to CS5 pin. Can be configured in CONF state.</description>
            <name>CS5_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk out disable,  0: spi clk out enable. Can be configured in CONF state.</description>
            <name>CK_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the master mode the bits are the polarity of spi cs line, the value is equivalent to spi_cs ^ spi_master_cs_pol. Can be configured in CONF state.</description>
            <name>MASTER_CS_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi slave input cs polarity select. 1: inv  0: not change. Can be configured in CONF state.</description>
            <name>SLAVE_CS_POL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi clk line is high when idle     0: spi clk line is low when idle. Can be configured in CONF state.</description>
            <name>CK_IDLE_EDGE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>spi cs line keep low when the bit is set. Can be configured in CONF state.</description>
            <name>CS_KEEP_ACTIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1:  spi quad input swap enable  0:  spi quad input swap disable. Can be configured in CONF state.</description>
            <name>QUAD_DIN_PIN_SWAP</name>
          </field>
        </fields>
        <name>MISC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3E</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>SPI input delay mode configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
            <name>DIN0_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
            <name>DIN1_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
            <name>DIN2_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
            <name>DIN3_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1:enable hclk in SPI input timing module.  0: disable it. Can be configured in CONF state.</description>
            <name>TIMING_HCLK_ACTIVE</name>
          </field>
        </fields>
        <name>DIN_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>SPI input delay number configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
            <name>DIN0_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
            <name>DIN1_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
            <name>DIN2_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
            <name>DIN3_NUM</name>
          </field>
        </fields>
        <name>DIN_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>SPI output delay mode configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The output signal 0 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
            <name>DOUT0_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The output signal 1 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
            <name>DOUT1_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The output signal 2 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
            <name>DOUT2_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The output signal 3 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
            <name>DOUT3_MODE</name>
          </field>
        </fields>
        <name>DOUT_MODE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>SPI DMA control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable dma segment transfer in spi dma half slave mode. 1: enable. 0: disable.</description>
            <name>DMA_SLV_SEG_TRANS_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi_dma_infifo_full_vld is cleared by spi slave cmd 5. 0: spi_dma_infifo_full_vld is cleared by spi_trans_done.</description>
            <name>SLV_RX_SEG_TRANS_CLR_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi_dma_outfifo_empty_vld is cleared by spi slave cmd 6. 0: spi_dma_outfifo_empty_vld is cleared by spi_trans_done.</description>
            <name>SLV_TX_SEG_TRANS_CLR_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: spi_dma_inlink_eof is set when the number of dma pushed data bytes is equal to the value of spi_slv/mst_dma_rd_bytelen[19:0] in spi dma transition.  0: spi_dma_inlink_eof is set by spi_trans_done in non-seg-trans or spi_dma_seg_trans_done in seg-trans.</description>
            <name>RX_EOF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable SPI DMA controlled receive data mode.</description>
            <name>DMA_RX_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable SPI DMA controlled send data mode.</description>
            <name>DMA_TX_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset RX AFIFO, which is used to receive data in SPI master and slave mode transfer.</description>
            <name>RX_AFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset BUF TX AFIFO, which is used send data out in SPI slave CPU controlled mode transfer and master mode transfer.</description>
            <name>BUF_AFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset DMA TX AFIFO, which is used to send data out in SPI slave DMA controlled mode transfer.</description>
            <name>DMA_AFIFO_RST</name>
          </field>
        </fields>
        <name>DMA_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>SPI DMA interrupt enable register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_DMA_INFIFO_FULL_ERR_INT interrupt.</description>
            <name>DMA_INFIFO_FULL_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_DMA_OUTFIFO_EMPTY_ERR_INT interrupt.</description>
            <name>DMA_OUTFIFO_EMPTY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI slave Ex_QPI interrupt.</description>
            <name>SLV_EX_QPI_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI slave En_QPI interrupt.</description>
            <name>SLV_EN_QPI_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI slave CMD7 interrupt.</description>
            <name>SLV_CMD7_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI slave CMD8 interrupt.</description>
            <name>SLV_CMD8_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI slave CMD9 interrupt.</description>
            <name>SLV_CMD9_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI slave CMDA interrupt.</description>
            <name>SLV_CMDA_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_SLV_RD_DMA_DONE_INT interrupt.</description>
            <name>SLV_RD_DMA_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_SLV_WR_DMA_DONE_INT interrupt.</description>
            <name>SLV_WR_DMA_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_SLV_RD_BUF_DONE_INT interrupt.</description>
            <name>SLV_RD_BUF_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_SLV_WR_BUF_DONE_INT interrupt.</description>
            <name>SLV_WR_BUF_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_TRANS_DONE_INT interrupt.</description>
            <name>TRANS_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt.</description>
            <name>DMA_SEG_TRANS_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_SEG_MAGIC_ERR_INT interrupt.</description>
            <name>SEG_MAGIC_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt.</description>
            <name>SLV_BUF_ADDR_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_SLV_CMD_ERR_INT interrupt.</description>
            <name>SLV_CMD_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt.</description>
            <name>MST_RX_AFIFO_WFULL_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt.</description>
            <name>MST_TX_AFIFO_REMPTY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_APP2_INT interrupt.</description>
            <name>APP2_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The enable bit for SPI_APP1_INT interrupt.</description>
            <name>APP1_INT_ENA</name>
          </field>
        </fields>
        <name>DMA_INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>SPI DMA interrupt clear register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_DMA_INFIFO_FULL_ERR_INT interrupt.</description>
            <name>DMA_INFIFO_FULL_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_DMA_OUTFIFO_EMPTY_ERR_INT interrupt.</description>
            <name>DMA_OUTFIFO_EMPTY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI slave Ex_QPI interrupt.</description>
            <name>SLV_EX_QPI_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI slave En_QPI interrupt.</description>
            <name>SLV_EN_QPI_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI slave CMD7 interrupt.</description>
            <name>SLV_CMD7_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI slave CMD8 interrupt.</description>
            <name>SLV_CMD8_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI slave CMD9 interrupt.</description>
            <name>SLV_CMD9_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI slave CMDA interrupt.</description>
            <name>SLV_CMDA_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_SLV_RD_DMA_DONE_INT interrupt.</description>
            <name>SLV_RD_DMA_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_SLV_WR_DMA_DONE_INT interrupt.</description>
            <name>SLV_WR_DMA_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_SLV_RD_BUF_DONE_INT interrupt.</description>
            <name>SLV_RD_BUF_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_SLV_WR_BUF_DONE_INT interrupt.</description>
            <name>SLV_WR_BUF_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_TRANS_DONE_INT interrupt.</description>
            <name>TRANS_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt.</description>
            <name>DMA_SEG_TRANS_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_SEG_MAGIC_ERR_INT interrupt.</description>
            <name>SEG_MAGIC_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt.</description>
            <name>SLV_BUF_ADDR_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_SLV_CMD_ERR_INT interrupt.</description>
            <name>SLV_CMD_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt.</description>
            <name>MST_RX_AFIFO_WFULL_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt.</description>
            <name>MST_TX_AFIFO_REMPTY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_APP2_INT interrupt.</description>
            <name>APP2_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The clear bit for SPI_APP1_INT interrupt.</description>
            <name>APP1_INT_CLR</name>
          </field>
        </fields>
        <name>DMA_INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>SPI DMA interrupt raw register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: The current data rate of DMA Rx is smaller than that of SPI, which will lose the receive data.  0: Others.</description>
            <name>DMA_INFIFO_FULL_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: The current data rate of DMA TX is smaller than that of SPI. SPI will stop in master mode and send out all 0 in slave mode.  0: Others.</description>
            <name>DMA_OUTFIFO_EMPTY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI slave Ex_QPI interrupt. 1: SPI slave mode Ex_QPI transmission is ended. 0: Others.</description>
            <name>SLV_EX_QPI_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI slave En_QPI interrupt. 1: SPI slave mode En_QPI transmission is ended. 0: Others.</description>
            <name>SLV_EN_QPI_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI slave CMD7 interrupt. 1: SPI slave mode CMD7 transmission is ended. 0: Others.</description>
            <name>SLV_CMD7_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI slave CMD8 interrupt. 1: SPI slave mode CMD8 transmission is ended. 0: Others.</description>
            <name>SLV_CMD8_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI slave CMD9 interrupt. 1: SPI slave mode CMD9 transmission is ended. 0: Others.</description>
            <name>SLV_CMD9_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI slave CMDA interrupt. 1: SPI slave mode CMDA transmission is ended. 0: Others.</description>
            <name>SLV_CMDA_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_SLV_RD_DMA_DONE_INT interrupt. 1: SPI slave mode Rd_DMA transmission is ended. 0: Others.</description>
            <name>SLV_RD_DMA_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_SLV_WR_DMA_DONE_INT interrupt. 1: SPI slave mode Wr_DMA transmission is ended. 0: Others.</description>
            <name>SLV_WR_DMA_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_SLV_RD_BUF_DONE_INT interrupt. 1: SPI slave mode Rd_BUF transmission is ended. 0: Others.</description>
            <name>SLV_RD_BUF_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_SLV_WR_BUF_DONE_INT interrupt. 1: SPI slave mode Wr_BUF transmission is ended. 0: Others.</description>
            <name>SLV_WR_BUF_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_TRANS_DONE_INT interrupt. 1: SPI master mode transmission is ended. 0: others.</description>
            <name>TRANS_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt. 1:  spi master DMA full-duplex/half-duplex seg-conf-trans ends or slave half-duplex seg-trans ends. And data has been pushed to corresponding memory.  0:  seg-conf-trans or seg-trans is not ended or not occurred.</description>
            <name>DMA_SEG_TRANS_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_SEG_MAGIC_ERR_INT interrupt. 1: The magic value in CONF buffer is error in the DMA seg-conf-trans. 0: others.</description>
            <name>SEG_MAGIC_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt. 1: The accessing data address of the current SPI slave mode CPU controlled FD, Wr_BUF or Rd_BUF transmission is bigger than 63. 0: Others.</description>
            <name>SLV_BUF_ADDR_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_SLV_CMD_ERR_INT interrupt. 1: The slave command value in the current SPI slave HD mode transmission is not supported. 0: Others.</description>
            <name>SLV_CMD_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt. 1: There is a RX AFIFO write-full error when SPI inputs data in master mode. 0: Others.</description>
            <name>MST_RX_AFIFO_WFULL_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt. 1: There is a TX BUF AFIFO read-empty error when SPI outputs data in master mode. 0: Others.</description>
            <name>MST_TX_AFIFO_REMPTY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_APP2_INT interrupt. The value is only controlled by application.</description>
            <name>APP2_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw bit for SPI_APP1_INT interrupt. The value is only controlled by application.</description>
            <name>APP1_INT_RAW</name>
          </field>
        </fields>
        <name>DMA_INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>SPI DMA interrupt status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_DMA_INFIFO_FULL_ERR_INT interrupt.</description>
            <name>DMA_INFIFO_FULL_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_DMA_OUTFIFO_EMPTY_ERR_INT interrupt.</description>
            <name>DMA_OUTFIFO_EMPTY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI slave Ex_QPI interrupt.</description>
            <name>SLV_EX_QPI_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI slave En_QPI interrupt.</description>
            <name>SLV_EN_QPI_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI slave CMD7 interrupt.</description>
            <name>SLV_CMD7_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI slave CMD8 interrupt.</description>
            <name>SLV_CMD8_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI slave CMD9 interrupt.</description>
            <name>SLV_CMD9_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI slave CMDA interrupt.</description>
            <name>SLV_CMDA_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_SLV_RD_DMA_DONE_INT interrupt.</description>
            <name>SLV_RD_DMA_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_SLV_WR_DMA_DONE_INT interrupt.</description>
            <name>SLV_WR_DMA_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_SLV_RD_BUF_DONE_INT interrupt.</description>
            <name>SLV_RD_BUF_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_SLV_WR_BUF_DONE_INT interrupt.</description>
            <name>SLV_WR_BUF_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_TRANS_DONE_INT interrupt.</description>
            <name>TRANS_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt.</description>
            <name>DMA_SEG_TRANS_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_SEG_MAGIC_ERR_INT interrupt.</description>
            <name>SEG_MAGIC_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt.</description>
            <name>SLV_BUF_ADDR_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_SLV_CMD_ERR_INT interrupt.</description>
            <name>SLV_CMD_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt.</description>
            <name>MST_RX_AFIFO_WFULL_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt.</description>
            <name>MST_TX_AFIFO_REMPTY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_APP2_INT interrupt.</description>
            <name>APP2_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The status bit for SPI_APP1_INT interrupt.</description>
            <name>APP1_INT_ST</name>
          </field>
        </fields>
        <name>DMA_INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>SPI CPU-controlled buffer0</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF0</name>
          </field>
        </fields>
        <name>W0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9C</addressOffset>
        <description>SPI CPU-controlled buffer1</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF1</name>
          </field>
        </fields>
        <name>W1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA0</addressOffset>
        <description>SPI CPU-controlled buffer2</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF2</name>
          </field>
        </fields>
        <name>W2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA4</addressOffset>
        <description>SPI CPU-controlled buffer3</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF3</name>
          </field>
        </fields>
        <name>W3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA8</addressOffset>
        <description>SPI CPU-controlled buffer4</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF4</name>
          </field>
        </fields>
        <name>W4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xAC</addressOffset>
        <description>SPI CPU-controlled buffer5</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF5</name>
          </field>
        </fields>
        <name>W5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB0</addressOffset>
        <description>SPI CPU-controlled buffer6</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF6</name>
          </field>
        </fields>
        <name>W6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB4</addressOffset>
        <description>SPI CPU-controlled buffer7</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF7</name>
          </field>
        </fields>
        <name>W7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB8</addressOffset>
        <description>SPI CPU-controlled buffer8</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF8</name>
          </field>
        </fields>
        <name>W8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xBC</addressOffset>
        <description>SPI CPU-controlled buffer9</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF9</name>
          </field>
        </fields>
        <name>W9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC0</addressOffset>
        <description>SPI CPU-controlled buffer10</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF10</name>
          </field>
        </fields>
        <name>W10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC4</addressOffset>
        <description>SPI CPU-controlled buffer11</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF11</name>
          </field>
        </fields>
        <name>W11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC8</addressOffset>
        <description>SPI CPU-controlled buffer12</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF12</name>
          </field>
        </fields>
        <name>W12</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xCC</addressOffset>
        <description>SPI CPU-controlled buffer13</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF13</name>
          </field>
        </fields>
        <name>W13</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD0</addressOffset>
        <description>SPI CPU-controlled buffer14</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF14</name>
          </field>
        </fields>
        <name>W14</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD4</addressOffset>
        <description>SPI CPU-controlled buffer15</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>data buffer</description>
            <name>BUF15</name>
          </field>
        </fields>
        <name>W15</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE0</addressOffset>
        <description>SPI slave control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>SPI clock mode bits. 0: SPI clock is off when CS inactive 1: SPI clock is delayed one cycle after CS inactive 2: SPI clock is delayed two cycles after CS inactive 3: SPI clock is alwasy on. Can be configured in CONF state.</description>
            <name>CLK_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>{CPOL, CPHA},1: support spi clk mode 1 and 3, first edge output data B[0]/B[7].  0: support spi clk mode 0 and 2, first edge output data B[1]/B[6].</description>
            <name>CLK_MODE_13</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>It saves half a cycle when tsck is the same as rsck. 1: output data at rsck posedge   0: output data at tsck posedge</description>
            <name>RSCK_DATA_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI_SLV_DATA_BITLEN stores data bit length of master-read-slave data length in DMA controlled mode(Rd_DMA). 0: others</description>
            <name>SLV_RDDMA_BITLEN_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI_SLV_DATA_BITLEN stores data bit length of master-write-to-slave data length in DMA controlled mode(Wr_DMA). 0: others</description>
            <name>SLV_WRDMA_BITLEN_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI_SLV_DATA_BITLEN stores data bit length of master-read-slave data length in CPU controlled mode(Rd_BUF). 0: others</description>
            <name>SLV_RDBUF_BITLEN_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: SPI_SLV_DATA_BITLEN stores data bit length of master-write-to-slave data length in CPU controlled mode(Wr_BUF). 0: others</description>
            <name>SLV_WRBUF_BITLEN_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The magic value of BM table in master DMA seg-trans.</description>
            <name>DMA_SEG_MAGIC_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set SPI work mode. 1: slave mode 0: master mode.</description>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software reset enable, reset the spi clock line cs line and data lines. Can be configured in CONF state.</description>
            <name>SOFT_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Enable the DMA CONF phase of current seg-trans operation, which means seg-trans will start. 0: This is not seg-trans mode.</description>
            <name>USR_CONF</name>
          </field>
        </fields>
        <name>SLAVE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2800000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE4</addressOffset>
        <description>SPI slave control register 1</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x12</bitWidth>
            <description>The transferred data bit length in SPI slave FD and HD mode.</description>
            <name>SLV_DATA_BITLEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>In the slave mode it is the value of command.</description>
            <name>SLV_LAST_COMMAND</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>In the slave mode it is the value of address.</description>
            <name>SLV_LAST_ADDR</name>
          </field>
        </fields>
        <name>SLAVE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE8</addressOffset>
        <description>SPI module clock and register clock control</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable clk gate</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to power on the SPI module clock.</description>
            <name>MST_CLK_ACTIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is used to select SPI module clock source in master mode. 1: PLL_CLK_80M. 0: XTAL CLK.</description>
            <name>MST_CLK_SEL</name>
          </field>
        </fields>
        <name>CLK_GATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF0</addressOffset>
        <description>Version control</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>SPI register version.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007220</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xA0</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x600C0000</baseAddress>
    <description>System</description>
    <groupName>SYSTEM</groupName>
    <interrupts></interrupts>
    <name>SYSTEM</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>cpu_peripheral clock gating register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_en_assist_debug</description>
            <name>CLK_EN_ASSIST_DEBUG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_en_dedicated_gpio</description>
            <name>CLK_EN_DEDICATED_GPIO</name>
          </field>
        </fields>
        <name>CPU_PERI_CLK_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>cpu_peripheral reset register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rst_en_assist_debug</description>
            <name>RST_EN_ASSIST_DEBUG</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rst_en_dedicated_gpio</description>
            <name>RST_EN_DEDICATED_GPIO</name>
          </field>
        </fields>
        <name>CPU_PERI_RST_EN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>cpu clock config register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_cpuperiod_sel</description>
            <name>CPUPERIOD_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pll_freq_sel</description>
            <name>PLL_FREQ_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_cpu_wait_mode_force_on</description>
            <name>CPU_WAIT_MODE_FORCE_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_cpu_waiti_delay_num</description>
            <name>CPU_WAITI_DELAY_NUM</name>
          </field>
        </fields>
        <name>CPU_PER_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>memory power down mask register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lslp_mem_pd_mask</description>
            <name>LSLP_MEM_PD_MASK</name>
          </field>
        </fields>
        <name>MEM_PD_MASK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>peripheral clock gating register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_timers_clk_en</description>
            <name>TIMERS_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi01_clk_en</description>
            <name>SPI01_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uart_clk_en</description>
            <name>UART_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdg_clk_en</description>
            <name>WDG_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_i2s0_clk_en</description>
            <name>I2S0_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uart1_clk_en</description>
            <name>UART1_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi2_clk_en</description>
            <name>SPI2_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ext0_clk_en</description>
            <name>EXT0_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uhci0_clk_en</description>
            <name>UHCI0_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rmt_clk_en</description>
            <name>RMT_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pcnt_clk_en</description>
            <name>PCNT_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ledc_clk_en</description>
            <name>LEDC_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uhci1_clk_en</description>
            <name>UHCI1_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_timergroup_clk_en</description>
            <name>TIMERGROUP_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_efuse_clk_en</description>
            <name>EFUSE_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_timergroup1_clk_en</description>
            <name>TIMERGROUP1_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi3_clk_en</description>
            <name>SPI3_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pwm0_clk_en</description>
            <name>PWM0_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ext1_clk_en</description>
            <name>EXT1_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_can_clk_en</description>
            <name>CAN_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pwm1_clk_en</description>
            <name>PWM1_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_i2s1_clk_en</description>
            <name>I2S1_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi2_dma_clk_en</description>
            <name>SPI2_DMA_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_usb_device_clk_en</description>
            <name>USB_DEVICE_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uart_mem_clk_en</description>
            <name>UART_MEM_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pwm2_clk_en</description>
            <name>PWM2_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pwm3_clk_en</description>
            <name>PWM3_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi3_dma_clk_en</description>
            <name>SPI3_DMA_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_saradc_clk_en</description>
            <name>APB_SARADC_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_systimer_clk_en</description>
            <name>SYSTIMER_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_adc2_arb_clk_en</description>
            <name>ADC2_ARB_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi4_clk_en</description>
            <name>SPI4_CLK_EN</name>
          </field>
        </fields>
        <name>PERIP_CLK_EN0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF9C1E06F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>peripheral clock gating register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_crypto_aes_clk_en</description>
            <name>CRYPTO_AES_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_crypto_sha_clk_en</description>
            <name>CRYPTO_SHA_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_crypto_rsa_clk_en</description>
            <name>CRYPTO_RSA_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_crypto_ds_clk_en</description>
            <name>CRYPTO_DS_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_crypto_hmac_clk_en</description>
            <name>CRYPTO_HMAC_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_dma_clk_en</description>
            <name>DMA_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sdio_host_clk_en</description>
            <name>SDIO_HOST_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lcd_cam_clk_en</description>
            <name>LCD_CAM_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uart2_clk_en</description>
            <name>UART2_CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tsens_clk_en</description>
            <name>TSENS_CLK_EN</name>
          </field>
        </fields>
        <name>PERIP_CLK_EN1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>reserved</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_timers_rst</description>
            <name>TIMERS_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi01_rst</description>
            <name>SPI01_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uart_rst</description>
            <name>UART_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdg_rst</description>
            <name>WDG_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_i2s0_rst</description>
            <name>I2S0_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uart1_rst</description>
            <name>UART1_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi2_rst</description>
            <name>SPI2_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ext0_rst</description>
            <name>EXT0_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uhci0_rst</description>
            <name>UHCI0_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rmt_rst</description>
            <name>RMT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pcnt_rst</description>
            <name>PCNT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ledc_rst</description>
            <name>LEDC_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uhci1_rst</description>
            <name>UHCI1_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_timergroup_rst</description>
            <name>TIMERGROUP_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_efuse_rst</description>
            <name>EFUSE_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_timergroup1_rst</description>
            <name>TIMERGROUP1_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi3_rst</description>
            <name>SPI3_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pwm0_rst</description>
            <name>PWM0_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_ext1_rst</description>
            <name>EXT1_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_can_rst</description>
            <name>CAN_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pwm1_rst</description>
            <name>PWM1_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_i2s1_rst</description>
            <name>I2S1_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi2_dma_rst</description>
            <name>SPI2_DMA_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_usb_device_rst</description>
            <name>USB_DEVICE_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uart_mem_rst</description>
            <name>UART_MEM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pwm2_rst</description>
            <name>PWM2_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_pwm3_rst</description>
            <name>PWM3_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi3_dma_rst</description>
            <name>SPI3_DMA_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_apb_saradc_rst</description>
            <name>APB_SARADC_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_systimer_rst</description>
            <name>SYSTIMER_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_adc2_arb_rst</description>
            <name>ADC2_ARB_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_spi4_rst</description>
            <name>SPI4_RST</name>
          </field>
        </fields>
        <name>PERIP_RST_EN0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>peripheral reset register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_crypto_aes_rst</description>
            <name>CRYPTO_AES_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_crypto_sha_rst</description>
            <name>CRYPTO_SHA_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_crypto_rsa_rst</description>
            <name>CRYPTO_RSA_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_crypto_ds_rst</description>
            <name>CRYPTO_DS_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_crypto_hmac_rst</description>
            <name>CRYPTO_HMAC_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_dma_rst</description>
            <name>DMA_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_sdio_host_rst</description>
            <name>SDIO_HOST_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lcd_cam_rst</description>
            <name>LCD_CAM_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_uart2_rst</description>
            <name>UART2_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_tsens_rst</description>
            <name>TSENS_RST</name>
          </field>
        </fields>
        <name>PERIP_RST_EN1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1FE</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>clock config register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>reg_bt_lpck_div_num</description>
            <name>BT_LPCK_DIV_NUM</name>
          </field>
        </fields>
        <name>BT_LPCK_DIV_INT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>clock config register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>reg_bt_lpck_div_b</description>
            <name>BT_LPCK_DIV_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>reg_bt_lpck_div_a</description>
            <name>BT_LPCK_DIV_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lpclk_sel_rtc_slow</description>
            <name>LPCLK_SEL_RTC_SLOW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lpclk_sel_8m</description>
            <name>LPCLK_SEL_8M</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lpclk_sel_xtal</description>
            <name>LPCLK_SEL_XTAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lpclk_sel_xtal32k</description>
            <name>LPCLK_SEL_XTAL32K</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_lpclk_rtc_en</description>
            <name>LPCLK_RTC_EN</name>
          </field>
        </fields>
        <name>BT_LPCK_DIV_FRAC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2001001</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>interrupt generate register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_cpu_intr_from_cpu_0</description>
            <name>CPU_INTR_FROM_CPU_0</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>interrupt generate register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_cpu_intr_from_cpu_1</description>
            <name>CPU_INTR_FROM_CPU_1</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>interrupt generate register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_cpu_intr_from_cpu_2</description>
            <name>CPU_INTR_FROM_CPU_2</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>interrupt generate register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_cpu_intr_from_cpu_3</description>
            <name>CPU_INTR_FROM_CPU_3</name>
          </field>
        </fields>
        <name>CPU_INTR_FROM_CPU_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>rsa memory power control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rsa_mem_pd</description>
            <name>RSA_MEM_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rsa_mem_force_pu</description>
            <name>RSA_MEM_FORCE_PU</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rsa_mem_force_pd</description>
            <name>RSA_MEM_FORCE_PD</name>
          </field>
        </fields>
        <name>RSA_PD_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>edma clcok and reset register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_edma_clk_on</description>
            <name>EDMA_CLK_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_edma_reset</description>
            <name>EDMA_RESET</name>
          </field>
        </fields>
        <name>EDMA_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>cache control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_icache_clk_on</description>
            <name>ICACHE_CLK_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_icache_reset</description>
            <name>ICACHE_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_dcache_clk_on</description>
            <name>DCACHE_CLK_ON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_dcache_reset</description>
            <name>DCACHE_RESET</name>
          </field>
        </fields>
        <name>CACHE_CONTROL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x5</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_enable_spi_manual_encrypt</description>
            <name>ENABLE_SPI_MANUAL_ENCRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_enable_download_db_encrypt</description>
            <name>ENABLE_DOWNLOAD_DB_ENCRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_enable_download_g0cb_decrypt</description>
            <name>ENABLE_DOWNLOAD_G0CB_DECRYPT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_enable_download_manual_encrypt</description>
            <name>ENABLE_DOWNLOAD_MANUAL_ENCRYPT</name>
          </field>
        </fields>
        <name>EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>fast memory config register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rtc_mem_crc_start</description>
            <name>RTC_MEM_CRC_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>reg_rtc_mem_crc_addr</description>
            <name>RTC_MEM_CRC_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>reg_rtc_mem_crc_len</description>
            <name>RTC_MEM_CRC_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rtc_mem_crc_finish</description>
            <name>RTC_MEM_CRC_FINISH</name>
          </field>
        </fields>
        <name>RTC_FASTMEM_CONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7FF00000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>reserved</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_rtc_mem_crc_res</description>
            <name>RTC_MEM_CRC_RES</name>
          </field>
        </fields>
        <name>RTC_FASTMEM_CRC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>eco register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_redundant_eco_drive</description>
            <name>REDUNDANT_ECO_DRIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_redundant_eco_result</description>
            <name>REDUNDANT_ECO_RESULT</name>
          </field>
        </fields>
        <name>REDUNDANT_ECO_CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>clock gating register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_en</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CLOCK_GATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>system clock config register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>reg_pre_div_cnt</description>
            <name>PRE_DIV_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_soc_clk_sel</description>
            <name>SOC_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>reg_clk_xtal_freq</description>
            <name>CLK_XTAL_FREQ</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_div_en</description>
            <name>CLK_DIV_EN</name>
          </field>
        </fields>
        <name>SYSCLK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_mem_path_len</description>
            <name>MEM_PATH_LEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_err_cnt_clr</description>
            <name>MEM_ERR_CNT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_mem_pvt_monitor_en</description>
            <name>MONITOR_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_mem_timing_err_cnt</description>
            <name>MEM_TIMING_ERR_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_mem_vt_sel</description>
            <name>MEM_VT_SEL</name>
          </field>
        </fields>
        <name>MEM_PVT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_comb_path_len_lvt</description>
            <name>COMB_PATH_LEN_LVT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_comb_err_cnt_clr_lvt</description>
            <name>COMB_ERR_CNT_CLR_LVT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_comb_pvt_monitor_en_lvt</description>
            <name>COMB_PVT_MONITOR_EN_LVT</name>
          </field>
        </fields>
        <name>COMB_PVT_LVT_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_comb_path_len_nvt</description>
            <name>COMB_PATH_LEN_NVT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_comb_err_cnt_clr_nvt</description>
            <name>COMB_ERR_CNT_CLR_NVT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_comb_pvt_monitor_en_nvt</description>
            <name>COMB_PVT_MONITOR_EN_NVT</name>
          </field>
        </fields>
        <name>COMB_PVT_NVT_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>reg_comb_path_len_hvt</description>
            <name>COMB_PATH_LEN_HVT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_comb_err_cnt_clr_hvt</description>
            <name>COMB_ERR_CNT_CLR_HVT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_comb_pvt_monitor_en_hvt</description>
            <name>COMB_PVT_MONITOR_EN_HVT</name>
          </field>
        </fields>
        <name>COMB_PVT_HVT_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_lvt_site0</description>
            <name>COMB_TIMING_ERR_CNT_LVT_SITE0</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_LVT_SITE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_nvt_site0</description>
            <name>COMB_TIMING_ERR_CNT_NVT_SITE0</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_NVT_SITE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_hvt_site0</description>
            <name>COMB_TIMING_ERR_CNT_HVT_SITE0</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_HVT_SITE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_lvt_site1</description>
            <name>COMB_TIMING_ERR_CNT_LVT_SITE1</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_LVT_SITE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_nvt_site1</description>
            <name>COMB_TIMING_ERR_CNT_NVT_SITE1</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_NVT_SITE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_hvt_site1</description>
            <name>COMB_TIMING_ERR_CNT_HVT_SITE1</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_HVT_SITE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x84</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_lvt_site2</description>
            <name>COMB_TIMING_ERR_CNT_LVT_SITE2</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_LVT_SITE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x88</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_nvt_site2</description>
            <name>COMB_TIMING_ERR_CNT_NVT_SITE2</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_NVT_SITE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8C</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_hvt_site2</description>
            <name>COMB_TIMING_ERR_CNT_HVT_SITE2</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_HVT_SITE2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x90</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_lvt_site3</description>
            <name>COMB_TIMING_ERR_CNT_LVT_SITE3</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_LVT_SITE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x94</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_nvt_site3</description>
            <name>COMB_TIMING_ERR_CNT_NVT_SITE3</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_NVT_SITE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x98</addressOffset>
        <description>mem pvt register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_comb_timing_err_cnt_hvt_site3</description>
            <name>COMB_TIMING_ERR_CNT_HVT_SITE3</name>
          </field>
        </fields>
        <name>COMB_PVT_ERR_HVT_SITE3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFFC</addressOffset>
        <description>Version register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>reg_system_reg_date</description>
            <name>SYSTEM_REG_DATE</name>
          </field>
        </fields>
        <name>SYSTEM_REG_DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007150</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x78</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60023000</baseAddress>
    <description>System Timer</description>
    <groupName>SYSTIMER</groupName>
    <interrupts>
      <interrupt>
        <name>SYSTIMER_TARGET0_EDGE</name>
        <value>0x25</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>SYSTIMER_TARGET1_EDGE</name>
        <value>0x26</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>SYSTIMER_TARGET2_EDGE</name>
        <value>0x27</value>
      </interrupt>
    </interrupts>
    <name>SYSTIMER</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>SYSTIMER_CONF.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>systimer clock force on</description>
            <name>SYSTIMER_CLK_FO</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>target2 work enable</description>
            <name>TARGET2_WORK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>target1 work enable</description>
            <name>TARGET1_WORK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>target0 work enable</description>
            <name>TARGET0_WORK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If timer unit1 is stalled when core1 stalled</description>
            <name>TIMER_UNIT1_CORE1_STALL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If timer unit1 is stalled when core0 stalled</description>
            <name>TIMER_UNIT1_CORE0_STALL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If timer unit0 is stalled when core1 stalled</description>
            <name>TIMER_UNIT0_CORE1_STALL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If timer unit0 is stalled when core0 stalled</description>
            <name>TIMER_UNIT0_CORE0_STALL_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timer unit1 work enable</description>
            <name>TIMER_UNIT1_WORK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timer unit0 work enable</description>
            <name>TIMER_UNIT0_WORK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>register file clk gating</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x46000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>SYSTIMER_UNIT0_OP.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_timer_unit0_value_valid</description>
            <name>TIMER_UNIT0_VALUE_VALID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>update timer_unit0</description>
            <name>TIMER_UNIT0_UPDATE</name>
          </field>
        </fields>
        <name>UNIT0_OP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>SYSTIMER_UNIT1_OP.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timer value is sync and valid</description>
            <name>TIMER_UNIT1_VALUE_VALID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>update timer unit1</description>
            <name>TIMER_UNIT1_UPDATE</name>
          </field>
        </fields>
        <name>UNIT1_OP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>SYSTIMER_UNIT0_LOAD_HI.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>timer unit0 load high 32 bit</description>
            <name>TIMER_UNIT0_LOAD_HI</name>
          </field>
        </fields>
        <name>UNIT0_LOAD_HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>SYSTIMER_UNIT0_LOAD_LO.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>timer unit0 load low 32 bit</description>
            <name>TIMER_UNIT0_LOAD_LO</name>
          </field>
        </fields>
        <name>UNIT0_LOAD_LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>SYSTIMER_UNIT1_LOAD_HI.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>timer unit1 load high 32 bit</description>
            <name>TIMER_UNIT1_LOAD_HI</name>
          </field>
        </fields>
        <name>UNIT1_LOAD_HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>SYSTIMER_UNIT1_LOAD_LO.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>timer unit1 load low 32 bit</description>
            <name>TIMER_UNIT1_LOAD_LO</name>
          </field>
        </fields>
        <name>UNIT1_LOAD_LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>SYSTIMER_TARGET0_HI.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>timer taget0 high 32 bit</description>
            <name>TIMER_TARGET0_HI</name>
          </field>
        </fields>
        <name>TARGET0_HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>SYSTIMER_TARGET0_LO.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>timer taget0 low 32 bit</description>
            <name>TIMER_TARGET0_LO</name>
          </field>
        </fields>
        <name>TARGET0_LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>SYSTIMER_TARGET1_HI.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>timer taget1 high 32 bit</description>
            <name>TIMER_TARGET1_HI</name>
          </field>
        </fields>
        <name>TARGET1_HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>SYSTIMER_TARGET1_LO.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>timer taget1 low 32 bit</description>
            <name>TIMER_TARGET1_LO</name>
          </field>
        </fields>
        <name>TARGET1_LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>SYSTIMER_TARGET2_HI.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>timer taget2 high 32 bit</description>
            <name>TIMER_TARGET2_HI</name>
          </field>
        </fields>
        <name>TARGET2_HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>SYSTIMER_TARGET2_LO.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>timer taget2 low 32 bit</description>
            <name>TIMER_TARGET2_LO</name>
          </field>
        </fields>
        <name>TARGET2_LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>SYSTIMER_TARGET0_CONF.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>target0 period</description>
            <name>TARGET0_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set target0 to period mode</description>
            <name>TARGET0_PERIOD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>select which unit to compare</description>
            <name>TARGET0_TIMER_UNIT_SEL</name>
          </field>
        </fields>
        <name>TARGET0_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>SYSTIMER_TARGET1_CONF.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>target1 period</description>
            <name>TARGET1_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set target1 to period mode</description>
            <name>TARGET1_PERIOD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>select which unit to compare</description>
            <name>TARGET1_TIMER_UNIT_SEL</name>
          </field>
        </fields>
        <name>TARGET1_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>SYSTIMER_TARGET2_CONF.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>target2 period</description>
            <name>TARGET2_PERIOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set target2 to period mode</description>
            <name>TARGET2_PERIOD_MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>select which unit to compare</description>
            <name>TARGET2_TIMER_UNIT_SEL</name>
          </field>
        </fields>
        <name>TARGET2_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>SYSTIMER_UNIT0_VALUE_HI.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>timer read value high 32bit</description>
            <name>TIMER_UNIT0_VALUE_HI</name>
          </field>
        </fields>
        <name>UNIT0_VALUE_HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>SYSTIMER_UNIT0_VALUE_LO.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>timer read value low 32bit</description>
            <name>TIMER_UNIT0_VALUE_LO</name>
          </field>
        </fields>
        <name>UNIT0_VALUE_LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>SYSTIMER_UNIT1_VALUE_HI.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x14</bitWidth>
            <description>timer read value high 32bit</description>
            <name>TIMER_UNIT1_VALUE_HI</name>
          </field>
        </fields>
        <name>UNIT1_VALUE_HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>SYSTIMER_UNIT1_VALUE_LO.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>timer read value low 32bit</description>
            <name>TIMER_UNIT1_VALUE_LO</name>
          </field>
        </fields>
        <name>UNIT1_VALUE_LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>SYSTIMER_COMP0_LOAD.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timer comp0 load value</description>
            <name>TIMER_COMP0_LOAD</name>
          </field>
        </fields>
        <name>COMP0_LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>SYSTIMER_COMP1_LOAD.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timer comp1 load value</description>
            <name>TIMER_COMP1_LOAD</name>
          </field>
        </fields>
        <name>COMP1_LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>SYSTIMER_COMP2_LOAD.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timer comp2 load value</description>
            <name>TIMER_COMP2_LOAD</name>
          </field>
        </fields>
        <name>COMP2_LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>SYSTIMER_UNIT0_LOAD.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timer unit0 load value</description>
            <name>TIMER_UNIT0_LOAD</name>
          </field>
        </fields>
        <name>UNIT0_LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>SYSTIMER_UNIT1_LOAD.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timer unit1 load value</description>
            <name>TIMER_UNIT1_LOAD</name>
          </field>
        </fields>
        <name>UNIT1_LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>SYSTIMER_INT_ENA.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interupt0 enable</description>
            <name>TARGET0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interupt1 enable</description>
            <name>TARGET1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interupt2 enable</description>
            <name>TARGET2_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>SYSTIMER_INT_RAW.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interupt0 raw</description>
            <name>TARGET0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interupt1 raw</description>
            <name>TARGET1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interupt2 raw</description>
            <name>TARGET2_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>SYSTIMER_INT_CLR.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interupt0 clear</description>
            <name>TARGET0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interupt1 clear</description>
            <name>TARGET1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>interupt2 clear</description>
            <name>TARGET2_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>SYSTIMER_INT_ST.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_target0_int_st</description>
            <name>TARGET0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_target1_int_st</description>
            <name>TARGET1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_target2_int_st</description>
            <name>TARGET2_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>SYSTIMER_DATE.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_date</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2006171</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x68</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x6001F000</baseAddress>
    <description>Timer Group</description>
    <groupName>TIMG</groupName>
    <interrupts>
      <interrupt>
        <name>TG0_T0_LEVEL</name>
        <value>0x20</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG0_WDT_LEVEL</name>
        <value>0x21</value>
      </interrupt>
    </interrupts>
    <name>TIMG0</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>TIMG_T0CONFIG_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_use_xtal.</description>
            <name>T0_USE_XTAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_alarm_en.</description>
            <name>T0_ALARM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_divcnt_rst.</description>
            <name>T0_DIVCNT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_t0_divider.</description>
            <name>T0_DIVIDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_autoreload.</description>
            <name>T0_AUTORELOAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_increase.</description>
            <name>T0_INCREASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_en.</description>
            <name>T0_EN</name>
          </field>
        </fields>
        <name>T0CONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60002000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>TIMG_T0LO_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>t0_lo</description>
            <name>T0_LO</name>
          </field>
        </fields>
        <name>T0LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>TIMG_T0HI_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x16</bitWidth>
            <description>t0_hi</description>
            <name>T0_HI</name>
          </field>
        </fields>
        <name>T0HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>TIMG_T0UPDATE_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>t0_update</description>
            <name>T0_UPDATE</name>
          </field>
        </fields>
        <name>T0UPDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>TIMG_T0ALARMLO_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_t0_alarm_lo.</description>
            <name>T0_ALARM_LO</name>
          </field>
        </fields>
        <name>T0ALARMLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>TIMG_T0ALARMHI_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x16</bitWidth>
            <description>reg_t0_alarm_hi.</description>
            <name>T0_ALARM_HI</name>
          </field>
        </fields>
        <name>T0ALARMHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>TIMG_T0LOADLO_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_t0_load_lo.</description>
            <name>T0_LOAD_LO</name>
          </field>
        </fields>
        <name>T0LOADLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>TIMG_T0LOADHI_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x16</bitWidth>
            <description>reg_t0_load_hi.</description>
            <name>T0_LOAD_HI</name>
          </field>
        </fields>
        <name>T0LOADHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>TIMG_T0LOAD_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>t0_load</description>
            <name>T0_LOAD</name>
          </field>
        </fields>
        <name>T0LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>TIMG_WDTCONFIG0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_appcpu_reset_en.</description>
            <name>WDT_APPCPU_RESET_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_procpu_reset_en.</description>
            <name>WDT_PROCPU_RESET_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_flashboot_mod_en.</description>
            <name>WDT_FLASHBOOT_MOD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_wdt_sys_reset_length.</description>
            <name>WDT_SYS_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_wdt_cpu_reset_length.</description>
            <name>WDT_CPU_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_use_xtal.</description>
            <name>WDT_USE_XTAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_conf_update_en.</description>
            <name>WDT_CONF_UPDATE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_wdt_stg3.</description>
            <name>WDT_STG3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_wdt_stg2.</description>
            <name>WDT_STG2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_wdt_stg1.</description>
            <name>WDT_STG1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_wdt_stg0.</description>
            <name>WDT_STG0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_en.</description>
            <name>WDT_EN</name>
          </field>
        </fields>
        <name>WDTCONFIG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4C000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>TIMG_WDTCONFIG1_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_divcnt_rst.</description>
            <name>WDT_DIVCNT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_wdt_clk_prescale.</description>
            <name>WDT_CLK_PRESCALE</name>
          </field>
        </fields>
        <name>WDTCONFIG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>TIMG_WDTCONFIG2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wdt_stg0_hold.</description>
            <name>WDT_STG0_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18CBA80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>TIMG_WDTCONFIG3_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wdt_stg1_hold.</description>
            <name>WDT_STG1_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7FFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>TIMG_WDTCONFIG4_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wdt_stg2_hold.</description>
            <name>WDT_STG2_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>TIMG_WDTCONFIG5_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wdt_stg3_hold.</description>
            <name>WDT_STG3_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>TIMG_WDTFEED_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>wdt_feed</description>
            <name>WDT_FEED</name>
          </field>
        </fields>
        <name>WDTFEED</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>TIMG_WDTWPROTECT_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wdt_wkey.</description>
            <name>WDT_WKEY</name>
          </field>
        </fields>
        <name>WDTWPROTECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x50D83AA1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>TIMG_RTCCALICFG_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rtc_cali_start_cycling.</description>
            <name>RTC_CALI_START_CYCLING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_rtc_cali_clk_sel.0:rtcslowclock.1:clk_80m.2:xtal_32k</description>
            <name>RTC_CALI_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc_cali_rdy</description>
            <name>RTC_CALI_RDY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xF</bitWidth>
            <description>reg_rtc_cali_max.</description>
            <name>RTC_CALI_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rtc_cali_start.</description>
            <name>RTC_CALI_START</name>
          </field>
        </fields>
        <name>RTCCALICFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x13000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>TIMG_RTCCALICFG1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc_cali_cycling_data_vld</description>
            <name>RTC_CALI_CYCLING_DATA_VLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>rtc_cali_value</description>
            <name>RTC_CALI_VALUE</name>
          </field>
        </fields>
        <name>RTCCALICFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>INT_ENA_TIMG_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>t0_int_ena</description>
            <name>T0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wdt_int_ena</description>
            <name>WDT_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA_TIMG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>INT_RAW_TIMG_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>t0_int_raw</description>
            <name>T0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wdt_int_raw</description>
            <name>WDT_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>INT_ST_TIMG_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>t0_int_st</description>
            <name>T0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wdt_int_st</description>
            <name>WDT_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST_TIMG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>INT_CLR_TIMG_REG</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>t0_int_clr</description>
            <name>T0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wdt_int_clr</description>
            <name>WDT_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>TIMG_RTCCALICFG2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timeoutindicator</description>
            <name>RTC_CALI_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_rtc_cali_timeout_rst_cnt.Cyclesthatreleasecalibrationtimeoutreset</description>
            <name>RTC_CALI_TIMEOUT_RST_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>reg_rtc_cali_timeout_thres.timeoutifcalivaluecountsoverthreshold</description>
            <name>RTC_CALI_TIMEOUT_THRES</name>
          </field>
        </fields>
        <name>RTCCALICFG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFF98</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>TIMG_NTIMG_DATE_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>reg_ntimers_date.</description>
            <name>NTIMGS_DATE</name>
          </field>
        </fields>
        <name>NTIMG_DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2006191</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>TIMG_REGCLK_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_clk_is_active.</description>
            <name>WDT_CLK_IS_ACTIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_timer_clk_is_active.</description>
            <name>TIMER_CLK_IS_ACTIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_en.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>REGCLK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x68</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60020000</baseAddress>
    <derivedFrom>TIMG0</derivedFrom>
    <description>Timer Group</description>
    <groupName>TIMG</groupName>
    <interrupts>
      <interrupt>
        <name>TG1_T0_LEVEL</name>
        <value>0x22</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>TG1_WDT_LEVEL</name>
        <value>0x23</value>
      </interrupt>
    </interrupts>
    <name>TIMG1</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>TIMG_T0CONFIG_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_use_xtal.</description>
            <name>T0_USE_XTAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_alarm_en.</description>
            <name>T0_ALARM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_divcnt_rst.</description>
            <name>T0_DIVCNT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_t0_divider.</description>
            <name>T0_DIVIDER</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_autoreload.</description>
            <name>T0_AUTORELOAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_increase.</description>
            <name>T0_INCREASE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_t0_en.</description>
            <name>T0_EN</name>
          </field>
        </fields>
        <name>T0CONFIG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60002000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>TIMG_T0LO_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>t0_lo</description>
            <name>T0_LO</name>
          </field>
        </fields>
        <name>T0LO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>TIMG_T0HI_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x16</bitWidth>
            <description>t0_hi</description>
            <name>T0_HI</name>
          </field>
        </fields>
        <name>T0HI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>TIMG_T0UPDATE_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>t0_update</description>
            <name>T0_UPDATE</name>
          </field>
        </fields>
        <name>T0UPDATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>TIMG_T0ALARMLO_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_t0_alarm_lo.</description>
            <name>T0_ALARM_LO</name>
          </field>
        </fields>
        <name>T0ALARMLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>TIMG_T0ALARMHI_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x16</bitWidth>
            <description>reg_t0_alarm_hi.</description>
            <name>T0_ALARM_HI</name>
          </field>
        </fields>
        <name>T0ALARMHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>TIMG_T0LOADLO_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_t0_load_lo.</description>
            <name>T0_LOAD_LO</name>
          </field>
        </fields>
        <name>T0LOADLO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>TIMG_T0LOADHI_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x16</bitWidth>
            <description>reg_t0_load_hi.</description>
            <name>T0_LOAD_HI</name>
          </field>
        </fields>
        <name>T0LOADHI</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>TIMG_T0LOAD_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>t0_load</description>
            <name>T0_LOAD</name>
          </field>
        </fields>
        <name>T0LOAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>TIMG_WDTCONFIG0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_appcpu_reset_en.</description>
            <name>WDT_APPCPU_RESET_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_procpu_reset_en.</description>
            <name>WDT_PROCPU_RESET_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_flashboot_mod_en.</description>
            <name>WDT_FLASHBOOT_MOD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_wdt_sys_reset_length.</description>
            <name>WDT_SYS_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>reg_wdt_cpu_reset_length.</description>
            <name>WDT_CPU_RESET_LENGTH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_use_xtal.</description>
            <name>WDT_USE_XTAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_conf_update_en.</description>
            <name>WDT_CONF_UPDATE_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_wdt_stg3.</description>
            <name>WDT_STG3</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_wdt_stg2.</description>
            <name>WDT_STG2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_wdt_stg1.</description>
            <name>WDT_STG1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_wdt_stg0.</description>
            <name>WDT_STG0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_en.</description>
            <name>WDT_EN</name>
          </field>
        </fields>
        <name>WDTCONFIG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4C000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>TIMG_WDTCONFIG1_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_divcnt_rst.</description>
            <name>WDT_DIVCNT_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>reg_wdt_clk_prescale.</description>
            <name>WDT_CLK_PRESCALE</name>
          </field>
        </fields>
        <name>WDTCONFIG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>TIMG_WDTCONFIG2_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wdt_stg0_hold.</description>
            <name>WDT_STG0_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x18CBA80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>TIMG_WDTCONFIG3_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wdt_stg1_hold.</description>
            <name>WDT_STG1_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x7FFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>TIMG_WDTCONFIG4_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wdt_stg2_hold.</description>
            <name>WDT_STG2_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>TIMG_WDTCONFIG5_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wdt_stg3_hold.</description>
            <name>WDT_STG3_HOLD</name>
          </field>
        </fields>
        <name>WDTCONFIG5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>TIMG_WDTFEED_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>wdt_feed</description>
            <name>WDT_FEED</name>
          </field>
        </fields>
        <name>WDTFEED</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>TIMG_WDTWPROTECT_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>reg_wdt_wkey.</description>
            <name>WDT_WKEY</name>
          </field>
        </fields>
        <name>WDTWPROTECT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x50D83AA1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>TIMG_RTCCALICFG_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rtc_cali_start_cycling.</description>
            <name>RTC_CALI_START_CYCLING</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>reg_rtc_cali_clk_sel.0:rtcslowclock.1:clk_80m.2:xtal_32k</description>
            <name>RTC_CALI_CLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc_cali_rdy</description>
            <name>RTC_CALI_RDY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xF</bitWidth>
            <description>reg_rtc_cali_max.</description>
            <name>RTC_CALI_MAX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_rtc_cali_start.</description>
            <name>RTC_CALI_START</name>
          </field>
        </fields>
        <name>RTCCALICFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x13000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>TIMG_RTCCALICFG1_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>rtc_cali_cycling_data_vld</description>
            <name>RTC_CALI_CYCLING_DATA_VLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>rtc_cali_value</description>
            <name>RTC_CALI_VALUE</name>
          </field>
        </fields>
        <name>RTCCALICFG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>INT_ENA_TIMG_REG</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>t0_int_ena</description>
            <name>T0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wdt_int_ena</description>
            <name>WDT_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA_TIMG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>INT_RAW_TIMG_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>t0_int_raw</description>
            <name>T0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wdt_int_raw</description>
            <name>WDT_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>INT_ST_TIMG_REG</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>t0_int_st</description>
            <name>T0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wdt_int_st</description>
            <name>WDT_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST_TIMG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>INT_CLR_TIMG_REG</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>t0_int_clr</description>
            <name>T0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>wdt_int_clr</description>
            <name>WDT_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR_TIMERS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>TIMG_RTCCALICFG2_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>timeoutindicator</description>
            <name>RTC_CALI_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>reg_rtc_cali_timeout_rst_cnt.Cyclesthatreleasecalibrationtimeoutreset</description>
            <name>RTC_CALI_TIMEOUT_RST_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x19</bitWidth>
            <description>reg_rtc_cali_timeout_thres.timeoutifcalivaluecountsoverthreshold</description>
            <name>RTC_CALI_TIMEOUT_THRES</name>
          </field>
        </fields>
        <name>RTCCALICFG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFF98</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF8</addressOffset>
        <description>TIMG_NTIMG_DATE_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1C</bitWidth>
            <description>reg_ntimers_date.</description>
            <name>NTIMGS_DATE</name>
          </field>
        </fields>
        <name>NTIMG_DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2006191</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xFC</addressOffset>
        <description>TIMG_REGCLK_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_wdt_clk_is_active.</description>
            <name>WDT_CLK_IS_ACTIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_timer_clk_is_active.</description>
            <name>TIMER_CLK_IS_ACTIVE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>reg_clk_en.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>REGCLK</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60000000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x84</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60000000</baseAddress>
    <description>UART (Universal Asynchronous Receiver-Transmitter) Controller</description>
    <groupName>UART</groupName>
    <interrupts>
      <interrupt>
        <name>UART0</name>
        <value>0x15</value>
      </interrupt>
    </interrupts>
    <name>UART0</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>FIFO data register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>UART 0 accesses FIFO via this register.</description>
            <name>RXFIFO_RD_BYTE</name>
          </field>
        </fields>
        <name>FIFO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>Raw interrupt status</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives more data than what rxfifo_full_thrhd specifies.</description>
            <name>RXFIFO_FULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when the amount of data in Tx-FIFO is less than what txfifo_empty_thrhd specifies .</description>
            <name>TXFIFO_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a parity error in the data.</description>
            <name>PARITY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a data frame error .</description>
            <name>FRM_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives more data than the FIFO can store.</description>
            <name>RXFIFO_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the edge change of DSRn signal.</description>
            <name>DSR_CHG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the edge change of CTSn signal.</description>
            <name>CTS_CHG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a 0 after the stop bit.</description>
            <name>BRK_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver takes more time than rx_tout_thrhd to receive a byte.</description>
            <name>RXFIFO_TOUT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver recevies Xon char when uart_sw_flow_con_en is set to 1.</description>
            <name>SW_XON_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives Xoff char when uart_sw_flow_con_en is set to 1.</description>
            <name>SW_XOFF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a glitch in the middle of a start bit.</description>
            <name>GLITCH_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter completes  sending  NULL characters, after all data in Tx-FIFO are sent.</description>
            <name>TX_BRK_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter has kept the shortest duration after sending the  last data.</description>
            <name>TX_BRK_IDLE_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter has send out all data in FIFO.</description>
            <name>TX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a parity error from the echo of transmitter in rs485 mode.</description>
            <name>RS485_PARITY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a data frame error from the echo of transmitter in rs485 mode.</description>
            <name>RS485_FRM_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when detects a clash between transmitter and receiver in rs485 mode.</description>
            <name>RS485_CLASH_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the configured at_cmd char.</description>
            <name>AT_CMD_CHAR_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when input rxd edge changes more times than what reg_active_threshold specifies in light sleeping mode.</description>
            <name>WAKEUP_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>Masked interrupt status</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_full_int_raw when rxfifo_full_int_ena is set to 1.</description>
            <name>RXFIFO_FULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for  txfifo_empty_int_raw  when txfifo_empty_int_ena is set to 1.</description>
            <name>TXFIFO_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for parity_err_int_raw when parity_err_int_ena is set to 1.</description>
            <name>PARITY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for frm_err_int_raw when frm_err_int_ena is set to 1.</description>
            <name>FRM_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_ovf_int_raw when rxfifo_ovf_int_ena is set to 1.</description>
            <name>RXFIFO_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for dsr_chg_int_raw when dsr_chg_int_ena is set to 1.</description>
            <name>DSR_CHG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for cts_chg_int_raw when cts_chg_int_ena is set to 1.</description>
            <name>CTS_CHG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for brk_det_int_raw when brk_det_int_ena is set to 1.</description>
            <name>BRK_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_tout_int_raw when rxfifo_tout_int_ena is set to 1.</description>
            <name>RXFIFO_TOUT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for sw_xon_int_raw when sw_xon_int_ena is set to 1.</description>
            <name>SW_XON_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for sw_xoff_int_raw when sw_xoff_int_ena is set to 1.</description>
            <name>SW_XOFF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for glitch_det_int_raw when glitch_det_int_ena is set to 1.</description>
            <name>GLITCH_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for tx_brk_done_int_raw when tx_brk_done_int_ena is set to 1.</description>
            <name>TX_BRK_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the stauts bit for tx_brk_idle_done_int_raw when tx_brk_idle_done_int_ena is set to 1.</description>
            <name>TX_BRK_IDLE_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for tx_done_int_raw when tx_done_int_ena is set to 1.</description>
            <name>TX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_parity_err_int_raw when rs485_parity_int_ena is set to 1.</description>
            <name>RS485_PARITY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_frm_err_int_raw when rs485_fm_err_int_ena is set to 1.</description>
            <name>RS485_FRM_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_clash_int_raw when rs485_clash_int_ena is set to 1.</description>
            <name>RS485_CLASH_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for at_cmd_det_int_raw when at_cmd_char_det_int_ena is set to 1.</description>
            <name>AT_CMD_CHAR_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for uart_wakeup_int_raw when uart_wakeup_int_ena is set to 1.</description>
            <name>WAKEUP_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>Interrupt enable bits</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_full_int_st register.</description>
            <name>RXFIFO_FULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for txfifo_empty_int_st register.</description>
            <name>TXFIFO_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for parity_err_int_st register.</description>
            <name>PARITY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for frm_err_int_st register.</description>
            <name>FRM_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_ovf_int_st register.</description>
            <name>RXFIFO_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for dsr_chg_int_st register.</description>
            <name>DSR_CHG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for cts_chg_int_st register.</description>
            <name>CTS_CHG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for brk_det_int_st register.</description>
            <name>BRK_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_tout_int_st register.</description>
            <name>RXFIFO_TOUT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for sw_xon_int_st register.</description>
            <name>SW_XON_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for sw_xoff_int_st register.</description>
            <name>SW_XOFF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for glitch_det_int_st register.</description>
            <name>GLITCH_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_brk_done_int_st register.</description>
            <name>TX_BRK_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_brk_idle_done_int_st register.</description>
            <name>TX_BRK_IDLE_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_done_int_st register.</description>
            <name>TX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_parity_err_int_st register.</description>
            <name>RS485_PARITY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_parity_err_int_st register.</description>
            <name>RS485_FRM_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_clash_int_st register.</description>
            <name>RS485_CLASH_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for at_cmd_char_det_int_st register.</description>
            <name>AT_CMD_CHAR_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for uart_wakeup_int_st register.</description>
            <name>WAKEUP_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>Interrupt clear bits</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_full_int_raw interrupt.</description>
            <name>RXFIFO_FULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear txfifo_empty_int_raw interrupt.</description>
            <name>TXFIFO_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear parity_err_int_raw interrupt.</description>
            <name>PARITY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear frm_err_int_raw interrupt.</description>
            <name>FRM_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear rxfifo_ovf_int_raw interrupt.</description>
            <name>RXFIFO_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the dsr_chg_int_raw interrupt.</description>
            <name>DSR_CHG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the cts_chg_int_raw interrupt.</description>
            <name>CTS_CHG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the brk_det_int_raw interrupt.</description>
            <name>BRK_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_tout_int_raw interrupt.</description>
            <name>RXFIFO_TOUT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the sw_xon_int_raw interrupt.</description>
            <name>SW_XON_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the sw_xoff_int_raw interrupt.</description>
            <name>SW_XOFF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the glitch_det_int_raw interrupt.</description>
            <name>GLITCH_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_brk_done_int_raw interrupt..</description>
            <name>TX_BRK_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_brk_idle_done_int_raw interrupt.</description>
            <name>TX_BRK_IDLE_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_done_int_raw interrupt.</description>
            <name>TX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_parity_err_int_raw interrupt.</description>
            <name>RS485_PARITY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_frm_err_int_raw interrupt.</description>
            <name>RS485_FRM_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_clash_int_raw interrupt.</description>
            <name>RS485_CLASH_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the at_cmd_char_det_int_raw interrupt.</description>
            <name>AT_CMD_CHAR_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the uart_wakeup_int_raw interrupt.</description>
            <name>WAKEUP_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>Clock divider configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>The integral part of the frequency divider factor.</description>
            <name>CLKDIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The decimal part of the frequency divider factor.</description>
            <name>FRAG</name>
          </field>
        </fields>
        <name>CLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2B6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>Rx Filter configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>when input pulse width is lower than this value, the pulse is ignored.</description>
            <name>GLITCH_FILT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable Rx signal filter.</description>
            <name>GLITCH_FILT_EN</name>
          </field>
        </fields>
        <name>RX_FILT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>UART status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>Stores the byte number of valid data in Rx-FIFO.</description>
            <name>RXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The register represent the level value of the internal uart dsr signal.</description>
            <name>DSRN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register represent the level value of the internal uart cts signal.</description>
            <name>CTSN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register represent the  level value of the internal uart rxd signal.</description>
            <name>RXD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>Stores the byte number of data in Tx-FIFO.</description>
            <name>TXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit represents the level of the internal uart dtr signal.</description>
            <name>DTRN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit represents the level of the internal uart rts signal.</description>
            <name>RTSN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit represents the  level of the internal uart txd signal.</description>
            <name>TXD</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xE000C000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the parity check mode.</description>
            <name>PARITY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable uart parity check.</description>
            <name>PARITY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to set the length of data.</description>
            <name>BIT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to set the length of  stop bit.</description>
            <name>STOP_BIT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the software rts signal which is used in software flow control.</description>
            <name>SW_RTS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the software dtr signal which is used in software flow control.</description>
            <name>SW_DTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale transmitter to  send NULL when the process of sending data is done.</description>
            <name>TXD_BRK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable IrDA loopback mode.</description>
            <name>IRDA_DPLX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the start enable bit for IrDA transmitter.</description>
            <name>IRDA_TX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'h1: The IrDA transmitter's 11th bit is the same as 10th bit. 1'h0: Set IrDA transmitter's 11th bit to 0.</description>
            <name>IRDA_WCTL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to invert the level of  IrDA transmitter.</description>
            <name>IRDA_TX_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to invert the level of IrDA receiver.</description>
            <name>IRDA_RX_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable uart loopback test mode.</description>
            <name>LOOPBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable flow control function for transmitter.</description>
            <name>TX_FLOW_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable IrDA protocol.</description>
            <name>IRDA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset the uart receive-FIFO.</description>
            <name>RXFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset the uart transmit-FIFO.</description>
            <name>TXFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart rxd signal.</description>
            <name>RXD_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart cts signal.</description>
            <name>CTS_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart dsr signal.</description>
            <name>DSR_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart txd signal.</description>
            <name>TXD_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart rts signal.</description>
            <name>RTS_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart dtr signal.</description>
            <name>DTR_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'h1: Receiver stops storing data into FIFO when data is wrong. 1'h0: Receiver stores the data even if the  received data is wrong.</description>
            <name>ERR_WR_MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for detecting baudrate.</description>
            <name>AUTOBAUD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>UART memory clock gate enable signal.</description>
            <name>MEM_CLK_EN</name>
          </field>
        </fields>
        <name>CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000001C</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>Configuration register 1</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>It will produce rxfifo_full_int interrupt when receiver receives more data than this register value.</description>
            <name>RXFIFO_FULL_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>It will produce txfifo_empty_int interrupt when the data amount in Tx-FIFO is less than this register value.</description>
            <name>TXFIFO_EMPTY_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Disable UART Rx data overflow detect.</description>
            <name>DIS_RX_DAT_OVF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop accumulating idle_cnt when hardware flow control works.</description>
            <name>RX_TOUT_FLOW_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the flow enable bit for UART receiver.</description>
            <name>RX_FLOW_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enble bit for uart receiver's timeout function.</description>
            <name>RX_TOUT_EN</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC060</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>Autobaud minimum low pulse duration register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores the value of the minimum duration time of the low level pulse. It is used in baud rate-detect process.</description>
            <name>MIN_CNT</name>
          </field>
        </fields>
        <name>LOWPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>Autobaud minimum high pulse duration register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores  the value of the maxinum duration time for the high level pulse. It is used in baud rate-detect process.</description>
            <name>MIN_CNT</name>
          </field>
        </fields>
        <name>HIGHPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>Autobaud edge change count register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the count of rxd edge change. It is used in baud rate-detect process.</description>
            <name>RXD_EDGE_CNT</name>
          </field>
        </fields>
        <name>RXD_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>Software flow-control configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable software flow control. It is used with register sw_xon or sw_xoff.</description>
            <name>SW_FLOW_CON_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to remove flow control char from the received data.</description>
            <name>XONOFF_DEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable the transmitter to go on sending data.</description>
            <name>FORCE_XON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop the  transmitter from sending data.</description>
            <name>FORCE_XOFF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send Xon char. It is cleared by hardware automatically.</description>
            <name>SEND_XON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send Xoff char. It is cleared by hardware automatically.</description>
            <name>SEND_XOFF</name>
          </field>
        </fields>
        <name>FLOW_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>Sleep-mode configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The uart is activated from light sleeping mode when the input rxd edge changes more times than this register value.</description>
            <name>ACTIVE_THRESHOLD</name>
          </field>
        </fields>
        <name>SLEEP_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>Software flow-control character configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When the data amount in Rx-FIFO is more than this register value with uart_sw_flow_con_en set to 1, it will send a Xoff char.</description>
            <name>XOFF_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the Xoff flow control char.</description>
            <name>XOFF_CHAR</name>
          </field>
        </fields>
        <name>SWFC_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x26E0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>Software flow-control character configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When the data amount in Rx-FIFO is less than this register value with uart_sw_flow_con_en set to 1, it will send a Xon char.</description>
            <name>XON_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the Xon flow control char.</description>
            <name>XON_CHAR</name>
          </field>
        </fields>
        <name>SWFC_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>Tx Break character configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the number of 0 to be sent after the process of sending data is done. It is active when txd_brk is set to 1.</description>
            <name>TX_BRK_NUM</name>
          </field>
        </fields>
        <name>TXBRK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>Frame-end idle configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>It will produce frame end signal when receiver takes more time to receive one byte data than this register value.</description>
            <name>RX_IDLE_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the duration time between transfers.</description>
            <name>TX_IDLE_NUM</name>
          </field>
        </fields>
        <name>IDLE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>RS485 mode configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to choose the rs485 mode.</description>
            <name>RS485_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to delay the stop bit by 1 bit.</description>
            <name>DL0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to delay the stop bit by 1 bit.</description>
            <name>DL1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable receiver could receive data when the transmitter is transmitting data in rs485 mode.</description>
            <name>RS485TX_RX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'h1: enable rs485 transmitter to send data when rs485 receiver line is busy.</description>
            <name>RS485RXBY_TX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to delay the receiver's internal data signal.</description>
            <name>RS485_RX_DLY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to delay the transmitter's internal data signal.</description>
            <name>RS485_TX_DLY_NUM</name>
          </field>
        </fields>
        <name>RS485_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>Pre-sequence timing configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure the idle duration time before the first at_cmd is received by receiver.</description>
            <name>PRE_IDLE_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_PRECNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x901</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>Post-sequence timing configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure the duration time between the last at_cmd and the next data.</description>
            <name>POST_IDLE_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_POSTCNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x901</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>Timeout configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure the duration time between the at_cmd chars.</description>
            <name>RX_GAP_TOUT</name>
          </field>
        </fields>
        <name>AT_CMD_GAPTOUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xB</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>AT escape sequence detection configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the content of at_cmd char.</description>
            <name>AT_CMD_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the num of continuous at_cmd chars received by receiver.</description>
            <name>CHAR_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_CHAR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x32B</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>UART threshold and allocation configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This register is used to configure the amount of mem allocated for receive-FIFO. The default number is 128 bytes.</description>
            <name>RX_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This register is used to configure the amount of mem allocated for transmit-FIFO. The default number is 128 bytes.</description>
            <name>TX_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>This register is used to configure the maximum amount of data that can be received  when hardware flow control works.</description>
            <name>RX_FLOW_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the threshold time that receiver takes to receive one byte. The rxfifo_tout_int interrupt will be trigger when the receiver takes more time to receive one byte with rx_tout_en set to 1.</description>
            <name>RX_TOUT_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to force power down UART memory.</description>
            <name>MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to force power up UART memory.</description>
            <name>MEM_FORCE_PU</name>
          </field>
        </fields>
        <name>MEM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA0012</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>Tx-FIFO write and read offset address.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the offset address in Tx-FIFO when software writes Tx-FIFO via APB.</description>
            <name>APB_TX_WADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the offset address in Tx-FIFO when Tx-FSM reads data via Tx-FIFO_Ctrl.</description>
            <name>TX_RADDR</name>
          </field>
        </fields>
        <name>MEM_TX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>Rx-FIFO write and read offset address.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the offset address in RX-FIFO when software reads data from Rx-FIFO via APB. UART0 is 10'h100. UART1 is 10'h180.</description>
            <name>APB_RX_RADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the offset address in Rx-FIFO when Rx-FIFO_Ctrl writes Rx-FIFO. UART0 is 10'h100. UART1 is 10'h180.</description>
            <name>RX_WADDR</name>
          </field>
        </fields>
        <name>MEM_RX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>UART transmit and receive status.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This is the status register of receiver.</description>
            <name>ST_URX_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This is the status register of transmitter.</description>
            <name>ST_UTX_OUT</name>
          </field>
        </fields>
        <name>FSM_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>Autobaud high pulse register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores the minimal input clock count between two positive edges. It is used in boudrate-detect process.</description>
            <name>POSEDGE_MIN_CNT</name>
          </field>
        </fields>
        <name>POSPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>Autobaud low pulse register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores the minimal input clock count between two negative edges. It is used in boudrate-detect process.</description>
            <name>NEGEDGE_MIN_CNT</name>
          </field>
        </fields>
        <name>NEGPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>UART core clock configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The  denominator of the frequency divider factor.</description>
            <name>SCLK_DIV_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The numerator of the frequency divider factor.</description>
            <name>SCLK_DIV_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The integral part of the frequency divider factor.</description>
            <name>SCLK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>UART clock source select. 1: 80Mhz, 2: 8Mhz, 3: XTAL.</description>
            <name>SCLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable UART Tx/Rx clock.</description>
            <name>SCLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 then write 0 to this bit, reset UART Tx/Rx.</description>
            <name>RST_CORE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable UART Tx clock.</description>
            <name>TX_SCLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable UART Rx clock.</description>
            <name>RX_SCLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 then write 0 to this bit, reset UART Tx.</description>
            <name>TX_RST_CORE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 then write 0 to this bit, reset UART Rx.</description>
            <name>RX_RST_CORE</name>
          </field>
        </fields>
        <name>CLK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3701000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>UART Version register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This is the version register.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2008270</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>UART ID register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>This register is used to configure the uart_id.</description>
            <name>ID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit used to select synchronize mode. 1: Registers are auto synchronized into UART Core clock and UART core should be keep the same with APB clock. 0: After configure registers, software needs to write 1 to UART_REG_UPDATE to synchronize registers.</description>
            <name>HIGH_SPEED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software write 1 would synchronize registers into UART Core clock domain and would be cleared by hardware after synchronization is done.</description>
            <name>REG_UPDATE</name>
          </field>
        </fields>
        <name>ID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x84</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60010000</baseAddress>
    <derivedFrom>UART0</derivedFrom>
    <description>UART (Universal Asynchronous Receiver-Transmitter) Controller</description>
    <groupName>UART</groupName>
    <interrupts>
      <interrupt>
        <name>UART1</name>
        <value>0x16</value>
      </interrupt>
    </interrupts>
    <name>UART1</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>FIFO data register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>UART 0 accesses FIFO via this register.</description>
            <name>RXFIFO_RD_BYTE</name>
          </field>
        </fields>
        <name>FIFO</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>Raw interrupt status</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives more data than what rxfifo_full_thrhd specifies.</description>
            <name>RXFIFO_FULL_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when the amount of data in Tx-FIFO is less than what txfifo_empty_thrhd specifies .</description>
            <name>TXFIFO_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a parity error in the data.</description>
            <name>PARITY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a data frame error .</description>
            <name>FRM_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives more data than the FIFO can store.</description>
            <name>RXFIFO_OVF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the edge change of DSRn signal.</description>
            <name>DSR_CHG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the edge change of CTSn signal.</description>
            <name>CTS_CHG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a 0 after the stop bit.</description>
            <name>BRK_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver takes more time than rx_tout_thrhd to receive a byte.</description>
            <name>RXFIFO_TOUT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver recevies Xon char when uart_sw_flow_con_en is set to 1.</description>
            <name>SW_XON_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver receives Xoff char when uart_sw_flow_con_en is set to 1.</description>
            <name>SW_XOFF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a glitch in the middle of a start bit.</description>
            <name>GLITCH_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter completes  sending  NULL characters, after all data in Tx-FIFO are sent.</description>
            <name>TX_BRK_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter has kept the shortest duration after sending the  last data.</description>
            <name>TX_BRK_IDLE_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when transmitter has send out all data in FIFO.</description>
            <name>TX_DONE_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a parity error from the echo of transmitter in rs485 mode.</description>
            <name>RS485_PARITY_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects a data frame error from the echo of transmitter in rs485 mode.</description>
            <name>RS485_FRM_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when detects a clash between transmitter and receiver in rs485 mode.</description>
            <name>RS485_CLASH_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when receiver detects the configured at_cmd char.</description>
            <name>AT_CMD_CHAR_DET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This interrupt raw bit turns to high level when input rxd edge changes more times than what reg_active_threshold specifies in light sleeping mode.</description>
            <name>WAKEUP_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>Masked interrupt status</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_full_int_raw when rxfifo_full_int_ena is set to 1.</description>
            <name>RXFIFO_FULL_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for  txfifo_empty_int_raw  when txfifo_empty_int_ena is set to 1.</description>
            <name>TXFIFO_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for parity_err_int_raw when parity_err_int_ena is set to 1.</description>
            <name>PARITY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for frm_err_int_raw when frm_err_int_ena is set to 1.</description>
            <name>FRM_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_ovf_int_raw when rxfifo_ovf_int_ena is set to 1.</description>
            <name>RXFIFO_OVF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for dsr_chg_int_raw when dsr_chg_int_ena is set to 1.</description>
            <name>DSR_CHG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for cts_chg_int_raw when cts_chg_int_ena is set to 1.</description>
            <name>CTS_CHG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for brk_det_int_raw when brk_det_int_ena is set to 1.</description>
            <name>BRK_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rxfifo_tout_int_raw when rxfifo_tout_int_ena is set to 1.</description>
            <name>RXFIFO_TOUT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for sw_xon_int_raw when sw_xon_int_ena is set to 1.</description>
            <name>SW_XON_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for sw_xoff_int_raw when sw_xoff_int_ena is set to 1.</description>
            <name>SW_XOFF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for glitch_det_int_raw when glitch_det_int_ena is set to 1.</description>
            <name>GLITCH_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for tx_brk_done_int_raw when tx_brk_done_int_ena is set to 1.</description>
            <name>TX_BRK_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the stauts bit for tx_brk_idle_done_int_raw when tx_brk_idle_done_int_ena is set to 1.</description>
            <name>TX_BRK_IDLE_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for tx_done_int_raw when tx_done_int_ena is set to 1.</description>
            <name>TX_DONE_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_parity_err_int_raw when rs485_parity_int_ena is set to 1.</description>
            <name>RS485_PARITY_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_frm_err_int_raw when rs485_fm_err_int_ena is set to 1.</description>
            <name>RS485_FRM_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for rs485_clash_int_raw when rs485_clash_int_ena is set to 1.</description>
            <name>RS485_CLASH_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for at_cmd_det_int_raw when at_cmd_char_det_int_ena is set to 1.</description>
            <name>AT_CMD_CHAR_DET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the status bit for uart_wakeup_int_raw when uart_wakeup_int_ena is set to 1.</description>
            <name>WAKEUP_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>Interrupt enable bits</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_full_int_st register.</description>
            <name>RXFIFO_FULL_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for txfifo_empty_int_st register.</description>
            <name>TXFIFO_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for parity_err_int_st register.</description>
            <name>PARITY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for frm_err_int_st register.</description>
            <name>FRM_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_ovf_int_st register.</description>
            <name>RXFIFO_OVF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for dsr_chg_int_st register.</description>
            <name>DSR_CHG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for cts_chg_int_st register.</description>
            <name>CTS_CHG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for brk_det_int_st register.</description>
            <name>BRK_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rxfifo_tout_int_st register.</description>
            <name>RXFIFO_TOUT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for sw_xon_int_st register.</description>
            <name>SW_XON_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for sw_xoff_int_st register.</description>
            <name>SW_XOFF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for glitch_det_int_st register.</description>
            <name>GLITCH_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_brk_done_int_st register.</description>
            <name>TX_BRK_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_brk_idle_done_int_st register.</description>
            <name>TX_BRK_IDLE_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for tx_done_int_st register.</description>
            <name>TX_DONE_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_parity_err_int_st register.</description>
            <name>RS485_PARITY_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_parity_err_int_st register.</description>
            <name>RS485_FRM_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for rs485_clash_int_st register.</description>
            <name>RS485_CLASH_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for at_cmd_char_det_int_st register.</description>
            <name>AT_CMD_CHAR_DET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for uart_wakeup_int_st register.</description>
            <name>WAKEUP_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>Interrupt clear bits</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_full_int_raw interrupt.</description>
            <name>RXFIFO_FULL_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear txfifo_empty_int_raw interrupt.</description>
            <name>TXFIFO_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear parity_err_int_raw interrupt.</description>
            <name>PARITY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear frm_err_int_raw interrupt.</description>
            <name>FRM_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear rxfifo_ovf_int_raw interrupt.</description>
            <name>RXFIFO_OVF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the dsr_chg_int_raw interrupt.</description>
            <name>DSR_CHG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the cts_chg_int_raw interrupt.</description>
            <name>CTS_CHG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the brk_det_int_raw interrupt.</description>
            <name>BRK_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rxfifo_tout_int_raw interrupt.</description>
            <name>RXFIFO_TOUT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the sw_xon_int_raw interrupt.</description>
            <name>SW_XON_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the sw_xoff_int_raw interrupt.</description>
            <name>SW_XOFF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the glitch_det_int_raw interrupt.</description>
            <name>GLITCH_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_brk_done_int_raw interrupt..</description>
            <name>TX_BRK_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_brk_idle_done_int_raw interrupt.</description>
            <name>TX_BRK_IDLE_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the tx_done_int_raw interrupt.</description>
            <name>TX_DONE_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_parity_err_int_raw interrupt.</description>
            <name>RS485_PARITY_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_frm_err_int_raw interrupt.</description>
            <name>RS485_FRM_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the rs485_clash_int_raw interrupt.</description>
            <name>RS485_CLASH_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the at_cmd_char_det_int_raw interrupt.</description>
            <name>AT_CMD_CHAR_DET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the uart_wakeup_int_raw interrupt.</description>
            <name>WAKEUP_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>Clock divider configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>The integral part of the frequency divider factor.</description>
            <name>CLKDIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>The decimal part of the frequency divider factor.</description>
            <name>FRAG</name>
          </field>
        </fields>
        <name>CLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2B6</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>Rx Filter configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>when input pulse width is lower than this value, the pulse is ignored.</description>
            <name>GLITCH_FILT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable Rx signal filter.</description>
            <name>GLITCH_FILT_EN</name>
          </field>
        </fields>
        <name>RX_FILT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>UART status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>Stores the byte number of valid data in Rx-FIFO.</description>
            <name>RXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The register represent the level value of the internal uart dsr signal.</description>
            <name>DSRN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register represent the level value of the internal uart cts signal.</description>
            <name>CTSN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register represent the  level value of the internal uart rxd signal.</description>
            <name>RXD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>Stores the byte number of data in Tx-FIFO.</description>
            <name>TXFIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1D</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit represents the level of the internal uart dtr signal.</description>
            <name>DTRN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit represents the level of the internal uart rts signal.</description>
            <name>RTSN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit represents the  level of the internal uart txd signal.</description>
            <name>TXD</name>
          </field>
        </fields>
        <name>STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xE000C000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the parity check mode.</description>
            <name>PARITY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable uart parity check.</description>
            <name>PARITY_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to set the length of data.</description>
            <name>BIT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>This register is used to set the length of  stop bit.</description>
            <name>STOP_BIT_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the software rts signal which is used in software flow control.</description>
            <name>SW_RTS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to configure the software dtr signal which is used in software flow control.</description>
            <name>SW_DTR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enbale transmitter to  send NULL when the process of sending data is done.</description>
            <name>TXD_BRK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable IrDA loopback mode.</description>
            <name>IRDA_DPLX</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the start enable bit for IrDA transmitter.</description>
            <name>IRDA_TX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'h1: The IrDA transmitter's 11th bit is the same as 10th bit. 1'h0: Set IrDA transmitter's 11th bit to 0.</description>
            <name>IRDA_WCTL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to invert the level of  IrDA transmitter.</description>
            <name>IRDA_TX_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to invert the level of IrDA receiver.</description>
            <name>IRDA_RX_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable uart loopback test mode.</description>
            <name>LOOPBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable flow control function for transmitter.</description>
            <name>TX_FLOW_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable IrDA protocol.</description>
            <name>IRDA_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset the uart receive-FIFO.</description>
            <name>RXFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to reset the uart transmit-FIFO.</description>
            <name>TXFIFO_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart rxd signal.</description>
            <name>RXD_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart cts signal.</description>
            <name>CTS_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart dsr signal.</description>
            <name>DSR_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart txd signal.</description>
            <name>TXD_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart rts signal.</description>
            <name>RTS_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to inverse the level value of uart dtr signal.</description>
            <name>DTR_INV</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'h1: Receiver stops storing data into FIFO when data is wrong. 1'h0: Receiver stores the data even if the  received data is wrong.</description>
            <name>ERR_WR_MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enable bit for detecting baudrate.</description>
            <name>AUTOBAUD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1C</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>UART memory clock gate enable signal.</description>
            <name>MEM_CLK_EN</name>
          </field>
        </fields>
        <name>CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1000001C</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>Configuration register 1</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>It will produce rxfifo_full_int interrupt when receiver receives more data than this register value.</description>
            <name>RXFIFO_FULL_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>It will produce txfifo_empty_int interrupt when the data amount in Tx-FIFO is less than this register value.</description>
            <name>TXFIFO_EMPTY_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Disable UART Rx data overflow detect.</description>
            <name>DIS_RX_DAT_OVF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x13</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop accumulating idle_cnt when hardware flow control works.</description>
            <name>RX_TOUT_FLOW_DIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the flow enable bit for UART receiver.</description>
            <name>RX_FLOW_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x15</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the enble bit for uart receiver's timeout function.</description>
            <name>RX_TOUT_EN</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xC060</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>Autobaud minimum low pulse duration register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores the value of the minimum duration time of the low level pulse. It is used in baud rate-detect process.</description>
            <name>MIN_CNT</name>
          </field>
        </fields>
        <name>LOWPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>Autobaud minimum high pulse duration register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores  the value of the maxinum duration time for the high level pulse. It is used in baud rate-detect process.</description>
            <name>MIN_CNT</name>
          </field>
        </fields>
        <name>HIGHPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>Autobaud edge change count register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the count of rxd edge change. It is used in baud rate-detect process.</description>
            <name>RXD_EDGE_CNT</name>
          </field>
        </fields>
        <name>RXD_CNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>Software flow-control configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable software flow control. It is used with register sw_xon or sw_xoff.</description>
            <name>SW_FLOW_CON_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to remove flow control char from the received data.</description>
            <name>XONOFF_DEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable the transmitter to go on sending data.</description>
            <name>FORCE_XON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to stop the  transmitter from sending data.</description>
            <name>FORCE_XOFF</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send Xon char. It is cleared by hardware automatically.</description>
            <name>SEND_XON</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to send Xoff char. It is cleared by hardware automatically.</description>
            <name>SEND_XOFF</name>
          </field>
        </fields>
        <name>FLOW_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>Sleep-mode configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>The uart is activated from light sleeping mode when the input rxd edge changes more times than this register value.</description>
            <name>ACTIVE_THRESHOLD</name>
          </field>
        </fields>
        <name>SLEEP_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>Software flow-control character configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When the data amount in Rx-FIFO is more than this register value with uart_sw_flow_con_en set to 1, it will send a Xoff char.</description>
            <name>XOFF_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the Xoff flow control char.</description>
            <name>XOFF_CHAR</name>
          </field>
        </fields>
        <name>SWFC_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x26E0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>Software flow-control character configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>When the data amount in Rx-FIFO is less than this register value with uart_sw_flow_con_en set to 1, it will send a Xon char.</description>
            <name>XON_THRESHOLD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register stores the Xon flow control char.</description>
            <name>XON_CHAR</name>
          </field>
        </fields>
        <name>SWFC_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>Tx Break character configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the number of 0 to be sent after the process of sending data is done. It is active when txd_brk is set to 1.</description>
            <name>TX_BRK_NUM</name>
          </field>
        </fields>
        <name>TXBRK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>Frame-end idle configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>It will produce frame end signal when receiver takes more time to receive one byte data than this register value.</description>
            <name>RX_IDLE_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the duration time between transfers.</description>
            <name>TX_IDLE_NUM</name>
          </field>
        </fields>
        <name>IDLE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>RS485 mode configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to choose the rs485 mode.</description>
            <name>RS485_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to delay the stop bit by 1 bit.</description>
            <name>DL0_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to delay the stop bit by 1 bit.</description>
            <name>DL1_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable receiver could receive data when the transmitter is transmitting data in rs485 mode.</description>
            <name>RS485TX_RX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'h1: enable rs485 transmitter to send data when rs485 receiver line is busy.</description>
            <name>RS485RXBY_TX_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This register is used to delay the receiver's internal data signal.</description>
            <name>RS485_RX_DLY_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This register is used to delay the transmitter's internal data signal.</description>
            <name>RS485_TX_DLY_NUM</name>
          </field>
        </fields>
        <name>RS485_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>Pre-sequence timing configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure the idle duration time before the first at_cmd is received by receiver.</description>
            <name>PRE_IDLE_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_PRECNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x901</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>Post-sequence timing configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure the duration time between the last at_cmd and the next data.</description>
            <name>POST_IDLE_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_POSTCNT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x901</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>Timeout configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>This register is used to configure the duration time between the at_cmd chars.</description>
            <name>RX_GAP_TOUT</name>
          </field>
        </fields>
        <name>AT_CMD_GAPTOUT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xB</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>AT escape sequence detection configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the content of at_cmd char.</description>
            <name>AT_CMD_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register is used to configure the num of continuous at_cmd chars received by receiver.</description>
            <name>CHAR_NUM</name>
          </field>
        </fields>
        <name>AT_CMD_CHAR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x32B</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>UART threshold and allocation configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This register is used to configure the amount of mem allocated for receive-FIFO. The default number is 128 bytes.</description>
            <name>RX_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This register is used to configure the amount of mem allocated for transmit-FIFO. The default number is 128 bytes.</description>
            <name>TX_SIZE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x9</bitWidth>
            <description>This register is used to configure the maximum amount of data that can be received  when hardware flow control works.</description>
            <name>RX_FLOW_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register is used to configure the threshold time that receiver takes to receive one byte. The rxfifo_tout_int interrupt will be trigger when the receiver takes more time to receive one byte with rx_tout_en set to 1.</description>
            <name>RX_TOUT_THRHD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to force power down UART memory.</description>
            <name>MEM_FORCE_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to force power up UART memory.</description>
            <name>MEM_FORCE_PU</name>
          </field>
        </fields>
        <name>MEM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xA0012</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>Tx-FIFO write and read offset address.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the offset address in Tx-FIFO when software writes Tx-FIFO via APB.</description>
            <name>APB_TX_WADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the offset address in Tx-FIFO when Tx-FSM reads data via Tx-FIFO_Ctrl.</description>
            <name>TX_RADDR</name>
          </field>
        </fields>
        <name>MEM_TX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>Rx-FIFO write and read offset address.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the offset address in RX-FIFO when software reads data from Rx-FIFO via APB. UART0 is 10'h100. UART1 is 10'h180.</description>
            <name>APB_RX_RADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>This register stores the offset address in Rx-FIFO when Rx-FIFO_Ctrl writes Rx-FIFO. UART0 is 10'h100. UART1 is 10'h180.</description>
            <name>RX_WADDR</name>
          </field>
        </fields>
        <name>MEM_RX_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>UART transmit and receive status.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This is the status register of receiver.</description>
            <name>ST_URX_OUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>This is the status register of transmitter.</description>
            <name>ST_UTX_OUT</name>
          </field>
        </fields>
        <name>FSM_STATUS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>Autobaud high pulse register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores the minimal input clock count between two positive edges. It is used in boudrate-detect process.</description>
            <name>POSEDGE_MIN_CNT</name>
          </field>
        </fields>
        <name>POSPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>Autobaud low pulse register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>This register stores the minimal input clock count between two negative edges. It is used in boudrate-detect process.</description>
            <name>NEGEDGE_MIN_CNT</name>
          </field>
        </fields>
        <name>NEGPULSE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>UART core clock configuration</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The  denominator of the frequency divider factor.</description>
            <name>SCLK_DIV_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>The numerator of the frequency divider factor.</description>
            <name>SCLK_DIV_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The integral part of the frequency divider factor.</description>
            <name>SCLK_DIV_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>UART clock source select. 1: 80Mhz, 2: 8Mhz, 3: XTAL.</description>
            <name>SCLK_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x16</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable UART Tx/Rx clock.</description>
            <name>SCLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 then write 0 to this bit, reset UART Tx/Rx.</description>
            <name>RST_CORE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable UART Tx clock.</description>
            <name>TX_SCLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x19</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable UART Rx clock.</description>
            <name>RX_SCLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1A</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 then write 0 to this bit, reset UART Tx.</description>
            <name>TX_RST_CORE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 then write 0 to this bit, reset UART Rx.</description>
            <name>RX_RST_CORE</name>
          </field>
        </fields>
        <name>CLK_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3701000</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>UART Version register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>This is the version register.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2008270</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>UART ID register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>This register is used to configure the uart_id.</description>
            <name>ID</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit used to select synchronize mode. 1: Registers are auto synchronized into UART Core clock and UART core should be keep the same with APB clock. 0: After configure registers, software needs to write 1 to UART_REG_UPDATE to synchronize registers.</description>
            <name>HIGH_SPEED</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software write 1 would synchronize registers into UART Core clock domain and would be cleared by hardware after synchronization is done.</description>
            <name>REG_UPDATE</name>
          </field>
        </fields>
        <name>ID</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x40000500</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x84</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60014000</baseAddress>
    <description>Universal Host Controller Interface</description>
    <groupName>UHCI</groupName>
    <interrupts>
      <interrupt>
        <name>UHCI0</name>
        <value>0xF</value>
      </interrupt>
    </interrupts>
    <name>UHCI0</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1, then write 0 to this bit to reset decode state machine.</description>
            <name>TX_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1, then write 0 to this bit to reset encode state machine.</description>
            <name>RX_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to link up HCI and UART0.</description>
            <name>UART0_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to link up HCI and UART1.</description>
            <name>UART1_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to separate the data frame using a special char.</description>
            <name>SEPER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to encode the data packet with a formatting header.</description>
            <name>HEAD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable UHCI to receive the 16 bit CRC.</description>
            <name>CRC_REC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If this bit is set to 1, UHCI will end the payload receiving process when UART has been in idle state.</description>
            <name>UART_IDLE_EOF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If this bit is set to 1, UHCI decoder receiving payload data is end when the receiving byte count has reached the specified value. The value is payload length indicated by UHCI packet header when UHCI_HEAD_EN is 1 or the value is configuration value when UHCI_HEAD_EN is 0. If this bit is set to 0, UHCI decoder receiving payload data is end when 0xc0 is received.</description>
            <name>LEN_EOF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable data integrity checking by appending a 16 bit CCITT-CRC to end of the payload.</description>
            <name>ENCODE_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'b1: Force clock on for register. 1'b0: Support clock only when application writes registers.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If this bit is set to 1, UHCI will end payload receive process when NULL frame is received by UART.</description>
            <name>UART_RX_BRK_EOF_EN</name>
          </field>
        </fields>
        <name>CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6E0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_S_REG_Q_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_A_REG_Q_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the interrupt raw bit. Triggered when there are some errors in EOF in the</description>
            <name>OUT_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Soft control int raw bit.</description>
            <name>APP_CTRL0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Soft control int raw bit.</description>
            <name>APP_CTRL1_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_S_REG_Q_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_A_REG_Q_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>OUTLINK_EOF_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL1_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_S_REG_Q_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_A_REG_Q_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>OUTLINK_EOF_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL1_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_S_REG_Q_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_A_REG_Q_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>OUTLINK_EOF_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL1_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>CHECK_SUM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>CHECK_SEQ_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>CRC_DISABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SAVE_HEAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_CHECK_SUM_RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_ACK_NUM_RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>WAIT_SW_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SW_START</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x33</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>RX_ERR_CAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>DECODE_STATE</name>
          </field>
        </fields>
        <name>STATE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>ENCODE_STATE</name>
          </field>
        </fields>
        <name>STATE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_C0_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_DB_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_11_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_13_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_C0_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_DB_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_11_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_13_ESC_EN</name>
          </field>
        </fields>
        <name>ESCAPE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x33</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>TXFIFO_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>TXFIFO_TIMEOUT_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TXFIFO_TIMEOUT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>RXFIFO_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>RXFIFO_TIMEOUT_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RXFIFO_TIMEOUT_ENA</name>
          </field>
        </fields>
        <name>HUNG_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x810810</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>ACK_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>LOAD</name>
          </field>
        </fields>
        <name>ACK_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>RX_HEAD</name>
          </field>
        </fields>
        <name>RX_HEAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>SINGLE_SEND_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SINGLE_SEND_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>ALWAYS_SEND_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>ALWAYS_SEND_EN</name>
          </field>
        </fields>
        <name>QUICK_SENT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q0_WORD0</name>
          </field>
        </fields>
        <name>REG_Q0_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q0_WORD1</name>
          </field>
        </fields>
        <name>REG_Q0_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q1_WORD0</name>
          </field>
        </fields>
        <name>REG_Q1_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q1_WORD1</name>
          </field>
        </fields>
        <name>REG_Q1_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q2_WORD0</name>
          </field>
        </fields>
        <name>REG_Q2_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q2_WORD1</name>
          </field>
        </fields>
        <name>REG_Q2_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q3_WORD0</name>
          </field>
        </fields>
        <name>REG_Q3_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q3_WORD1</name>
          </field>
        </fields>
        <name>REG_Q3_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q4_WORD0</name>
          </field>
        </fields>
        <name>REG_Q4_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q4_WORD1</name>
          </field>
        </fields>
        <name>REG_Q4_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q5_WORD0</name>
          </field>
        </fields>
        <name>REG_Q5_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q5_WORD1</name>
          </field>
        </fields>
        <name>REG_Q5_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q6_WORD0</name>
          </field>
        </fields>
        <name>REG_Q6_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q6_WORD1</name>
          </field>
        </fields>
        <name>REG_Q6_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>SEPER_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>SEPER_ESC_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>SEPER_ESC_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDCDBC0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ0_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ0_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDDDBDB</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ1_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ1_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDEDB11</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ2_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ2_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDFDB13</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>a</description>
            <name>PKT_THRS</name>
          </field>
        </fields>
        <name>PKT_THRES</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007170</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x84</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x6000C000</baseAddress>
    <derivedFrom>UHCI0</derivedFrom>
    <description>Universal Host Controller Interface</description>
    <groupName>UHCI</groupName>
    <interrupts>
      <interrupt>
        <name>UHCI0</name>
        <value>0xF</value>
      </interrupt>
    </interrupts>
    <name>UHCI1</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1, then write 0 to this bit to reset decode state machine.</description>
            <name>TX_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1, then write 0 to this bit to reset encode state machine.</description>
            <name>RX_RST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to link up HCI and UART0.</description>
            <name>UART0_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to link up HCI and UART1.</description>
            <name>UART1_CE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to separate the data frame using a special char.</description>
            <name>SEPER_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to encode the data packet with a formatting header.</description>
            <name>HEAD_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable UHCI to receive the 16 bit CRC.</description>
            <name>CRC_REC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If this bit is set to 1, UHCI will end the payload receiving process when UART has been in idle state.</description>
            <name>UART_IDLE_EOF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If this bit is set to 1, UHCI decoder receiving payload data is end when the receiving byte count has reached the specified value. The value is payload length indicated by UHCI packet header when UHCI_HEAD_EN is 1 or the value is configuration value when UHCI_HEAD_EN is 0. If this bit is set to 0, UHCI decoder receiving payload data is end when 0xc0 is received.</description>
            <name>LEN_EOF_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to enable data integrity checking by appending a 16 bit CCITT-CRC to end of the payload.</description>
            <name>ENCODE_CRC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'b1: Force clock on for register. 1'b0: Support clock only when application writes registers.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>If this bit is set to 1, UHCI will end payload receive process when NULL frame is received by UART.</description>
            <name>UART_RX_BRK_EOF_EN</name>
          </field>
        </fields>
        <name>CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x6E0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_START_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_HUNG_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_S_REG_Q_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_A_REG_Q_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This is the interrupt raw bit. Triggered when there are some errors in EOF in the</description>
            <name>OUT_EOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Soft control int raw bit.</description>
            <name>APP_CTRL0_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Soft control int raw bit.</description>
            <name>APP_CTRL1_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_START_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_HUNG_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_S_REG_Q_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_A_REG_Q_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>OUTLINK_EOF_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL0_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL1_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_START_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_HUNG_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_S_REG_Q_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_A_REG_Q_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>OUTLINK_EOF_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL0_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL1_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_START_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_HUNG_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_S_REG_Q_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SEND_A_REG_Q_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>OUTLINK_EOF_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL0_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>APP_CTRL1_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>CHECK_SUM_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>CHECK_SEQ_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>CRC_DISABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SAVE_HEAD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_CHECK_SUM_RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_ACK_NUM_RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>WAIT_SW_START</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SW_START</name>
          </field>
        </fields>
        <name>CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x33</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>RX_ERR_CAUSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>DECODE_STATE</name>
          </field>
        </fields>
        <name>STATE0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>ENCODE_STATE</name>
          </field>
        </fields>
        <name>STATE1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_C0_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_DB_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_11_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TX_13_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_C0_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_DB_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_11_ESC_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RX_13_ESC_EN</name>
          </field>
        </fields>
        <name>ESCAPE_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x33</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>TXFIFO_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>TXFIFO_TIMEOUT_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>TXFIFO_TIMEOUT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>RXFIFO_TIMEOUT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x14</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>RXFIFO_TIMEOUT_SHIFT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x17</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>RXFIFO_TIMEOUT_ENA</name>
          </field>
        </fields>
        <name>HUNG_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x810810</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>ACK_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>LOAD</name>
          </field>
        </fields>
        <name>ACK_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>RX_HEAD</name>
          </field>
        </fields>
        <name>RX_HEAD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>SINGLE_SEND_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>SINGLE_SEND_EN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>a</description>
            <name>ALWAYS_SEND_NUM</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>a</description>
            <name>ALWAYS_SEND_EN</name>
          </field>
        </fields>
        <name>QUICK_SENT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q0_WORD0</name>
          </field>
        </fields>
        <name>REG_Q0_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q0_WORD1</name>
          </field>
        </fields>
        <name>REG_Q0_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q1_WORD0</name>
          </field>
        </fields>
        <name>REG_Q1_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q1_WORD1</name>
          </field>
        </fields>
        <name>REG_Q1_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q2_WORD0</name>
          </field>
        </fields>
        <name>REG_Q2_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q2_WORD1</name>
          </field>
        </fields>
        <name>REG_Q2_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q3_WORD0</name>
          </field>
        </fields>
        <name>REG_Q3_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q3_WORD1</name>
          </field>
        </fields>
        <name>REG_Q3_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q4_WORD0</name>
          </field>
        </fields>
        <name>REG_Q4_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q4_WORD1</name>
          </field>
        </fields>
        <name>REG_Q4_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q5_WORD0</name>
          </field>
        </fields>
        <name>REG_Q5_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x60</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q5_WORD1</name>
          </field>
        </fields>
        <name>REG_Q5_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x64</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q6_WORD0</name>
          </field>
        </fields>
        <name>REG_Q6_WORD0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x68</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>SEND_Q6_WORD1</name>
          </field>
        </fields>
        <name>REG_Q6_WORD1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>SEPER_CHAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>SEPER_ESC_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>SEPER_ESC_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDCDBC0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x70</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ0_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ0_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDDDBDB</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x74</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ1</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ1_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ1_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDEDB11</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x78</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ2</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ2_CHAR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>a</description>
            <name>ESC_SEQ2_CHAR1</name>
          </field>
        </fields>
        <name>ESC_CONF3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xDFDB13</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7C</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>a</description>
            <name>PKT_THRS</name>
          </field>
        </fields>
        <name>PKT_THRES</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>a</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>a</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007170</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x50</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x60043000</baseAddress>
    <description>Full-speed USB Serial/JTAG Controller</description>
    <groupName>USB_DEVICE</groupName>
    <interrupts>
      <interrupt>
        <name>USB_SERIAL_JTAG</name>
        <value>0x1A</value>
      </interrupt>
    </interrupts>
    <name>USB_DEVICE</name>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>USB_DEVICE_EP1_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Write and read byte data to/from UART Tx/Rx FIFO through this field. When USB_DEVICE_SERIAL_IN_EMPTY_INT is set, then user can write data (up to 64 bytes) into UART Tx FIFO. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is set, user can check USB_DEVICE_OUT_EP1_WR_ADDR USB_DEVICE_OUT_EP0_RD_ADDR to know how many data is received, then read data from UART Rx FIFO.</description>
            <name>RDWR_BYTE</name>
          </field>
        </fields>
        <name>EP1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>USB_DEVICE_EP1_CONF_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to indicate writing byte data to UART Tx FIFO is done.</description>
            <name>WR_DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'b1: Indicate UART Tx FIFO is not full and can write data into in. After writing USB_DEVICE_WR_DONE, this bit would be 0 until data in UART Tx FIFO is read by USB Host.</description>
            <name>SERIAL_IN_EP_DATA_FREE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'b1: Indicate there is data in UART Rx FIFO.</description>
            <name>SERIAL_OUT_EP_DATA_AVAIL</name>
          </field>
        </fields>
        <name>EP1_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>USB_DEVICE_INT_RAW_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when flush cmd is received for IN endpoint 2 of JTAG.</description>
            <name>JTAG_IN_FLUSH_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when SOF frame is received.</description>
            <name>SOF_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when Serial Port OUT Endpoint received one packet.</description>
            <name>SERIAL_OUT_RECV_PKT_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when Serial Port IN Endpoint is empty.</description>
            <name>SERIAL_IN_EMPTY_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when pid error is detected.</description>
            <name>PID_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when CRC5 error is detected.</description>
            <name>CRC5_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when CRC16 error is detected.</description>
            <name>CRC16_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when stuff error is detected.</description>
            <name>STUFF_ERR_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when IN token for IN endpoint 1 is received.</description>
            <name>IN_TOKEN_REC_IN_EP1_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when usb bus reset is detected.</description>
            <name>USB_BUS_RESET_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when OUT endpoint 1 received packet with zero palyload.</description>
            <name>OUT_EP1_ZERO_PAYLOAD_INT_RAW</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt bit turns to high level when OUT endpoint 2 received packet with zero palyload.</description>
            <name>OUT_EP2_ZERO_PAYLOAD_INT_RAW</name>
          </field>
        </fields>
        <name>INT_RAW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>USB_DEVICE_INT_ST_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt.</description>
            <name>JTAG_IN_FLUSH_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_SOF_INT interrupt.</description>
            <name>SOF_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt.</description>
            <name>SERIAL_OUT_RECV_PKT_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt.</description>
            <name>SERIAL_IN_EMPTY_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_PID_ERR_INT interrupt.</description>
            <name>PID_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_CRC5_ERR_INT interrupt.</description>
            <name>CRC5_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_CRC16_ERR_INT interrupt.</description>
            <name>CRC16_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_STUFF_ERR_INT interrupt.</description>
            <name>STUFF_ERR_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_IN_TOKEN_REC_IN_EP1_INT interrupt.</description>
            <name>IN_TOKEN_REC_IN_EP1_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_USB_BUS_RESET_INT interrupt.</description>
            <name>USB_BUS_RESET_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt.</description>
            <name>OUT_EP1_ZERO_PAYLOAD_INT_ST</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The raw interrupt status bit for the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt.</description>
            <name>OUT_EP2_ZERO_PAYLOAD_INT_ST</name>
          </field>
        </fields>
        <name>INT_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x10</addressOffset>
        <description>USB_DEVICE_INT_ENA_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt.</description>
            <name>JTAG_IN_FLUSH_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_SOF_INT interrupt.</description>
            <name>SOF_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt.</description>
            <name>SERIAL_OUT_RECV_PKT_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt.</description>
            <name>SERIAL_IN_EMPTY_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_PID_ERR_INT interrupt.</description>
            <name>PID_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_CRC5_ERR_INT interrupt.</description>
            <name>CRC5_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_CRC16_ERR_INT interrupt.</description>
            <name>CRC16_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_STUFF_ERR_INT interrupt.</description>
            <name>STUFF_ERR_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_IN_TOKEN_REC_IN_EP1_INT interrupt.</description>
            <name>IN_TOKEN_REC_IN_EP1_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_USB_BUS_RESET_INT interrupt.</description>
            <name>USB_BUS_RESET_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt.</description>
            <name>OUT_EP1_ZERO_PAYLOAD_INT_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>The interrupt enable bit for the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt.</description>
            <name>OUT_EP2_ZERO_PAYLOAD_INT_ENA</name>
          </field>
        </fields>
        <name>INT_ENA</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x14</addressOffset>
        <description>USB_DEVICE_INT_CLR_REG.</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt.</description>
            <name>JTAG_IN_FLUSH_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_JTAG_SOF_INT interrupt.</description>
            <name>SOF_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt.</description>
            <name>SERIAL_OUT_RECV_PKT_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt.</description>
            <name>SERIAL_IN_EMPTY_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_PID_ERR_INT interrupt.</description>
            <name>PID_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_CRC5_ERR_INT interrupt.</description>
            <name>CRC5_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_CRC16_ERR_INT interrupt.</description>
            <name>CRC16_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_STUFF_ERR_INT interrupt.</description>
            <name>STUFF_ERR_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_IN_TOKEN_IN_EP1_INT interrupt.</description>
            <name>IN_TOKEN_REC_IN_EP1_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_USB_BUS_RESET_INT interrupt.</description>
            <name>USB_BUS_RESET_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt.</description>
            <name>OUT_EP1_ZERO_PAYLOAD_INT_CLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to clear the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt.</description>
            <name>OUT_EP2_ZERO_PAYLOAD_INT_CLR</name>
          </field>
        </fields>
        <name>INT_CLR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x18</addressOffset>
        <description>USB_DEVICE_CONF0_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Select internal/external PHY</description>
            <name>PHY_SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable software control USB D+ D- exchange</description>
            <name>EXCHG_PINS_OVERRIDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>USB D+ D- exchange</description>
            <name>EXCHG_PINS</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Control single-end input high threshold,1.76V to 2V, step 80mV</description>
            <name>VREFH</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Control single-end input low threshold,0.8V to 1.04V, step 80mV</description>
            <name>VREFL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable software control input  threshold</description>
            <name>VREF_OVERRIDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable software control USB D+ D- pullup pulldown</description>
            <name>PAD_PULL_OVERRIDE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Control USB D+ pull up.</description>
            <name>DP_PULLUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Control USB D+ pull down.</description>
            <name>DP_PULLDOWN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Control USB D- pull up.</description>
            <name>DM_PULLUP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Control USB D- pull down.</description>
            <name>DM_PULLDOWN</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Control pull up value.</description>
            <name>PULLUP_VALUE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable USB pad function.</description>
            <name>USB_PAD_ENABLE</name>
          </field>
        </fields>
        <name>CONF0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4200</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1C</addressOffset>
        <description>USB_DEVICE_TEST_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable test of the USB pad</description>
            <name>ENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>USB pad oen in test</description>
            <name>USB_OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>USB D+ tx value in test</description>
            <name>TX_DP</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>USB D- tx value in test</description>
            <name>TX_DM</name>
          </field>
        </fields>
        <name>TEST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x20</addressOffset>
        <description>USB_DEVICE_JFIFO_ST_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>JTAT in fifo counter.</description>
            <name>IN_FIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: JTAG in fifo is empty.</description>
            <name>IN_FIFO_EMPTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: JTAG in fifo is full.</description>
            <name>IN_FIFO_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>JTAT out fifo counter.</description>
            <name>OUT_FIFO_CNT</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: JTAG out fifo is empty.</description>
            <name>OUT_FIFO_EMPTY</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: JTAG out fifo is full.</description>
            <name>OUT_FIFO_FULL</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to reset JTAG in fifo.</description>
            <name>IN_FIFO_RESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write 1 to reset JTAG out fifo.</description>
            <name>OUT_FIFO_RESET</name>
          </field>
        </fields>
        <name>JFIFO_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x44</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x24</addressOffset>
        <description>USB_DEVICE_FRAM_NUM_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xB</bitWidth>
            <description>Frame index of received SOF frame.</description>
            <name>SOF_FRAME_INDEX</name>
          </field>
        </fields>
        <name>FRAM_NUM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x28</addressOffset>
        <description>USB_DEVICE_IN_EP0_ST_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>State of IN Endpoint 0.</description>
            <name>IN_EP0_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Write data address of IN endpoint 0.</description>
            <name>IN_EP0_WR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Read data address of IN endpoint 0.</description>
            <name>IN_EP0_RD_ADDR</name>
          </field>
        </fields>
        <name>IN_EP0_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2C</addressOffset>
        <description>USB_DEVICE_IN_EP1_ST_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>State of IN Endpoint 1.</description>
            <name>IN_EP1_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Write data address of IN endpoint 1.</description>
            <name>IN_EP1_WR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Read data address of IN endpoint 1.</description>
            <name>IN_EP1_RD_ADDR</name>
          </field>
        </fields>
        <name>IN_EP1_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x30</addressOffset>
        <description>USB_DEVICE_IN_EP2_ST_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>State of IN Endpoint 2.</description>
            <name>IN_EP2_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Write data address of IN endpoint 2.</description>
            <name>IN_EP2_WR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Read data address of IN endpoint 2.</description>
            <name>IN_EP2_RD_ADDR</name>
          </field>
        </fields>
        <name>IN_EP2_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x34</addressOffset>
        <description>USB_DEVICE_IN_EP3_ST_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>State of IN Endpoint 3.</description>
            <name>IN_EP3_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Write data address of IN endpoint 3.</description>
            <name>IN_EP3_WR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Read data address of IN endpoint 3.</description>
            <name>IN_EP3_RD_ADDR</name>
          </field>
        </fields>
        <name>IN_EP3_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x38</addressOffset>
        <description>USB_DEVICE_OUT_EP0_ST_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>State of OUT Endpoint 0.</description>
            <name>OUT_EP0_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Write data address of OUT endpoint 0. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP0_WR_ADDR-2 bytes data in OUT EP0.</description>
            <name>OUT_EP0_WR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Read data address of OUT endpoint 0.</description>
            <name>OUT_EP0_RD_ADDR</name>
          </field>
        </fields>
        <name>OUT_EP0_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3C</addressOffset>
        <description>USB_DEVICE_OUT_EP1_ST_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>State of OUT Endpoint 1.</description>
            <name>OUT_EP1_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Write data address of OUT endpoint 1. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP1_WR_ADDR-2 bytes data in OUT EP1.</description>
            <name>OUT_EP1_WR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Read data address of OUT endpoint 1.</description>
            <name>OUT_EP1_RD_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Data count in OUT endpoint 1 when one packet is received.</description>
            <name>OUT_EP1_REC_DATA_CNT</name>
          </field>
        </fields>
        <name>OUT_EP1_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>USB_DEVICE_OUT_EP2_ST_REG.</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>State of OUT Endpoint 2.</description>
            <name>OUT_EP2_STATE</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Write data address of OUT endpoint 2. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP2_WR_ADDR-2 bytes data in OUT EP2.</description>
            <name>OUT_EP2_WR_ADDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Read data address of OUT endpoint 2.</description>
            <name>OUT_EP2_RD_ADDR</name>
          </field>
        </fields>
        <name>OUT_EP2_ST</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>USB_DEVICE_MISC_CONF_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers.</description>
            <name>CLK_EN</name>
          </field>
        </fields>
        <name>MISC_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>USB_DEVICE_MEM_CONF_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: power down usb memory.</description>
            <name>USB_MEM_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>1: Force clock on for usb memory.</description>
            <name>USB_MEM_CLK_EN</name>
          </field>
        </fields>
        <name>MEM_CONF</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x80</addressOffset>
        <description>USB_DEVICE_DATE_REG.</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>register version.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2007300</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0x30</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x600CC000</baseAddress>
    <description>XTS-AES-128 Flash Encryption</description>
    <groupName>XTS_AES</groupName>
    <interrupts></interrupts>
    <name>XTS_AES</name>
    <registers>
      <register>
        <addressOffset>0x40</addressOffset>
        <description>XTS-AES line-size register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit stores the line size parameter. 0: 16Byte, 1: 32Byte.</description>
            <name>LINESIZE</name>
          </field>
        </fields>
        <name>LINESIZE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x44</addressOffset>
        <description>XTS-AES destination register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit stores the destination. 0: flash(default). 1: reserved.</description>
            <name>DESTINATION</name>
          </field>
        </fields>
        <name>DESTINATION</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x48</addressOffset>
        <description>XTS-AES physical address register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>Those bits stores the physical address. If linesize is 16-byte, the physical address should be aligned of 16 bytes. If linesize is 32-byte, the physical address should be aligned of 32 bytes.</description>
            <name>PHYSICAL_ADDRESS</name>
          </field>
        </fields>
        <name>PHYSICAL_ADDRESS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4C</addressOffset>
        <description>XTS-AES trigger register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to start manual encryption calculation</description>
            <name>TRIGGER</name>
          </field>
        </fields>
        <name>TRIGGER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x50</addressOffset>
        <description>XTS-AES release register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to release the manual encrypted result, after that the result will be visible to spi</description>
            <name>RELEASE</name>
          </field>
        </fields>
        <name>RELEASE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x54</addressOffset>
        <description>XTS-AES destroy register</description>
        <fields>
          <field>
            <access>write-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Set this bit to destroy XTS-AES result.</description>
            <name>DESTROY</name>
          </field>
        </fields>
        <name>DESTROY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x58</addressOffset>
        <description>XTS-AES status register</description>
        <fields>
          <field>
            <access>read-only</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Those bits shows XTS-AES status. 0=IDLE, 1=WORK, 2=RELEASE, 3=USE. IDLE means that XTS-AES is idle. WORK means that XTS-AES is busy with calculation. RELEASE means the encrypted result is generated but not visible to mspi. USE means that the encrypted result is visible to mspi.</description>
            <name>STATE</name>
          </field>
        </fields>
        <name>STATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5C</addressOffset>
        <description>XTS-AES version control register</description>
        <fields>
          <field>
            <access>read-write</access>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1E</bitWidth>
            <description>Those bits stores the version information of XTS-AES.</description>
            <name>DATE</name>
          </field>
        </fields>
        <name>DATE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x20200623</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x0</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[0]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x1</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[1]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x2</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[2]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x3</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[3]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x4</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[4]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x5</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[5]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x6</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[6]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x7</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[7]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x8</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[8]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0x9</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[9]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xA</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[10]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xB</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[11]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xC</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[12]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xD</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[13]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xE</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[14]</name>
        <size>0x8</size>
      </register>
    </registers>
    <registers>
      <register>
        <addressOffset>0xF</addressOffset>
        <description>The memory that stores plaintext</description>
        <fields></fields>
        <name>PLAIN_MEM[15]</name>
        <size>0x8</size>
      </register>
    </registers>
    <resetMask>0xFFFFFFFF</resetMask>
    <resetValue>0x0</resetValue>
  </peripheral>
</peripherals>
<resetMask>0xFFFFFFFF</resetMask>
<resetValue>0x0</resetValue>
<vendor>ESPRESSIF SYSTEMS (SHANGHAI) CO., LTD.</vendor>
<vendorId>ESPRESSIF</vendorId>
<version>3</version>
<width>0x20</width></device>
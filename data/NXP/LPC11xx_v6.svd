<?xml version="1.0" encoding="UTF-8"?>
<device xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd"><addressUnitBits>0x8</addressUnitBits>
<cpu>
  <dcachePresent>
    <dcachePresen></dcachePresen>
  </dcachePresent>
  <deviceNumInterrupts>0x0</deviceNumInterrupts>
  <dtcmPresent>
    <dtcmPresen></dtcmPresen>
  </dtcmPresent>
  <endian>little</endian>
  <fpuPresent>0x0</fpuPresent>
  <icachePresent>
    <icachePresen></icachePresen>
  </icachePresent>
  <itcmPresent>
    <itcmPresen></itcmPresen>
  </itcmPresent>
  <mpuPresent>0x0</mpuPresent>
  <name>CM0</name>
  <nvicPrioBits>0x2</nvicPrioBits>
  <revision>r0p0</revision>
  <sauNumRegions>0x0</sauNumRegions>
  <vendorSystickConfig>0x0</vendorSystickConfig>
</cpu>
<description>LPC11xx, LPC11Cxx, LPC11xxL, LPC11xxXL</description>
<name>LPC111x_LPC11Cxx</name>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40000000</baseAddress>
    <description>I2C</description>
    <groupName>I2C</groupName>
    <interrupts>
      <interrupt>
        <name>I2C</name>
        <value>0xF</value>
      </interrupt>
    </interrupts>
    <name>I2C</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>I2C Control Set Register. When a one is written to a bit of this register, the corresponding bit in the I2C control register is set. Writing a zero has no effect on the corresponding bit in the I2C control register.</description>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Assert acknowledge flag.</description>
            <name>AA</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2C interrupt flag.</description>
            <name>SI</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>STOP flag.</description>
            <name>STO</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>START flag.</description>
            <name>STA</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2C interface enable.</description>
            <name>I2EN</name>
          </field>
        </fields>
        <name>CONSET</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x4</addressOffset>
        <description>I2C Status Register. During I2C operation, this register provides detailed status codes that allow software to determine the next action needed.</description>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>These bits give the actual status information about the I 2C interface.</description>
            <name>Status</name>
          </field>
        </fields>
        <name>STAT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xF8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8</addressOffset>
        <description>I2C Data Register. During master or slave transmit mode, data to be transmitted is written to this register. During master or slave receive mode, data that has been received may be read from this register.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register holds data values that have been received or are to be transmitted.</description>
            <name>Data</name>
          </field>
        </fields>
        <name>DAT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC</addressOffset>
        <description>I2C Slave Address Register 0. Contains the 7-bit slave address for operation of the I2C interface in slave mode, and is not used in master mode. The least significant bit determines whether a slave responds to the General Call address.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>General Call enable bit.</description>
            <name>GC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>The I2C device address for slave mode.</description>
            <name>Address</name>
          </field>
        </fields>
        <name>ADR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>SCH Duty Cycle Register High Half Word. Determines the high time of the I2C clock.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Count for SCL HIGH time period selection.</description>
            <name>SCLH</name>
          </field>
        </fields>
        <name>SCLH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>SCL Duty Cycle Register Low Half Word. Determines the low time of the I2C clock. I2nSCLL and I2nSCLH together determine the clock frequency generated by an I2C master and certain times used in slave mode.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Count for SCL low time period selection.</description>
            <name>SCLL</name>
          </field>
        </fields>
        <name>SCLL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x18</addressOffset>
        <description>I2C Control Clear Register. When a one is written to a bit of this register, the corresponding bit in the I2C control register is cleared. Writing a zero has no effect on the corresponding bit in the I2C control register.</description>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Assert acknowledge Clear bit.</description>
            <name>AAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2C interrupt Clear bit.</description>
            <name>SIC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>START flag Clear bit.</description>
            <name>STAC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2C interface Disable bit.</description>
            <name>I2ENC</name>
          </field>
        </fields>
        <name>CONCLR</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x1C</addressOffset>
        <description>Monitor mode control register.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Monitor mode enable.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Monitor mode disabled.</description>
                <name>MONITOR_MODE_DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The I2C module will enter monitor mode. In this mode the SDA output will be forced high. This will prevent the I2C module from outputting data of any kind (including ACK) onto the I 2C data bus. Depending on the state of the ENA_SCL bit, the output may be also forced high, preventing the module from having control over the I2C clock line.</description>
                <name>THE_I2C_MODULE_WILL_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MM_ENA</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SCL output enable.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>When this bit is cleared to 0, the SCL output will be forced high when the module is in monitor mode. As described above, this will prevent the module from having any control over the I2C clock line.</description>
                <name>HIGH</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>When this bit is set, the I2C module may exercise the same control over the clock line that it would in normal operation. This means that, acting as a slave peripheral, the I2C module can stretch the clock line (hold it low) until it has had time to respond to an I2C interrupt.[1]</description>
                <name>NORMAL</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ENA_SCL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Select interrupt register match.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>When this bit is cleared, an interrupt will only be generated when a match occurs to one of the (up-to) four address registers described above.   That is, the module will respond as a normal slave as far as address-recognition is concerned.</description>
                <name>MATCH</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>When this bit is set to 1 and the I2C is in monitor mode, an interrupt will be generated on ANY address received. This will enable the part to monitor all traffic on the bus.</description>
                <name>ANYADDRESS</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MATCH_ALL</name>
          </field>
        </fields>
        <name>MMCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x2C</addressOffset>
        <description>Data buffer register. The contents of the 8 MSBs of the I2DAT shift register will be transferred to the DATA_BUFFER automatically after every nine bits (8 bits of data plus ACK or NACK) has been received on the bus.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This register holds contents of the 8 MSBs of the DAT shift register.</description>
            <name>Data</name>
          </field>
        </fields>
        <name>DATA_BUFFER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>I2C Slave Address Register 1. Contains the 7-bit slave address for operation of the I2C interface in slave mode, and is not used in master mode. The least significant bit determines whether a slave responds to the General Call address.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>General Call enable bit.</description>
            <name>GC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>The I2C device address for slave mode.</description>
            <name>Address</name>
          </field>
        </fields>
        <name>ADR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>I2C Slave Address Register 1. Contains the 7-bit slave address for operation of the I2C interface in slave mode, and is not used in master mode. The least significant bit determines whether a slave responds to the General Call address.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>General Call enable bit.</description>
            <name>GC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>The I2C device address for slave mode.</description>
            <name>Address</name>
          </field>
        </fields>
        <name>ADR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x28</addressOffset>
        <description>I2C Slave Address Register 1. Contains the 7-bit slave address for operation of the I2C interface in slave mode, and is not used in master mode. The least significant bit determines whether a slave responds to the General Call address.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>General Call enable bit.</description>
            <name>GC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>The I2C device address for slave mode.</description>
            <name>Address</name>
          </field>
        </fields>
        <name>ADR3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x30</addressOffset>
        <description>I2C Slave address mask register 0. This mask register is associated with I2ADR0 to determine an address match. The mask register has no effect when comparing to the General Call address (0000000).</description>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Mask bits.</description>
            <name>MASK</name>
          </field>
        </fields>
        <name>MASK0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x34</addressOffset>
        <description>I2C Slave address mask register 0. This mask register is associated with I2ADR0 to determine an address match. The mask register has no effect when comparing to the General Call address (0000000).</description>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Mask bits.</description>
            <name>MASK</name>
          </field>
        </fields>
        <name>MASK1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x38</addressOffset>
        <description>I2C Slave address mask register 0. This mask register is associated with I2ADR0 to determine an address match. The mask register has no effect when comparing to the General Call address (0000000).</description>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Mask bits.</description>
            <name>MASK</name>
          </field>
        </fields>
        <name>MASK2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3C</addressOffset>
        <description>I2C Slave address mask register 0. This mask register is associated with I2ADR0 to determine an address match. The mask register has no effect when comparing to the General Call address (0000000).</description>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Mask bits.</description>
            <name>MASK</name>
          </field>
        </fields>
        <name>MASK3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40004000</baseAddress>
    <description>Product name title=UM10398 Chapter title=LPC111x/LPC11Cxx Windowed WatchDog Timer (WDT) Modification date=9/19/2011 Major revision=6 Minor revision=not available </description>
    <groupName>WWDT</groupName>
    <interrupts>
      <interrupt>
        <name>WDT</name>
        <value>0x19</value>
      </interrupt>
    </interrupts>
    <name>WWDT</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>Watchdog mode register. This register contains the basic mode and status of the Watchdog Timer.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Watchdog enable bit. This bit is Set Only. Setting this bit to one also locks the watchdog clock source. Once the watchdog timer is enabled, the watchdog timer clock source cannot be changed. If the watchdog timer is needed in Deep-sleep mode, the watchdog clock source must be changed to the watchdog oscillator before setting this bit to one.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The watchdog timer is stopped.</description>
                <name>STOPPED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The watchdog timer is running.</description>
                <name>RUN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>WDEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Watchdog reset enable bit. This bit is Set Only.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>A watchdog timeout will not cause a chip reset.</description>
                <name>NORESET</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>A watchdog timeout will cause a chip reset.</description>
                <name>RESET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>WDRESET</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Watchdog time-out flag. Set when the watchdog timer times out, by a feed error, or by events associated with WDPROTECT, cleared by software. Causes a chip reset if WDRESET = 1.</description>
            <name>WDTOF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Watchdog interrupt flag. Set when the timer reaches the value in WDWARNINT. Cleared by software.</description>
            <name>WDINT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Watchdog update mode. This bit is Set Only.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The watchdog reload value (WDTC) can be changed at any time.</description>
                <name>ANYTIME</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The watchdog reload value (WDTC) can be changed only after the counter is below the value of WDWARNINT and WDWINDOW. Note: this mode is intended for use only when WDRESET =1.</description>
                <name>LOWCOUNTER</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>WDPROTECT</name>
          </field>
        </fields>
        <name>WDMOD</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Watchdog timer constant register. This register determines the time-out value.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>Watchdog time-out interval.</description>
            <name>Count</name>
          </field>
        </fields>
        <name>WDTC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x8</addressOffset>
        <description>Watchdog feed sequence register. Writing 0xAA followed by 0x55 to this register reloads the Watchdog timer with the value contained in WDTC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Feed value should be 0xAA followed by 0x55.</description>
            <name>Feed</name>
          </field>
        </fields>
        <name>WDFEED</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0xC</addressOffset>
        <description>Watchdog timer value register. This register reads out the current value of the Watchdog timer.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>Counter timer value.</description>
            <name>Count</name>
          </field>
        </fields>
        <name>WDTV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>Watchdog Warning Interrupt compare value.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>Watchdog warning interrupt compare value.</description>
            <name>WARNINT</name>
          </field>
        </fields>
        <name>WDWARNINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x18</addressOffset>
        <description>Watchdog Window compare value.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x18</bitWidth>
            <description>Watchdog window value.</description>
            <name>WINDOW</name>
          </field>
        </fields>
        <name>WDWINDOW</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFFFF</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40008000</baseAddress>
    <description>Product name title=UM10398 Chapter title=LPC111x/LPC11Cxx
    UART Modification date=9/19/2011 Major revision=7 Minor revision=not available </description>
    <groupName>UART</groupName>
    <interrupts>
      <interrupt>
        <name>UART</name>
        <value>0x15</value>
      </interrupt>
    </interrupts>
    <name>UART</name>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x0</addressOffset>
        <description>Receiver Buffer Register. Contains the next received character to be read. (DLAB=0)</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The UART Receiver Buffer Register contains the oldest received byte in the UART RX FIFO.</description>
            <name>RBR</name>
          </field>
        </fields>
        <name>RBR</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x0</addressOffset>
        <description>Transmit Holding Register. The next character to be transmitted is written here. (DLAB=0)</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Writing to the UART Transmit Holding Register causes the data to be stored in the UART transmit FIFO. The byte will be sent when it reaches the bottom of the FIFO and the transmitter is available.</description>
            <name>THR</name>
          </field>
        </fields>
        <name>THR</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>Divisor Latch LSB. Least significant byte of the baud rate divisor value. The full divisor is used to generate a baud rate from the fractional rate divider. (DLAB=1)</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The UART Divisor Latch LSB Register, along with the DLM register, determines the baud rate of the UART.</description>
            <name>DLLSB</name>
          </field>
        </fields>
        <name>DLL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Divisor Latch MSB. Most significant byte of the baud rate divisor value. The full divisor is used to generate a baud rate from the fractional rate divider. (DLAB=1)</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The UART Divisor Latch MSB Register, along with the DLL register, determines the baud rate of the UART.</description>
            <name>DLMSB</name>
          </field>
        </fields>
        <name>DLM</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Interrupt Enable Register. Contains individual interrupt enable bits for the 7 potential UART interrupts. (DLAB=0)</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RBR Interrupt Enable. Enables the Receive Data Available interrupt for UART. It also controls the Character Receive Time-out interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable the RDA interrupt.</description>
                <name>DISABLE_THE_RDA_INTE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable the RDA interrupt.</description>
                <name>ENABLE_THE_RDA_INTER</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RBRIE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>THRE Interrupt Enable. Enables the THRE interrupt for UART. The status of this interrupt can be read from LSR[5].</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable the THRE interrupt.</description>
                <name>DISABLE_THE_THRE_INT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable the THRE interrupt.</description>
                <name>ENABLE_THE_THRE_INTE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>THREIE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RX Line Interrupt Enable. Enables the UART RX line status interrupts. The status of this interrupt can be read from LSR[4:1].</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable the RX line status interrupts.</description>
                <name>DISABLE_THE_RX_LINE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable the RX line status interrupts.</description>
                <name>ENABLE_THE_RX_LINE_S</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RXLIE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables the end of auto-baud interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable end of auto-baud Interrupt.</description>
                <name>DISABLE_END_OF_AUTO_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable end of auto-baud Interrupt.</description>
                <name>ENABLE_END_OF_AUTO_B</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ABEOINTEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables the auto-baud time-out interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable auto-baud time-out Interrupt.</description>
                <name>DISABLE_AUTO_BAUD_TI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable auto-baud time-out Interrupt.</description>
                <name>ENABLE_AUTO_BAUD_TIM</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ABTOINTEN</name>
          </field>
        </fields>
        <name>IER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x8</addressOffset>
        <description>Interrupt ID Register. Identifies which interrupt(s) are pending.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt status. Note that IIR[0] is active low. The pending interrupt can be determined by evaluating IIR[3:1].</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>At least one interrupt is pending.</description>
                <name>PENDING</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>No interrupt is pending.</description>
                <name>NO_INTERRUPT_IS_PEND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>INTSTATUS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Interrupt identification. IER[3:1] identifies an interrupt corresponding to the UART Rx FIFO. All other combinations of IER[3:1] not listed below are reserved (100,101,111).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>1   - Receive Line Status (RLS).</description>
                <name>1_RECEIVE_LINE_S</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>2a - Receive Data Available (RDA).</description>
                <name>2A__RECEIVE_DATA_AV</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>2b - Character Time-out Indicator (CTI).</description>
                <name>2B__CHARACTER_TIME_</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>3   - THRE Interrupt.</description>
                <name>3_THRE_INTERRUPT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>4   - Modem interrupt.</description>
                <name>4_MODEM_INTERRUP</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>INTID</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>These bits are equivalent to FCR[0].</description>
            <name>FIFOENABLE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>End of auto-baud interrupt. True if auto-baud has finished successfully and interrupt is enabled.</description>
            <name>ABEOINT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Auto-baud time-out interrupt. True if auto-baud has timed out and interrupt is enabled.</description>
            <name>ABTOINT</name>
          </field>
        </fields>
        <name>IIR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x8</addressOffset>
        <description>FIFO Control Register. Controls UART FIFO usage and modes.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>FIFO Enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>UART FIFOs are disabled. Must not be used in the application.</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Active high enable for both UART Rx and TX FIFOs and FCR[7:1] access. This bit must be set for proper UART operation. Any transition on this bit will automatically clear the UART FIFOs.</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FIFOEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RX FIFO Reset</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No impact on either of UART FIFOs.</description>
                <name>NO_IMPACT_ON_EITHER_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Writing a logic 1 to FCR[1] will clear all bytes in UART Rx FIFO, reset the pointer logic. This bit is self-clearing.</description>
                <name>CLEAR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RXFIFORES</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>TX FIFO Reset</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No impact on either of UART FIFOs.</description>
                <name>NO_IMPACT_ON_EITHER_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Writing a logic 1 to FCR[2] will clear all bytes in UART TX FIFO, reset the pointer logic. This bit is self-clearing.</description>
                <name>CLEAR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TXFIFORES</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>RX Trigger Level. These two bits determine how many receiver UART FIFO characters must be written before an interrupt is activated.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Trigger level 0 (1 character or 0x01).</description>
                <name>TRIGGER_LEVEL_0_1_C</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Trigger level 1 (4 characters or 0x04).</description>
                <name>TRIGGER_LEVEL_1_4_C</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Trigger level 2 (8 characters or 0x08).</description>
                <name>TRIGGER_LEVEL_2_8_C</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Trigger level 3 (14 characters or 0x0E).</description>
                <name>TRIGGER_LEVEL_3_14_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RXTL</name>
          </field>
        </fields>
        <name>FCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC</addressOffset>
        <description>Line Control Register. Contains controls for frame formatting and break generation.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Word Length Select</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>5-bit character length.</description>
                <name>5_BIT_CHARACTER_LENG</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>6-bit character length.</description>
                <name>6_BIT_CHARACTER_LENG</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>7-bit character length.</description>
                <name>7_BIT_CHARACTER_LENG</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>8-bit character length.</description>
                <name>8_BIT_CHARACTER_LENG</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>WLS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop Bit Select</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>1 stop bit.</description>
                <name>1_STOP_BIT_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>2 stop bits (1.5 if LCR[1:0]=00).</description>
                <name>2_STOP_BITS</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SBS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Parity Enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable parity generation and checking.</description>
                <name>DISABLE_PARITY_GENER</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable parity generation and checking.</description>
                <name>ENABLE_PARITY_GENERA</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Parity Select</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Odd parity. Number of 1s in the transmitted character and the attached parity bit will be odd.</description>
                <name>ODD_PARITY_NUMBER_O</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Even Parity. Number of 1s in the transmitted character and the attached parity bit will be even.</description>
                <name>EVEN_PARITY_NUMBER_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Forced 1 stick parity.</description>
                <name>FORCED_1_STICK_PARIT</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Forced 0 stick parity.</description>
                <name>FORCED_0_STICK_PARIT</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Break Control</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable break transmission.</description>
                <name>DISABLE_BREAK_TRANSM</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable break transmission. Output pin UART TXD is forced to logic 0 when LCR[6] is active high.</description>
                <name>ENABLE_BREAK_TRANSMI</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Divisor Latch Access Bit</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable access to Divisor Latches.</description>
                <name>DISABLE_ACCESS_TO_DI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable access to Divisor Latches.</description>
                <name>ENABLE_ACCESS_TO_DIV</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DLAB</name>
          </field>
        </fields>
        <name>LCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>Modem control register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>DTR Control. Source for modem output pin, DTR. This bit reads as 0 when modem loopback mode is active.</description>
            <name>DTRC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTS Control. Source for modem output pin RTS. This bit reads as 0 when modem loopback mode is active.</description>
            <name>RTSC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Loopback Mode Select. The modem loopback mode provides a mechanism to perform diagnostic loopback testing. Serial data from the transmitter is connected internally to serial input of the receiver. Input pin, RXD, has no effect on loopback and output pin, TXD is held in marking state. The four modem inputs (CTS, DSR, RI and  DCD) are disconnected externally. Externally, the modem outputs (RTS, DTR) are set inactive. Internally, the four modem outputs are connected to the four modem inputs. As a result of these connections, the upper four bits of the MSR will be driven by the lower four bits of the MCR rather than the four modem inputs in normal mode. This permits modem status interrupts to be generated in loopback mode by writing the lower four bits of MCR.</description>
            <name>LMS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>RTS flow control</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable auto-rts flow control.</description>
                <name>DISABLE_AUTO_RTS_FLO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable auto-rts flow control.</description>
                <name>ENABLE_AUTO_RTS_FLOW</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RTSEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>CTS flow control</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable auto-cts flow control.</description>
                <name>DISABLE_AUTO_CTS_FLO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable auto-cts flow control.</description>
                <name>ENABLE_AUTO_CTS_FLOW</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CTSEN</name>
          </field>
        </fields>
        <name>MCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x14</addressOffset>
        <description>Line Status Register. Contains flags for transmit and receive status, including line errors.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receiver Data Ready. LSR[0] is set when the RBR holds an unread character and is cleared when the UART RBR FIFO is empty.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>RBR is empty.</description>
                <name>EMPTY_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>RBR contains valid data.</description>
                <name>VALID</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RDR</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Overrun Error. The overrun error condition is set as soon as it occurs. A LSR read clears LSR[1]. LSR[1] is set when UART RSR has a new character assembled and the UART RBR FIFO is full. In this case, the UART RBR FIFO will not be overwritten and the character in the UART RSR will be lost.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Overrun error status is inactive.</description>
                <name>INACTIVE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Overrun error status is active.</description>
                <name>ACTIVE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Parity Error. When the parity bit of a received character is in the wrong state, a parity error occurs. A LSR read clears LSR[2]. Time of parity error detection is dependent on FCR[0]. Note: A parity error is associated with the character at the top of the UART RBR FIFO.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Parity error status is inactive.</description>
                <name>INACTIVE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Parity error status is active.</description>
                <name>ACTIVE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Framing Error. When the stop bit of a received character is a logic 0, a framing error occurs. A LSR read clears LSR[3]. The time of the framing error detection is dependent on FCR0. Upon detection of a framing error, the RX will attempt to re-synchronize to the data and assume that the bad stop bit is actually an early start bit. However, it cannot be assumed that the next received byte will be correct even if there is no Framing Error. Note: A framing error is associated with the character at the top of the UART RBR FIFO.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Framing error status is inactive.</description>
                <name>INACTIVE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Framing error status is active.</description>
                <name>ACTIVE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Break Interrupt. When RXD1 is held in the spacing state (all zeros) for one full character transmission (start, data, parity, stop), a break interrupt occurs. Once the break condition has been detected, the receiver goes idle until RXD1 goes to marking state (all ones). A LSR read clears this status bit. The time of break detection is dependent on FCR[0]. Note: The break interrupt is associated with the character at the top of the UART RBR FIFO.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Break interrupt status is inactive.</description>
                <name>INACTIVE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Break interrupt status is active.</description>
                <name>ACTIVE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BI</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmitter Holding Register Empty. THRE is set immediately upon detection of an empty UART THR and is cleared on a THR write.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>THR contains valid data.</description>
                <name>VALID</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>THR is empty.</description>
                <name>EMPTY_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>THRE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmitter Empty. TEMT is set when both THR and TSR are empty; TEMT is cleared when either the TSR or the THR contain valid data.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>THR and/or the TSR contains valid data.</description>
                <name>VALID</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>THR and the TSR are empty.</description>
                <name>EMPTY_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TEMT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Error in RX FIFO. LSR[7] is set when a character with a RX error such as framing error, parity error or break interrupt, is loaded into the RBR. This bit is cleared when the LSR register is read and there are no subsequent errors in the UART FIFO.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>RBR contains no UART RX errors or FCR[0]=0.</description>
                <name>NOERROR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>UART RBR contains at least one UART RX error.</description>
                <name>ERROR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RXFE</name>
          </field>
        </fields>
        <name>LSR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x60</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x18</addressOffset>
        <description>Modem status register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Delta CTS. Set upon state change of input CTS. Cleared on a MSR read.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No change detected on modem input CTS.</description>
                <name>NO_CHANGE_DETECTED_O</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>State change detected on modem input CTS.</description>
                <name>STATE_CHANGE_DETECTE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DCTS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Delta DSR. Set upon state change of input DSR. Cleared on a MSR read.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No change detected on modem input DSR.</description>
                <name>NO_CHANGE_DETECTED_O</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>State change detected on modem input DSR.</description>
                <name>STATE_CHANGE_DETECTE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DDSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Trailing Edge RI. Set upon low to high transition of input RI. Cleared on a MSR read.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No change detected on modem input, RI.</description>
                <name>NO_CHANGE_DETECTED_O</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Low-to-high transition detected on RI.</description>
                <name>LOW_TO_HIGH_TRANSITI</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TERI</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Delta DCD. Set upon state change of input DCD. Cleared on a MSR read.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No change detected on modem input DCD.</description>
                <name>NO_CHANGE_DETECTED_O</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>State change detected on modem input DCD.</description>
                <name>STATE_CHANGE_DETECTE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DDCD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear To Send State. Complement of input signal CTS. This bit is connected to MCR[1] in modem loopback mode.</description>
            <name>CTS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Data Set Ready State. Complement of input signal DSR. This bit is connected to MCR[0] in modem loopback mode.</description>
            <name>DSR</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Ring Indicator State. Complement of input RI. This bit is connected to MCR[2] in modem loopback mode.</description>
            <name>RI</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Data Carrier Detect State. Complement of input DCD. This bit is connected to MCR[3] in modem loopback mode.</description>
            <name>DCD</name>
          </field>
        </fields>
        <name>MSR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x1C</addressOffset>
        <description>Scratch Pad Register. Eight-bit temporary storage for software.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>A readable, writable byte.</description>
            <name>pad</name>
          </field>
        </fields>
        <name>SCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>Auto-baud Control Register. Contains controls for the auto-baud feature.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start bit. This bit is automatically cleared after auto-baud completion.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Auto-baud stop (auto-baud is not running).</description>
                <name>STOP</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Auto-baud start (auto-baud is running). Auto-baud run bit. This bit is automatically cleared after auto-baud completion.</description>
                <name>START</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Auto-baud mode select</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Mode 0.</description>
                <name>MODE_0_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Mode 1.</description>
                <name>MODE_1_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Restart enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No restart</description>
                <name>NO_RESTART</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Restart in case of time-out (counter restarts at next UART Rx falling edge)</description>
                <name>RESTART_IN_CASE_OF_T</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>AUTORESTART</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>End of auto-baud interrupt clear (write only accessible)</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Writing a 0 has no impact.</description>
                <name>NOIMPACT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Writing a 1 will clear the corresponding interrupt in the IIR.</description>
                <name>CLEAR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ABEOINTCLR</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Auto-baud time-out interrupt clear (write only accessible)</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Writing a 0 has no impact.</description>
                <name>NOIMPACT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Writing a 1 will clear the corresponding interrupt in the IIR.</description>
                <name>CLEAR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ABTOINTCLR</name>
          </field>
        </fields>
        <name>ACR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x28</addressOffset>
        <description>Fractional Divider Register. Generates a clock input for the baud rate divider.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Baud rate generation pre-scaler divisor value. If this field is 0, fractional baud rate generator will not impact the UART baud rate.</description>
            <name>DIVADDVAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Baud rate pre-scaler multiplier value. This field must be greater or equal 1 for UART to operate properly, regardless of whether the fractional baud rate generator is used or not.</description>
            <name>MULVAL</name>
          </field>
        </fields>
        <name>FDR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x10</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x30</addressOffset>
        <description>Transmit Enable Register. Turns off UART transmitter for use with software flow control.</description>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When this bit is 1, as it is after a Reset, data written to the THR is output on the TXD pin as soon as any preceding data has been sent. If this bit cleared to 0 while a character is being sent, the transmission of that character is completed, but no further characters are sent until this bit is set again. In other words, a 0 in this bit blocks the transfer of characters from the THR or TX FIFO into the transmit shift register. Software can clear this bit when it detects that the a hardware-handshaking TX-permit signal (CTS) has gone false, or with software handshaking, when it receives an XOFF character (DC3). Software can set this bit again when it detects that the TX-permit signal has gone true, or when it receives an XON (DC1) character.</description>
            <name>TXEN</name>
          </field>
        </fields>
        <name>TER</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4C</addressOffset>
        <description>RS-485/EIA-485 Control. Contains controls to configure various aspects of RS-485/EIA-485 modes.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>NMM enable.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>RS-485/EIA-485 Normal Multidrop Mode (NMM) is disabled.</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>RS-485/EIA-485 Normal Multidrop Mode (NMM) is enabled. In this mode, an address is detected when a received byte causes the UART to set the parity error and generate an interrupt.</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>NMMEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receiver enable.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The receiver is enabled.</description>
                <name>ENABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The receiver is disabled.</description>
                <name>DISABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RXDIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>AAD enable.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Auto Address Detect (AAD) is disabled.</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Auto Address Detect (AAD) is enabled.</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>AADEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Select direction control pin</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>If direction control is enabled (bit DCTRL = 1), pin RTS is used for direction control.</description>
                <name>RTS</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>If direction control is enabled (bit DCTRL = 1), pin DTR is used for direction control.</description>
                <name>DTR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Auto direction control enable.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable Auto Direction Control.</description>
                <name>DISABLE_AUTO_DIRECTI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable Auto Direction Control.</description>
                <name>ENABLE_AUTO_DIRECTIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DCTRL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Polarity control. This bit reverses the polarity of the direction control signal on the RTS (or DTR) pin.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The direction control pin will be driven to logic 0 when the transmitter has data to be sent. It will be driven to logic 1 after the last bit of data has been transmitted.</description>
                <name>LOW</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The direction control pin will be driven to logic 1 when the transmitter has data to be sent. It will be driven to logic 0 after the last bit of data has been transmitted.</description>
                <name>HIGH</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OINV</name>
          </field>
        </fields>
        <name>RS485CTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x50</addressOffset>
        <description>RS-485/EIA-485 address match. Contains the address match value for RS-485/EIA-485 mode.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Contains the address match value.</description>
            <name>ADRMATCH</name>
          </field>
        </fields>
        <name>RS485ADRMATCH</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x54</addressOffset>
        <description>RS-485/EIA-485 direction control delay.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Contains the direction control (RTS or DTR) delay value. This register works in conjunction with an 8-bit counter.</description>
            <name>DLY</name>
          </field>
        </fields>
        <name>RS485DLY</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x4000C000</baseAddress>
    <description>Product name title=UM10398 Chapter title=LPC1100XL series: 16-bit counter/timer CT16B0/1 Modification date=2/22/2012 Major revision=8 Minor revision=not available </description>
    <groupName>CT16B0</groupName>
    <interrupts>
      <interrupt>
        <name>CT16B0</name>
        <value>0x10</value>
      </interrupt>
    </interrupts>
    <name>CT16B0</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>Interrupt Register (IR). The IR can be written to clear interrupts. The IR can be read to identify which of five possible interrupt sources are pending.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 0.</description>
            <name>MR0INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 1.</description>
            <name>MR1INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 2.</description>
            <name>MR2INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 3.</description>
            <name>MR3INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for capture channel 0 event.</description>
            <name>CR0INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for capture channel 1 event.</description>
            <name>CR1INT</name>
          </field>
        </fields>
        <name>IR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Timer Control Register (TCR). The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Counter Enable. When one, the Timer Counter and Prescale Counter are enabled for counting. When zero, the counters are disabled.</description>
            <name>CEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Counter Reset. When one, the Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of PCLK. The counters remain reset until TCR[1] is returned to zero.</description>
            <name>CRST</name>
          </field>
        </fields>
        <name>TCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8</addressOffset>
        <description>Timer Counter (TC). The 16-bit TC is incremented every PR+1 cycles of PCLK. The TC is controlled through the TCR.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter value.</description>
            <name>TC</name>
          </field>
        </fields>
        <name>TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC</addressOffset>
        <description>Prescale Register (PR). When the Prescale Counter (below) is equal to this value, the next clock increments the TC and clears the PC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Prescale max value.</description>
            <name>PR</name>
          </field>
        </fields>
        <name>PR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>Prescale Counter (PC). The 16-bit PC is a counter which is incremented to the value stored in PR. When the value in PR is reached, the TC is incremented and the PC is cleared. The PC is observable and controllable through the bus interface.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Prescale counter value.</description>
            <name>PC</name>
          </field>
        </fields>
        <name>PC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>Match Control Register (MCR). The MCR is used to control if an interrupt is generated and if the TC is reset when a Match occurs.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR0: the TC will be reset if MR0 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR1: the TC will be reset if MR1 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR2: the TC will be reset if MR2 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR3: the TC will be reset if MR3 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3S</name>
          </field>
        </fields>
        <name>MCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x28</addressOffset>
        <description>Capture Control Register (CCR). The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT16Bn_CAP0 rising edge: a sequence of 0 then 1 on CT16Bn_CAP0 will cause CR0 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT16Bn_CAP0 falling edge: a sequence of 1 then 0 on CT16Bn_CAP0 will cause CR0 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on CT16Bn_CAP0 event: a CR0 load due to a CT16Bn_CAP0 event will generate an interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT16Bn_CAP1 rising edge: a sequence of 0 then 1 on CT16Bn_CAP1 will cause CR1 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT16Bn_CAP1 falling edge: a sequence of 1 then 0 on CT16Bn_CAP1 will cause CR1 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on CT16Bn_CAP1 event: a CR1 load due to a CT16Bn_CAP1 event will generate an interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1I</name>
          </field>
        </fields>
        <name>CCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3C</addressOffset>
        <description>External Match Register (EMR). The EMR controls the match function and the external match pins CT16B0_MAT[2:0].</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 0. This bit reflects the state of output CT16B0_MAT0/CT16B1_MAT0, whether or not this output is connected to its pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[5:4] control the functionality of this output. This bit is driven to the CT16B0_MAT0/CT16B1_MAT0 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 1. This bit reflects the state of output CT16B0_MAT1/CT16B1_MAT1, whether or not this output is connected to its pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[7:6] control the functionality of this output. This bit is driven to the CT16B0_MAT1/CT16B1_MAT1 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 2. This bit reflects the state of output match channel 2, whether or not this output is connected to its pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[9:8] control the functionality of this output. Note that on counter/timer 0 this match channel is not pinned out. This bit is driven to the CT16B1_MAT2 pin if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 3. This bit reflects the state of output of match channel 3. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[11:10] control the functionality of this output. There is no output pin available for this channel on either of the 16-bit timers.</description>
            <name>EM3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 0. Determines the functionality of External Match 0.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 1. Determines the functionality of External Match 1.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 2. Determines the functionality of External Match 2.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 3. Determines the functionality of External Match 3.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC3</name>
          </field>
        </fields>
        <name>EMR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x70</addressOffset>
        <description>Count Control Register (CTCR). The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Counter/Timer Mode. This field selects which rising PCLK edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Timer Mode: every rising PCLK edge</description>
                <name>TIMER_MODE_EVERY_RI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on rising edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on falling edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on both edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CTM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Count Input Select. In counter mode (when bits 1:0 in this register are not 00), these bits select which CAP pin is sampled for clocking.  Note: If Counter mode is selected in the CTCR register, bits 2:0 in the Capture Control Register (CCR) must be programmed as 000.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT16Bn_CAP0</description>
                <name>CT16BN_CAP0</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT16Bn_CAP1</description>
                <name>CT16BN_CAP1</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Setting this bit to one enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs.</description>
            <name>ENCC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>When bit 4 is one, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is zero.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Rising Edge of CAP0 clears the timer (if bit 4 is set).</description>
                <name>RISING_EDGE_OF_CAP0_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Falling Edge of CAP0 clears the timer (if bit 4 is set).</description>
                <name>FALLING_EDGE_OF_CAP0</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Rising Edge of CAP1 clears the timer (if bit 4 is set).</description>
                <name>RISING_EDGE_OF_CAP1_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Falling Edge of CAP1 clears the timer (if bit 4 is set).</description>
                <name>FALLING_EDGE_OF_CAP1</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x4</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x5</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x7</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SELCC</name>
          </field>
        </fields>
        <name>CTCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x74</addressOffset>
        <description>PWM Control Register (PWMCON). The PWMCON enables PWM mode for the external match pins CT16B0_MAT[2:0].</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel0 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT16Bn_MAT0 is controlled by EM0.</description>
                <name>CT16BN_MAT0_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT16Bn_MAT0.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel1 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT16Bn_MAT1 is controlled by EM1.</description>
                <name>CT16BN_MAT1_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT16Bn_MAT1.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel2 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Match channel 2 or pin CT16B0_MAT2 is controlled by EM2. Match channel 2 is not pinned out on timer 1.</description>
                <name>MATCH_CHANNEL_2_OR_P</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for match channel 2 or pin CT16B0_MAT2.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel3 enable Note: It is recommended to use match channel 3 to set the PWM cycle because it is not pinned out.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Match channel 3 match channel 3 is controlled by EM3.</description>
                <name>MATCH_CHANNEL_3_MATC</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for match channel 3match channel 3.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN3</name>
          </field>
        </fields>
        <name>PWMC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x18</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x1C</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x2C</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x30</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40010000</baseAddress>
    <derivedFrom>CT16B0</derivedFrom>
    <description>Product name title=UM10398 Chapter title=LPC1100XL series: 16-bit counter/timer CT16B0/1 Modification date=2/22/2012 Major revision=8 Minor revision=not available </description>
    <groupName>CT16B0</groupName>
    <interrupts>
      <interrupt>
        <name>CT16B1</name>
        <value>0x11</value>
      </interrupt>
    </interrupts>
    <name>CT16B1</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>Interrupt Register (IR). The IR can be written to clear interrupts. The IR can be read to identify which of five possible interrupt sources are pending.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 0.</description>
            <name>MR0INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 1.</description>
            <name>MR1INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 2.</description>
            <name>MR2INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 3.</description>
            <name>MR3INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for capture channel 0 event.</description>
            <name>CR0INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for capture channel 1 event.</description>
            <name>CR1INT</name>
          </field>
        </fields>
        <name>IR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Timer Control Register (TCR). The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Counter Enable. When one, the Timer Counter and Prescale Counter are enabled for counting. When zero, the counters are disabled.</description>
            <name>CEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Counter Reset. When one, the Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of PCLK. The counters remain reset until TCR[1] is returned to zero.</description>
            <name>CRST</name>
          </field>
        </fields>
        <name>TCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8</addressOffset>
        <description>Timer Counter (TC). The 16-bit TC is incremented every PR+1 cycles of PCLK. The TC is controlled through the TCR.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter value.</description>
            <name>TC</name>
          </field>
        </fields>
        <name>TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC</addressOffset>
        <description>Prescale Register (PR). When the Prescale Counter (below) is equal to this value, the next clock increments the TC and clears the PC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Prescale max value.</description>
            <name>PR</name>
          </field>
        </fields>
        <name>PR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>Prescale Counter (PC). The 16-bit PC is a counter which is incremented to the value stored in PR. When the value in PR is reached, the TC is incremented and the PC is cleared. The PC is observable and controllable through the bus interface.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Prescale counter value.</description>
            <name>PC</name>
          </field>
        </fields>
        <name>PC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>Match Control Register (MCR). The MCR is used to control if an interrupt is generated and if the TC is reset when a Match occurs.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR0: the TC will be reset if MR0 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR1: the TC will be reset if MR1 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR2: the TC will be reset if MR2 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR3: the TC will be reset if MR3 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3S</name>
          </field>
        </fields>
        <name>MCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x28</addressOffset>
        <description>Capture Control Register (CCR). The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT16Bn_CAP0 rising edge: a sequence of 0 then 1 on CT16Bn_CAP0 will cause CR0 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT16Bn_CAP0 falling edge: a sequence of 1 then 0 on CT16Bn_CAP0 will cause CR0 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on CT16Bn_CAP0 event: a CR0 load due to a CT16Bn_CAP0 event will generate an interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT16Bn_CAP1 rising edge: a sequence of 0 then 1 on CT16Bn_CAP1 will cause CR1 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT16Bn_CAP1 falling edge: a sequence of 1 then 0 on CT16Bn_CAP1 will cause CR1 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on CT16Bn_CAP1 event: a CR1 load due to a CT16Bn_CAP1 event will generate an interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1I</name>
          </field>
        </fields>
        <name>CCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3C</addressOffset>
        <description>External Match Register (EMR). The EMR controls the match function and the external match pins CT16B0_MAT[2:0].</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 0. This bit reflects the state of output CT16B0_MAT0/CT16B1_MAT0, whether or not this output is connected to its pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[5:4] control the functionality of this output. This bit is driven to the CT16B0_MAT0/CT16B1_MAT0 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 1. This bit reflects the state of output CT16B0_MAT1/CT16B1_MAT1, whether or not this output is connected to its pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[7:6] control the functionality of this output. This bit is driven to the CT16B0_MAT1/CT16B1_MAT1 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 2. This bit reflects the state of output match channel 2, whether or not this output is connected to its pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[9:8] control the functionality of this output. Note that on counter/timer 0 this match channel is not pinned out. This bit is driven to the CT16B1_MAT2 pin if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 3. This bit reflects the state of output of match channel 3. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[11:10] control the functionality of this output. There is no output pin available for this channel on either of the 16-bit timers.</description>
            <name>EM3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 0. Determines the functionality of External Match 0.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 1. Determines the functionality of External Match 1.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 2. Determines the functionality of External Match 2.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 3. Determines the functionality of External Match 3.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC3</name>
          </field>
        </fields>
        <name>EMR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x70</addressOffset>
        <description>Count Control Register (CTCR). The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Counter/Timer Mode. This field selects which rising PCLK edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Timer Mode: every rising PCLK edge</description>
                <name>TIMER_MODE_EVERY_RI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on rising edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on falling edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on both edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CTM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Count Input Select. In counter mode (when bits 1:0 in this register are not 00), these bits select which CAP pin is sampled for clocking.  Note: If Counter mode is selected in the CTCR register, bits 2:0 in the Capture Control Register (CCR) must be programmed as 000.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT16Bn_CAP0</description>
                <name>CT16BN_CAP0</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT16Bn_CAP1</description>
                <name>CT16BN_CAP1</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Setting this bit to one enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs.</description>
            <name>ENCC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>When bit 4 is one, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is zero.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Rising Edge of CAP0 clears the timer (if bit 4 is set).</description>
                <name>RISING_EDGE_OF_CAP0_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Falling Edge of CAP0 clears the timer (if bit 4 is set).</description>
                <name>FALLING_EDGE_OF_CAP0</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Rising Edge of CAP1 clears the timer (if bit 4 is set).</description>
                <name>RISING_EDGE_OF_CAP1_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Falling Edge of CAP1 clears the timer (if bit 4 is set).</description>
                <name>FALLING_EDGE_OF_CAP1</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x4</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x5</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x7</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SELCC</name>
          </field>
        </fields>
        <name>CTCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x74</addressOffset>
        <description>PWM Control Register (PWMCON). The PWMCON enables PWM mode for the external match pins CT16B0_MAT[2:0].</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel0 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT16Bn_MAT0 is controlled by EM0.</description>
                <name>CT16BN_MAT0_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT16Bn_MAT0.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel1 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT16Bn_MAT1 is controlled by EM1.</description>
                <name>CT16BN_MAT1_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT16Bn_MAT1.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel2 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Match channel 2 or pin CT16B0_MAT2 is controlled by EM2. Match channel 2 is not pinned out on timer 1.</description>
                <name>MATCH_CHANNEL_2_OR_P</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for match channel 2 or pin CT16B0_MAT2.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel3 enable Note: It is recommended to use match channel 3 to set the PWM cycle because it is not pinned out.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Match channel 3 match channel 3 is controlled by EM3.</description>
                <name>MATCH_CHANNEL_3_MATC</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for match channel 3match channel 3.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN3</name>
          </field>
        </fields>
        <name>PWMC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x18</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x1C</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x2C</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x30</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x18</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x1C</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x2C</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x30</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40014000</baseAddress>
    <description>Product name title=UM10398 Chapter title=LPC1100XL series: 32-bit counter/timer CT32B0/1 Modification date=2/22/2012 Major revision=8 Minor revision=not available </description>
    <groupName>CT32B0</groupName>
    <interrupts>
      <interrupt>
        <name>CT32B0</name>
        <value>0x12</value>
      </interrupt>
    </interrupts>
    <name>CT32B0</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>Interrupt Register (IR). The IR can be written to clear interrupts. The IR can be read to identify which of five possible interrupt sources are pending.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 0.</description>
            <name>MR0INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 1.</description>
            <name>MR1INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 2.</description>
            <name>MR2INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 3.</description>
            <name>MR3INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for capture channel 0 event.</description>
            <name>CR0INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for capture channel 1 event.</description>
            <name>CR1INT</name>
          </field>
        </fields>
        <name>IR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Timer Control Register (TCR). The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When one, the Timer Counter and Prescale Counter are enabled for counting. When zero, the counters are disabled.</description>
            <name>CEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When one, the Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of PCLK. The counters remain reset until TCR[1] is returned to zero.</description>
            <name>CRST</name>
          </field>
        </fields>
        <name>TCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8</addressOffset>
        <description>Timer Counter (TC). The 32-bit TC is incremented every PR+1 cycles of PCLK. The TC is controlled through the TCR.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter value.</description>
            <name>TC</name>
          </field>
        </fields>
        <name>TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC</addressOffset>
        <description>Prescale Register (PR). When the Prescale Counter (below) is equal to this value, the next clock increments the TC and clears the PC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Prescale value.</description>
            <name>PR</name>
          </field>
        </fields>
        <name>PR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>Prescale Counter (PC). The 32-bit PC is a counter which is incremented to the value stored in PR. When the value in PR is reached, the TC is incremented and the PC is cleared. The PC is observable and controllable through the bus interface.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Prescale counter value.</description>
            <name>PC</name>
          </field>
        </fields>
        <name>PC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>Match Control Register (MCR). The MCR is used to control if an interrupt is generated and if the TC is reset when a Match occurs.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR0: the TC will be reset if MR0 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR1: the TC will be reset if MR1 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR2: the TC will be reset if MR2 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR3: the TC will be reset if MR3 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3S</name>
          </field>
        </fields>
        <name>MCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x28</addressOffset>
        <description>Capture Control Register (CCR). The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT32Bn_CAP0 rising edge: a sequence of 0 then 1 on CT32Bn_CAP0 will cause CR0 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT32Bn_CAP0 falling edge: a sequence of 1 then 0 on CT32Bn_CAP0 will cause CR0 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on CT32Bn_CAP0 event: a CR0 load due to a CT32Bn_CAP0 event will generate an interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT32Bn_CAP1 rising edge: a sequence of 0 then 1 on CT32Bn_CAP1 will cause CR1 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT32Bn_CAP1 falling edge: a sequence of 1 then 0 on CT32Bn_CAP1 will cause CR1 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on CT32Bn_CAP1 event: a CR1 load due to a CT32Bn_CAP1 event will generate an interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1I</name>
          </field>
        </fields>
        <name>CCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3C</addressOffset>
        <description>External Match Register (EMR). The EMR controls the match function and the external match pins CT32B0_MAT[3:0].</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 0. This bit reflects the state of output CT32Bn_MAT0, whether or not this output is connected to its pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[5:4] control the functionality of this output. This bit is driven to the CT32B0_MAT0/CT16B1_MAT0 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 1. This bit reflects the state of output CT32Bn_MAT1, whether or not this output is connected to its pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[7:6] control the functionality of this output. This bit is driven to the CT32B0_MAT1/CT16B1_MAT1 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 2. This bit reflects the state of output CT32Bn_MAT2, whether or not this output is connected to its pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[9:8] control the functionality of this output. This bit is driven to the CT32B0_MAT2/CT16B1_MAT2 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 3. This bit reflects the state of output CT32Bn_MAT3, whether or not this output is connected to its pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[11:10] control the functionality of this output. This bit is driven to the CT32B0_MAT3/CT16B1_MAT3 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 0. Determines the functionality of External Match 0.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 1. Determines the functionality of External Match 1.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 2. Determines the functionality of External Match 2.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 3. Determines the functionality of External Match 3.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC3</name>
          </field>
        </fields>
        <name>EMR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x70</addressOffset>
        <description>Count Control Register (CTCR). The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Counter/Timer Mode. This field selects which rising PCLK edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: every rising PCLK edge</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Timer Mode: every rising PCLK edge</description>
                <name>TIMER_MODE_EVERY_RI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on rising edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on falling edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on both edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CTM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Count Input Select. When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking:</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_CAP0</description>
                <name>CT32BN_CAP0</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_CAP1</description>
                <name>CT32BN_CAP1</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved</description>
                <name>RESERVED</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved Note: If Counter mode is selected in the TnCTCR, the 3 bits for that input in the Capture Control Register (TnCCR) must be programmed as 000.</description>
                <name>RESERVED_NOTE_IF_CO</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Setting this bit to one enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs.</description>
            <name>ENCC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>When bit 4 is one, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is zero.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Rising Edge of CAP0 clears the timer (if bit 4 is set).</description>
                <name>RISING_EDGE_OF_CAP0_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Falling Edge of CAP0 clears the timer (if bit 4 is set).</description>
                <name>FALLING_EDGE_OF_CAP0</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Rising Edge of CAP1 clears the timer (if bit 4 is set).</description>
                <name>RISING_EDGE_OF_CAP1_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Falling Edge of CAP1 clears the timer (if bit 4 is set).</description>
                <name>FALLING_EDGE_OF_CAP1</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x4</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x5</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x7</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SELCC</name>
          </field>
        </fields>
        <name>CTCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x74</addressOffset>
        <description>PWM Control Register (PWMCON). The PWMCON enables PWM mode for the external match pins CT32B0_MAT[3:0].</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel 0 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_MAT0 is controlled by EM0.</description>
                <name>CT32BN_MAT0_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT32Bn_MAT0.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel 1 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_MAT1 is controlled by EM1.</description>
                <name>CT32BN_MAT1_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT32Bn_MAT1.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel 2 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_MAT2 is controlled by EM2.</description>
                <name>CT32BN_MAT2_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT32Bn_MAT2.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel 3 enable Note: It is recommended to use match channel 3 to set the PWM cycle.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_MAT3 is controlled by EM3.</description>
                <name>CT32BN_MAT3_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT32Bn_MAT3.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN3</name>
          </field>
        </fields>
        <name>PWMC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x18</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x1C</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x2C</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x30</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40018000</baseAddress>
    <derivedFrom>CT32B0</derivedFrom>
    <description>Product name title=UM10398 Chapter title=LPC1100XL series: 32-bit counter/timer CT32B0/1 Modification date=2/22/2012 Major revision=8 Minor revision=not available </description>
    <groupName>CT32B0</groupName>
    <interrupts>
      <interrupt>
        <name>CT32B1</name>
        <value>0x13</value>
      </interrupt>
    </interrupts>
    <name>CT32B1</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>Interrupt Register (IR). The IR can be written to clear interrupts. The IR can be read to identify which of five possible interrupt sources are pending.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 0.</description>
            <name>MR0INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 1.</description>
            <name>MR1INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 2.</description>
            <name>MR2INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for match channel 3.</description>
            <name>MR3INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for capture channel 0 event.</description>
            <name>CR0INT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt flag for capture channel 1 event.</description>
            <name>CR1INT</name>
          </field>
        </fields>
        <name>IR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Timer Control Register (TCR). The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When one, the Timer Counter and Prescale Counter are enabled for counting. When zero, the counters are disabled.</description>
            <name>CEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When one, the Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of PCLK. The counters remain reset until TCR[1] is returned to zero.</description>
            <name>CRST</name>
          </field>
        </fields>
        <name>TCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8</addressOffset>
        <description>Timer Counter (TC). The 32-bit TC is incremented every PR+1 cycles of PCLK. The TC is controlled through the TCR.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter value.</description>
            <name>TC</name>
          </field>
        </fields>
        <name>TC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC</addressOffset>
        <description>Prescale Register (PR). When the Prescale Counter (below) is equal to this value, the next clock increments the TC and clears the PC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Prescale value.</description>
            <name>PR</name>
          </field>
        </fields>
        <name>PR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>Prescale Counter (PC). The 32-bit PC is a counter which is incremented to the value stored in PR. When the value in PR is reached, the TC is incremented and the PC is cleared. The PC is observable and controllable through the bus interface.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Prescale counter value.</description>
            <name>PC</name>
          </field>
        </fields>
        <name>PC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>Match Control Register (MCR). The MCR is used to control if an interrupt is generated and if the TC is reset when a Match occurs.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR0: the TC will be reset if MR0 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR0S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR1: the TC will be reset if MR1 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR1S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR2: the TC will be reset if MR2 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR2S</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reset on MR3: the TC will be reset if MR3 matches it.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3R</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MR3S</name>
          </field>
        </fields>
        <name>MCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x28</addressOffset>
        <description>Capture Control Register (CCR). The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT32Bn_CAP0 rising edge: a sequence of 0 then 1 on CT32Bn_CAP0 will cause CR0 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT32Bn_CAP0 falling edge: a sequence of 1 then 0 on CT32Bn_CAP0 will cause CR0 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on CT32Bn_CAP0 event: a CR0 load due to a CT32Bn_CAP0 event will generate an interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP0I</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT32Bn_CAP1 rising edge: a sequence of 0 then 1 on CT32Bn_CAP1 will cause CR1 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1RE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Capture on CT32Bn_CAP1 falling edge: a sequence of 1 then 0 on CT32Bn_CAP1 will cause CR1 to be loaded with the contents of TC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1FE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt on CT32Bn_CAP1 event: a CR1 load due to a CT32Bn_CAP1 event will generate an interrupt.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAP1I</name>
          </field>
        </fields>
        <name>CCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3C</addressOffset>
        <description>External Match Register (EMR). The EMR controls the match function and the external match pins CT32B0_MAT[3:0].</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 0. This bit reflects the state of output CT32Bn_MAT0, whether or not this output is connected to its pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[5:4] control the functionality of this output. This bit is driven to the CT32B0_MAT0/CT16B1_MAT0 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 1. This bit reflects the state of output CT32Bn_MAT1, whether or not this output is connected to its pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[7:6] control the functionality of this output. This bit is driven to the CT32B0_MAT1/CT16B1_MAT1 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 2. This bit reflects the state of output CT32Bn_MAT2, whether or not this output is connected to its pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[9:8] control the functionality of this output. This bit is driven to the CT32B0_MAT2/CT16B1_MAT2 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>External Match 3. This bit reflects the state of output CT32Bn_MAT3, whether or not this output is connected to its pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[11:10] control the functionality of this output. This bit is driven to the CT32B0_MAT3/CT16B1_MAT3 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH).</description>
            <name>EM3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 0. Determines the functionality of External Match 0.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 1. Determines the functionality of External Match 1.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 2. Determines the functionality of External Match 2.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>External Match Control 3. Determines the functionality of External Match 3.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Do Nothing.</description>
                <name>DO_NOTHING_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).</description>
                <name>CLEAR_THE_CORRESPOND</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).</description>
                <name>SET_THE_CORRESPONDIN</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Toggle the corresponding External Match bit/output.</description>
                <name>TOGGLE_THE_CORRESPON</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EMC3</name>
          </field>
        </fields>
        <name>EMR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x70</addressOffset>
        <description>Count Control Register (CTCR). The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Counter/Timer Mode. This field selects which rising PCLK edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: every rising PCLK edge</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Timer Mode: every rising PCLK edge</description>
                <name>TIMER_MODE_EVERY_RI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on rising edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on falling edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Counter Mode: TC is incremented on both edges on the CAP input selected by bits 3:2.</description>
                <name>COUNTER_MODE_TC_IS_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CTM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Count Input Select. When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking:</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_CAP0</description>
                <name>CT32BN_CAP0</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_CAP1</description>
                <name>CT32BN_CAP1</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved</description>
                <name>RESERVED</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved Note: If Counter mode is selected in the TnCTCR, the 3 bits for that input in the Capture Control Register (TnCCR) must be programmed as 000.</description>
                <name>RESERVED_NOTE_IF_CO</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Setting this bit to one enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs.</description>
            <name>ENCC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>When bit 4 is one, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is zero.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Rising Edge of CAP0 clears the timer (if bit 4 is set).</description>
                <name>RISING_EDGE_OF_CAP0_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Falling Edge of CAP0 clears the timer (if bit 4 is set).</description>
                <name>FALLING_EDGE_OF_CAP0</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Rising Edge of CAP1 clears the timer (if bit 4 is set).</description>
                <name>RISING_EDGE_OF_CAP1_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Falling Edge of CAP1 clears the timer (if bit 4 is set).</description>
                <name>FALLING_EDGE_OF_CAP1</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x4</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x5</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x7</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SELCC</name>
          </field>
        </fields>
        <name>CTCR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x74</addressOffset>
        <description>PWM Control Register (PWMCON). The PWMCON enables PWM mode for the external match pins CT32B0_MAT[3:0].</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel 0 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_MAT0 is controlled by EM0.</description>
                <name>CT32BN_MAT0_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT32Bn_MAT0.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel 1 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_MAT1 is controlled by EM1.</description>
                <name>CT32BN_MAT1_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT32Bn_MAT1.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel 2 enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_MAT2 is controlled by EM2.</description>
                <name>CT32BN_MAT2_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT32Bn_MAT2.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PWM channel 3 enable Note: It is recommended to use match channel 3 to set the PWM cycle.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>CT32Bn_MAT3 is controlled by EM3.</description>
                <name>CT32BN_MAT3_IS_CONTR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PWM mode is enabled for CT32Bn_MAT3.</description>
                <name>PWM_MODE_IS_ENABLED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PWMEN3</name>
          </field>
        </fields>
        <name>PWMC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x18</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x1C</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x2C</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x30</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x18</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x1C</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>Match Register. MR can be enabled through the
        MCR to reset the TC, stop both the TC and PC, and/or generate an
        interrupt every time MR matches the TC.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter match value.</description>
            <name>MATCH</name>
          </field>
        </fields>
        <name>MR3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x2C</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x30</addressOffset>
        <description>Capture Register (CR). CR is loaded with the value of TC when there is an event on the CT16Bn_CAPm input.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Timer counter capture value.</description>
            <name>CAP</name>
          </field>
        </fields>
        <name>CR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x4001C000</baseAddress>
    <description>10-bit ADC</description>
    <groupName>ADC</groupName>
    <interrupts>
      <interrupt>
        <name>ADC</name>
        <value>0x18</value>
      </interrupt>
    </interrupts>
    <name>ADC</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>A/D Control Register. The ADCR register must be written to select the operating mode before A/D conversion can occur.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Selects which of the AD7:0 pins is (are) to be sampled and converted. Bit 0 selects Pin AD0, bit 1 selects pin AD1,..., and bit 7 selects pin AD7.  In software-controlled mode (BURST = 0), only one channel can be selected, i.e. only one of these bits should be 1.  In hardware scan mode (BURST = 1), any numbers of channels can be selected, i.e any or all bits can be set to 1. If all bits are set to 0, channel 0 is selected automatically (SEL = 0x01).</description>
            <name>SEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>The APB clock (PCLK) is divided by CLKDIV +1 to produce the clock for the ADC, which should be less than or equal to 4.5 MHz. Typically, software should program the smallest value in this field that yields a clock of 4.5 MHz or slightly less, but in certain cases (such as a high-impedance analog source) a slower clock may be desirable.</description>
            <name>CLKDIV</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Burst mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Software-controlled mode: Conversions are software-controlled and require 11 clocks.</description>
                <name>SWMODE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Hardware scan mode: The AD converter does repeated conversions at the rate selected by the CLKS field, scanning (if necessary) through the pins selected by 1s in the SEL field. The first conversion after the start corresponds to the least-significant bit set to 1 in the SEL field, then the next higher  bits (pins) set to 1 are scanned if applicable. Repeated conversions can be terminated by clearing this bit, but the conversion in progress when this bit is cleared will be completed. Important: START bits must be 000 when BURST = 1 or conversions will not start.</description>
                <name>HWMODE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BURST</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>This field selects the number of clocks used for each conversion in Burst mode, and the number of bits of accuracy of the result in the LS bits of ADDR, between 11 clocks (10 bits) and 4 clocks (3 bits).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>11 clocks / 10 bits</description>
                <name>10BIT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>10 clocks / 9 bits</description>
                <name>9BIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>9 clocks / 8 bits</description>
                <name>8BIT</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>8 clocks / 7 bits</description>
                <name>7BIT</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>7 clocks / 6 bits</description>
                <name>6BIT</name>
                <value>0x4</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>6 clocks / 5 bits</description>
                <name>5BIT</name>
                <value>0x5</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>5 clocks / 4 bits</description>
                <name>4BIT</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>4 clocks / 3 bits</description>
                <name>3BIT</name>
                <value>0x7</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CLKS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>When the BURST bit is 0, these bits control whether and when an A/D conversion is started:</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No start (this value should be used when clearing PDN to 0).</description>
                <name>STOP</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Start conversion now.</description>
                <name>START</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Start conversion when the edge selected by bit 27 occurs on PIO0_2/SSEL/CT16B0_CAP0.</description>
                <name>EDGEPIO0_2</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Start conversion when the edge selected by bit 27 occurs on PIO1_5/DIR/CT32B0_CAP0.</description>
                <name>EDGEPIO1_5</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Start conversion when the edge selected by bit 27 occurs on CT32B0_MAT0[1].</description>
                <name>EDGECT32B0_MAT0_1</name>
                <value>0x4</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Start conversion when the edge selected by bit 27 occurs on CT32B0_MAT1[1].</description>
                <name>EDGECT32B0_MAT1_1</name>
                <value>0x5</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Start conversion when the edge selected by bit 27 occurs on CT16B0_MAT0[1].</description>
                <name>EDGECT16B0_MAT0_1</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Start conversion when the edge selected by bit 27 occurs on CT16B0_MAT1[1].</description>
                <name>EDGECT16B0_MAT1_1</name>
                <value>0x7</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>START</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1B</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is significant only when the START field contains 010-111. In these cases: Start conversion on a falling edge on the selected CAP/MAT signal.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Start conversion on a rising edge on the selected CAP/MAT signal.</description>
                <name>RISING</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Start conversion on a rising edge on the selected CAP/MAT signal.</description>
                <name>FALLING</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EDGE</name>
          </field>
        </fields>
        <name>CR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>A/D Global Data Register. Contains the result of the most recent A/D conversion.</description>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin selected by the SEL field, divided by the voltage on the VDD pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VSS, while 0x3FF indicates that the voltage on ADn was close to, equal to, or greater than that on VREF.</description>
            <name>V_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>These bits contain the channel from which the result bits V_VREF were converted.</description>
            <name>CHN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits.</description>
            <name>OVERRUN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read and when the ADCR is written. If the ADCR is written while a conversion is still in progress, this bit is set and a new conversion is started.</description>
            <name>DONE</name>
          </field>
        </fields>
        <name>GDR</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x30</addressOffset>
        <description>A/D Status Register. This register contains DONE and OVERRUN flags for all of the A/D channels, as well as the A/D interrupt flag.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>These bits mirror the DONE status flags that appear in the result register for each A/D channel n.</description>
            <name>DONE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>These bits mirror the OVERRRUN status flags that appear in the result register for each A/D channel n. Reading ADSTAT allows checking the status of all A/D channels simultaneously.</description>
            <name>OVERRUN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is the A/D interrupt flag. It is one when any of the individual A/D channel Done flags is asserted and enabled to contribute to the A/D interrupt via the ADINTEN register.</description>
            <name>ADINT</name>
          </field>
        </fields>
        <name>STAT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC</addressOffset>
        <description>A/D Interrupt Enable Register. This register contains enable bits that allow the DONE flag of each A/D channel to be included or excluded from contributing to the generation of an A/D interrupt.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>These bits allow control over which A/D channels generate interrupts for conversion completion. When bit 0 is one, completion of a conversion on A/D channel 0 will generate an interrupt, when bit 1 is one, completion of a conversion on A/D channel 1 will generate an interrupt, etc.</description>
            <name>ADINTENn</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When 1, enables the global DONE flag in ADDR to generate an interrupt. When 0, only the individual A/D channels enabled by ADINTEN 7:0 will generate interrupts.</description>
            <name>ADGINTEN</name>
          </field>
        </fields>
        <name>INTEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x100</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>A/D Channel n Data Register. This register contains the result of the most recent conversion completed on channel n.</description>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin, divided by the voltage on the VREF pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VREF, while 0x3FF indicates that the voltage on AD input was close to, equal to, or greater than that on VREF.</description>
            <name>V_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits.This bit is cleared by reading this register.</description>
            <name>OVERRUN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read.</description>
            <name>DONE</name>
          </field>
        </fields>
        <name>DR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>A/D Channel n Data Register. This register contains the result of the most recent conversion completed on channel n.</description>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin, divided by the voltage on the VREF pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VREF, while 0x3FF indicates that the voltage on AD input was close to, equal to, or greater than that on VREF.</description>
            <name>V_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits.This bit is cleared by reading this register.</description>
            <name>OVERRUN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read.</description>
            <name>DONE</name>
          </field>
        </fields>
        <name>DR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x18</addressOffset>
        <description>A/D Channel n Data Register. This register contains the result of the most recent conversion completed on channel n.</description>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin, divided by the voltage on the VREF pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VREF, while 0x3FF indicates that the voltage on AD input was close to, equal to, or greater than that on VREF.</description>
            <name>V_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits.This bit is cleared by reading this register.</description>
            <name>OVERRUN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read.</description>
            <name>DONE</name>
          </field>
        </fields>
        <name>DR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x1C</addressOffset>
        <description>A/D Channel n Data Register. This register contains the result of the most recent conversion completed on channel n.</description>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin, divided by the voltage on the VREF pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VREF, while 0x3FF indicates that the voltage on AD input was close to, equal to, or greater than that on VREF.</description>
            <name>V_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits.This bit is cleared by reading this register.</description>
            <name>OVERRUN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read.</description>
            <name>DONE</name>
          </field>
        </fields>
        <name>DR3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>A/D Channel n Data Register. This register contains the result of the most recent conversion completed on channel n.</description>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin, divided by the voltage on the VREF pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VREF, while 0x3FF indicates that the voltage on AD input was close to, equal to, or greater than that on VREF.</description>
            <name>V_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits.This bit is cleared by reading this register.</description>
            <name>OVERRUN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read.</description>
            <name>DONE</name>
          </field>
        </fields>
        <name>DR4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>A/D Channel n Data Register. This register contains the result of the most recent conversion completed on channel n.</description>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin, divided by the voltage on the VREF pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VREF, while 0x3FF indicates that the voltage on AD input was close to, equal to, or greater than that on VREF.</description>
            <name>V_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits.This bit is cleared by reading this register.</description>
            <name>OVERRUN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read.</description>
            <name>DONE</name>
          </field>
        </fields>
        <name>DR5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x28</addressOffset>
        <description>A/D Channel n Data Register. This register contains the result of the most recent conversion completed on channel n.</description>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin, divided by the voltage on the VREF pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VREF, while 0x3FF indicates that the voltage on AD input was close to, equal to, or greater than that on VREF.</description>
            <name>V_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits.This bit is cleared by reading this register.</description>
            <name>OVERRUN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read.</description>
            <name>DONE</name>
          </field>
        </fields>
        <name>DR6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x2C</addressOffset>
        <description>A/D Channel n Data Register. This register contains the result of the most recent conversion completed on channel n.</description>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0xA</bitWidth>
            <description>When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin, divided by the voltage on the VREF pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VREF, while 0x3FF indicates that the voltage on AD input was close to, equal to, or greater than that on VREF.</description>
            <name>V_VREF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1E</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits.This bit is cleared by reading this register.</description>
            <name>OVERRUN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read.</description>
            <name>DONE</name>
          </field>
        </fields>
        <name>DR7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40038000</baseAddress>
    <description>power management unit</description>
    <groupName>PMU</groupName>
    <interrupts></interrupts>
    <name>PMU</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>Power control register</description>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Deep power-down mode enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>ARM WFI will enter Sleep or Deep-sleep mode (clock to ARM Cortex-M0 core turned off).</description>
                <name>SLEEPMODE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>ARM WFI will enter Deep-power down mode (ARM Cortex-M0 core powered-down).</description>
                <name>DEEPPOWERDOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DPDEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Sleep mode flag</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Read: No power-down mode entered. LPC111x/LPC11C1x is in Active mode. Write: No effect.</description>
                <name>NOPOWERDOWN</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Read: Sleep/Deep-sleep or Deep power-down mode entered. Write: Writing a 1 clears the SLEEPFLAG bit to 0.</description>
                <name>POWERDOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SLEEPFLAG</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Deep power-down flag</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Read: Deep power-down mode  not entered. Write: No effect.</description>
                <name>NODEEPPOWERDOWN</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Read: Deep power-down mode entered. Write: Clear the Deep power-down flag.</description>
                <name>DEEPPOWERDOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DPDFLAG</name>
          </field>
        </fields>
        <name>PCON</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>General purpose register 4</description>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>WAKEUP pin hysteresis enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Hysteresis for WAKEUP pin enabled.</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Hysteresis for WAKUP pin disabled.</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>WAKEUPHYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x15</bitWidth>
            <description>Data retained during Deep power-down mode.</description>
            <name>GPDATA</name>
          </field>
        </fields>
        <name>GPREG4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>General purpose register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Data retained during Deep power-down mode.</description>
            <name>GPDATA</name>
          </field>
        </fields>
        <name>GPREG0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8</addressOffset>
        <description>General purpose register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Data retained during Deep power-down mode.</description>
            <name>GPDATA</name>
          </field>
        </fields>
        <name>GPREG1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC</addressOffset>
        <description>General purpose register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Data retained during Deep power-down mode.</description>
            <name>GPDATA</name>
          </field>
        </fields>
        <name>GPREG2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>General purpose register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Data retained during Deep power-down mode.</description>
            <name>GPDATA</name>
          </field>
        </fields>
        <name>GPREG3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x4003C000</baseAddress>
    <description>Product name title=UM10462 Chapter title=LPC11U1x Flash programming firmware Modification date=3/17/2011 Major revision=0 Minor revision=3 </description>
    <groupName>FLASHCTRL</groupName>
    <interrupts>
      <interrupt>
        <name>FMC</name>
        <value>0x1B</value>
      </interrupt>
    </interrupts>
    <name>FLASHCTRL</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>Flash memory access time configuration register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Flash memory access time. FLASHTIM +1 is equal to the number of system clocks used for flash access.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>1 system clock flash access time (for system clock frequencies of up to 20 MHz).</description>
                <name>1_SYSTEM_CLOCK_FLASH</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>2 system clocks flash access time (for system clock frequencies of up to 40 MHz).</description>
                <name>2_SYSTEM_CLOCKS_FLAS</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>3 system clocks flash access time (for system clock frequencies of up to 50 MHz).</description>
                <name>3_SYSTEM_CLOCKS_FLAS</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FLASHTIM</name>
          </field>
        </fields>
        <name>FLASHCFG</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>Signature start address register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x11</bitWidth>
            <description>Signature generation start address (corresponds to AHB byte address bits[20:4]).</description>
            <name>START</name>
          </field>
        </fields>
        <name>FMSSTART</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>Signature stop-address register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x11</bitWidth>
            <description>BIST stop address divided by 16 (corresponds to AHB byte address [20:4]).</description>
            <name>STOP</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start control bit for signature generation.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Signature generation is stopped</description>
                <name>SIGNATURE_GENERATION</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Initiate signature generation</description>
                <name>INITIATE_SIGNATURE_G</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SIG_START</name>
          </field>
        </fields>
        <name>FMSSTOP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x2C</addressOffset>
        <description>Word 0 [31:0]</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Word 0 of 128-bit signature (bits 31 to 0).</description>
            <name>SW0_31_0</name>
          </field>
        </fields>
        <name>FMSW0</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x30</addressOffset>
        <description>Word 1 [63:32]</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Word 1 of 128-bit signature (bits 63 to 32).</description>
            <name>SW1_63_32</name>
          </field>
        </fields>
        <name>FMSW1</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x34</addressOffset>
        <description>Word 2 [95:64]</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Word 2 of 128-bit signature (bits 95 to 64).</description>
            <name>SW2_95_64</name>
          </field>
        </fields>
        <name>FMSW2</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x38</addressOffset>
        <description>Word 3 [127:96]</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Word 3 of 128-bit signature (bits 127 to 96).</description>
            <name>SW3_127_96</name>
          </field>
        </fields>
        <name>FMSW3</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0xFE0</addressOffset>
        <description>Signature generation status register</description>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>When 1, a previously started signature generation has completed. See FMSTATCLR register description for clearing this flag.</description>
            <name>SIG_DONE</name>
          </field>
        </fields>
        <name>FMSTAT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0xFE8</addressOffset>
        <description>Signature generation status clear register</description>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Writing a 1 to this bits clears the signature generation completion flag (SIG_DONE) in the FMSTAT register.</description>
            <name>SIG_DONE_CLR</name>
          </field>
        </fields>
        <name>FMSTATCLR</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40040000</baseAddress>
    <description>SPI0</description>
    <groupName>SPI</groupName>
    <interrupts>
      <interrupt>
        <name>SPI0</name>
        <value>0x14</value>
      </interrupt>
    </interrupts>
    <name>SPI0</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>Control Register 0. Selects the serial clock rate, bus type, and data size.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Data Size Select. This field controls the number of bits transferred in each frame. Values 0000-0010 are not supported and should not be used.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>4-bit transfer</description>
                <name>4_BIT_TRANSFER</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>5-bit transfer</description>
                <name>5_BIT_TRANSFER</name>
                <value>0x4</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>6-bit transfer</description>
                <name>6_BIT_TRANSFER</name>
                <value>0x5</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>7-bit transfer</description>
                <name>7_BIT_TRANSFER</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>8-bit transfer</description>
                <name>8_BIT_TRANSFER</name>
                <value>0x7</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>9-bit transfer</description>
                <name>9_BIT_TRANSFER</name>
                <value>0x8</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>10-bit transfer</description>
                <name>10_BIT_TRANSFER</name>
                <value>0x9</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>11-bit transfer</description>
                <name>11_BIT_TRANSFER</name>
                <value>0xA</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>12-bit transfer</description>
                <name>12_BIT_TRANSFER</name>
                <value>0xB</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>13-bit transfer</description>
                <name>13_BIT_TRANSFER</name>
                <value>0xC</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>14-bit transfer</description>
                <name>14_BIT_TRANSFER</name>
                <value>0xD</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>15-bit transfer</description>
                <name>15_BIT_TRANSFER</name>
                <value>0xE</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>16-bit transfer</description>
                <name>16_BIT_TRANSFER</name>
                <value>0xF</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DSS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Frame Format.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI</description>
                <name>SPI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>TI</description>
                <name>TI</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Microwire</description>
                <name>MICROWIRE</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>This combination is not supported and should not be used.</description>
                <name>RESERVED</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FRF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clock Out Polarity. This bit is only used in SPI mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI controller maintains the bus clock low between frames.</description>
                <name>LOW</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI controller maintains the bus clock high between frames.</description>
                <name>HIGH</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CPOL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clock Out Phase. This bit is only used in SPI mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI controller captures serial data on the first clock transition of the frame, that is, the transition away from the inter-frame state of the clock line.</description>
                <name>FIRSTCLOCK</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI controller captures serial data on the second clock transition of the frame, that is, the transition back to the inter-frame state of the clock line.</description>
                <name>SECONDCLOCK</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CPHA</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Serial Clock Rate. The number of prescaler output clocks per bit on the bus, minus one. Given that CPSDVSR is the prescale divider, and the APB clock PCLK clocks the prescaler, the bit frequency is PCLK / (CPSDVSR X [SCR+1]).</description>
            <name>SCR</name>
          </field>
        </fields>
        <name>CR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Control Register 1. Selects master/slave and other modes.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Loop Back Mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>During normal operation.</description>
                <name>NORMAL</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Serial input is taken from the serial output (MOSI or MISO) rather than the serial input pin (MISO or MOSI respectively).</description>
                <name>LOOPBACK</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>LBM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI Enable.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The SPI controller is disabled.</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The SPI controller will interact with other devices on the serial bus. Software should write the appropriate control information to the other SPI/SSP registers and interrupt controller registers, before setting this bit.</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Master/Slave Mode.This bit can only be written when the SSE bit is 0.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The SPI controller acts as a master on the bus, driving the SCLK, MOSI, and SSEL lines and receiving the MISO line.</description>
                <name>MASTER</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The SPI controller acts as a slave on the bus, driving MISO line and receiving SCLK, MOSI, and SSEL lines.</description>
                <name>SLAVE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Slave Output Disable. This bit is relevant only in slave mode (MS = 1). If it is 1, this blocks this SPI controller from driving the transmit data line (MISO).</description>
            <name>SOD</name>
          </field>
        </fields>
        <name>CR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8</addressOffset>
        <description>Data Register. Writes fill the transmit FIFO, and reads empty the receive FIFO.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Write: software can write data to be sent in a future frame to this register whenever the TNF bit in the Status register is 1, indicating that the Tx FIFO is not full. If the Tx FIFO was previously empty and the SPI controller is not busy on the bus, transmission of the data will begin immediately. Otherwise the data written to this register will be sent as soon as all previous data has been sent (and received). If the data length is less than 16 bit, software must right-justify the data written to this register. Read: software can read data from this register whenever the RNE bit in the Status register is 1, indicating that the Rx FIFO is not empty. When software reads this register, the SPI controller returns data from the least recent frame in the Rx FIFO. If the data length is less than 16 bit, the data is right-justified in this field with higher order bits filled with 0s.</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>DR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0xC</addressOffset>
        <description>Status Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmit FIFO Empty. This bit is 1 is the Transmit FIFO is empty, 0 if not.</description>
            <name>TFE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmit FIFO Not Full. This bit is 0 if the Tx FIFO is full, 1 if not.</description>
            <name>TNF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receive FIFO Not Empty. This bit is 0 if the Receive FIFO is empty, 1 if not.</description>
            <name>RNE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receive FIFO Full. This bit is 1 if the Receive FIFO is full, 0 if not.</description>
            <name>RFF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Busy. This bit is 0 if the SPI controller is idle, 1 if it is currently sending/receiving a frame and/or the Tx FIFO is not empty.</description>
            <name>BSY</name>
          </field>
        </fields>
        <name>SR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>Clock Prescale Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This even value between 2 and 254, by which SPI_PCLK is divided to yield the prescaler output clock. Bit 0 always reads as 0.</description>
            <name>CPSDVSR</name>
          </field>
        </fields>
        <name>CPSR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>Interrupt Mask Set and Clear Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software should set this bit to enable interrupt when a Receive Overrun occurs, that is, when the Rx FIFO is full and another frame is completely received. The ARM spec implies that the preceding frame data is overwritten by the new frame data when this occurs.</description>
            <name>RORIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software should set this bit to enable interrupt when a Receive Time-out condition occurs. A Receive Time-out occurs when the Rx FIFO is not empty, and no has not been read for a time-out period. The time-out period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1]).</description>
            <name>RTIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software should set this bit to enable interrupt when the Rx FIFO is at least half full.</description>
            <name>RXIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software should set this bit to enable interrupt when the Tx FIFO is at least half empty.</description>
            <name>TXIM</name>
          </field>
        </fields>
        <name>IMSC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x18</addressOffset>
        <description>Raw Interrupt Status Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if another frame was completely received while the RxFIFO was full. The ARM spec implies that the preceding frame data is overwritten by the new frame data when this occurs.</description>
            <name>RORRIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Rx FIFO is not empty, and has not been read for a time-out period. The time-out period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1]).</description>
            <name>RTRIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Rx FIFO is at least half full.</description>
            <name>RXRIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Tx FIFO is at least half empty.</description>
            <name>TXRIS</name>
          </field>
        </fields>
        <name>RIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x1C</addressOffset>
        <description>Masked Interrupt Status Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if another frame was completely received while the RxFIFO was full, and this interrupt is enabled.</description>
            <name>RORMIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Rx FIFO is not empty, has not been read for a time-out period, and this interrupt is enabled. The time-out period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1]).</description>
            <name>RTMIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Rx FIFO is at least half full, and this interrupt is enabled.</description>
            <name>RXMIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Tx FIFO is at least half empty, and this interrupt is enabled.</description>
            <name>TXMIS</name>
          </field>
        </fields>
        <name>MIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x20</addressOffset>
        <description>SSPICR Interrupt Clear Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Writing a 1 to this bit clears the frame was received when RxFIFO was full interrupt.</description>
            <name>RORIC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Writing a 1 to this bit clears the Rx FIFO was not empty and has not been read for a timeout period interrupt. The timeout period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1]).</description>
            <name>RTIC</name>
          </field>
        </fields>
        <name>ICR</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40044000</baseAddress>
    <description>Product name title=UM10398 Chapter title=LPC1100XL series: I/O configuration (IOCONFIG) Modification date=2/22/2012 Major revision=8 Minor revision=not available </description>
    <groupName>IOCON</groupName>
    <interrupts></interrupts>
    <name>IOCON</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>I/O configuration for pin PIO2_6/ CT32B0_MAT1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_6.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B0_MAT1.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8</addressOffset>
        <description>I/O configuration for pin PIO2_0/DTR/SSEL1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_0.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Select function DTR.</description>
                <name>SELECT_FUNCTION_DTR_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Select function SSEL1.</description>
                <name>SELECT_FUNCTION_SSEL</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC</addressOffset>
        <description>I/O configuration for pin RESET/PIO0_0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function RESET.</description>
                <name>SELECTS_FUNCTION_RES</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_0.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_RESET_PIO0_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>I/O configuration for pin PIO0_1/CLKOUT/CT32B0_MAT2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_1.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CLKOUT.</description>
                <name>SELECTS_FUNCTION_CLK</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B0_MAT2.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO0_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>I/O configuration for pin PIO1_8/CT16B1_CAP0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_8.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B1_CAP0.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO1_8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x1C</addressOffset>
        <description>I/O configuration for pin PIO0_2/SSEL0/CT16B0_CAP0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_2.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function SSEL0.</description>
                <name>SELECTS_FUNCTION_SSE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B0_CAP0.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO0_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>I/O configuration for pin PIO2_7/ CT32B0_MAT2/RXD</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_7.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B0_MAT2.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function RXD.</description>
                <name>SELECTS_FUNCTION_RXD</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>I/O configuration for pin PIO2_8/ CT32B0_MAT3/TXD</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_8.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B0_MAT3.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function TXD.</description>
                <name>SELECTS_FUNCTION_TXD</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x28</addressOffset>
        <description>I/O configuration for pin PIO2_1/DSR/SCK1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_1.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Select function DSR.</description>
                <name>SELECT_FUNCTION_DSR_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Select function SCK1.</description>
                <name>SELECT_FUNCTION_SCK1</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x2C</addressOffset>
        <description>I/O configuration for pin PIO0_3</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_3.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO0_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x30</addressOffset>
        <description>I/O configuration for pin PIO0_4/SCL</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_4 (open-drain pin).</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects I2C function SCL (open-drain pin).</description>
                <name>SELECTS_I2C_FUNCTION</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects I2C mode. Select Standard mode (I2CMODE = 00, default) or Standard I/O functionality (I2CMODE = 01) if the pin function is GPIO (FUNC = 000).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard mode/ Fast-mode I2C.</description>
                <name>STANDARD_MODE_FAST</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard I/O functionality</description>
                <name>STANDARD_IO_FUNCTION</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Fast-mode Plus I2C</description>
                <name>FAST_MODE_PLUS_I2C</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>I2CMODE</name>
          </field>
        </fields>
        <name>IOCON_PIO0_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x34</addressOffset>
        <description>I/O configuration for pin PIO0_5/SDA</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_5 (open-drain pin).</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects I2C function SDA (open-drain pin).</description>
                <name>SELECTS_I2C_FUNCTION</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects I2C mode. Select Standard mode (I2CMODE = 00, default) or Standard I/O functionality (I2CMODE = 01) if the pin function is GPIO (FUNC = 000).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard mode/ Fast-mode I2C.</description>
                <name>STANDARD_MODE_FAST</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard I/O functionality</description>
                <name>STANDARD_IO_FUNCTION</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Fast-mode Plus I2C</description>
                <name>FAST_MODE_PLUS_I2C</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>I2CMODE</name>
          </field>
        </fields>
        <name>IOCON_PIO0_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x38</addressOffset>
        <description>I/O configuration for pin PIO1_9/CT16B1_MAT0/ MOSI1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_9.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B1_MAT0.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function MOSI1.</description>
                <name>SELECTS_FUNCTION_MOS</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO1_9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3C</addressOffset>
        <description>I/O configuration for pin PIO3_4/ CT16B0_CAP1/RXD</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO3_4.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B0_CAP1.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function RXD.</description>
                <name>SELECTS_FUNCTION_RXD</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO3_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x40</addressOffset>
        <description>I/O configuration for pin PIO2_4/ CT16B1_MAT1/ SSEL1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_4.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B1_MAT1.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function SSEL1.</description>
                <name>SELECTS_FUNCTION_SSE</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x44</addressOffset>
        <description>I/O configuration for pin PIO2_5/ CT32B0_MAT0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_5.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B0_MAT0.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x48</addressOffset>
        <description>I/O configuration for pin PIO3_5/ CT16B1_CAP1/TXD</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO3_5.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B1_CAP1.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function TXD.</description>
                <name>SELECTS_FUNCTION_TXD</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO3_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4C</addressOffset>
        <description>I/O configuration for pin PIO0_6/SCK0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_6.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function SCK0 (only if pin PIO0_6/SCK0 selected in Table 147).</description>
                <name>SELECTS_FUNCTION_SCK</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO0_6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x50</addressOffset>
        <description>I/O configuration for pin PIO0_7/CTS</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_7.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Select function CTS.</description>
                <name>SELECT_FUNCTION_CTS_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO0_7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x54</addressOffset>
        <description>I/O configuration for pin PIO2_9/ CT32B0_CAP0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_9.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B0_CAP0.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x58</addressOffset>
        <description>I/O configuration for pin PIO2_10</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_10.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x5C</addressOffset>
        <description>I/O configuration for pin PIO2_2/DCD/MISO1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_2.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Select function DCD.</description>
                <name>SELECT_FUNCTION_DCD_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Select function MISO1.</description>
                <name>SELECT_FUNCTION_MISO</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x60</addressOffset>
        <description>I/O configuration for pin PIO0_8/MISO0/CT16B0_MAT0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_8.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function MISO0.</description>
                <name>SELECTS_FUNCTION_MIS</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B0_MAT0.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO0_8</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x64</addressOffset>
        <description>I/O configuration for pin PIO0_9/MOSI0/CT16B0_MAT1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_9.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function MOSI0.</description>
                <name>SELECTS_FUNCTION_MOS</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B0_MAT1.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO0_9</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x68</addressOffset>
        <description>I/O configuration for pin SWCLK/PIO0_10/ SCK0/CT16B0_MAT2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function SWCLK.</description>
                <name>SELECTS_FUNCTION_SWC</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_10.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function SCK0 (only if pin SWCLK/PIO0_10/SCK0/CT16B0_MAT2 selected in Table 147).</description>
                <name>SELECTS_FUNCTION_SCK</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B0_MAT2.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_SWCLK_PIO0_10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x6C</addressOffset>
        <description>I/O configuration for pin PIO1_10/AD6/CT16B1_MAT1/ MISO1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_10.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function AD6.</description>
                <name>SELECTS_FUNCTION_AD6</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B1_MAT1.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function MISO1.</description>
                <name>SELECTS_FUNCTION_MIS</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects Analog/Digital mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Analog input mode</description>
                <name>ANALOG_INPUT_MODE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Digital functional mode</description>
                <name>DIGITAL_FUNCTIONAL_M</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO1_10</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x70</addressOffset>
        <description>I/O configuration for pin PIO2_11/SCK0/ CT32B0_CAP1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_11.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Select function SCK0 (only if pin PIO2_11/SCK0 selected in  Table 147).</description>
                <name>SELECT_FUNCTION_SCK0</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Select function CT32B0_CAP1.</description>
                <name>SELECT_FUNCTION_CT32</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x74</addressOffset>
        <description>I/O configuration for pin R/PIO0_11/AD0/CT32B0_MAT3</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function R. This function is reserved. Select one of the alternate functions below.</description>
                <name>SELECTS_FUNCTION_R_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO0_11.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function AD0.</description>
                <name>SELECTS_FUNCTION_AD0</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B0_MAT3.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects Analog/Digital mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Analog input mode</description>
                <name>ANALOG_INPUT_MODE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Digital functional mode</description>
                <name>DIGITAL_FUNCTIONAL_M</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_R_PIO0_11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x78</addressOffset>
        <description>I/O configuration for pin R/PIO1_0/AD1/CT32B1_CAP0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function R. This function is reserved. Select one of the alternate functions below.</description>
                <name>SELECTS_FUNCTION_R_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_0.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function AD1.</description>
                <name>SELECTS_FUNCTION_AD1</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B1_CAP0.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects Analog/Digital mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Analog input mode</description>
                <name>ANALOG_INPUT_MODE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Digital functional mode</description>
                <name>DIGITAL_FUNCTIONAL_M</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_R_PIO1_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x7C</addressOffset>
        <description>I/O configuration for pin R/PIO1_1/AD2/CT32B1_MAT0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function R. This function is reserved. Select one of the alternate functions below.</description>
                <name>SELECTS_FUNCTION_R_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_1.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function AD2.</description>
                <name>SELECTS_FUNCTION_AD2</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B1_MAT0.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects Analog/Digital mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Analog input mode</description>
                <name>ANALOG_INPUT_MODE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Digital functional mode</description>
                <name>DIGITAL_FUNCTIONAL_M</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_R_PIO1_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x80</addressOffset>
        <description>I/O configuration for pin R/PIO1_2/AD3/CT32B1_MAT1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function R. This function is reserved. Select one of the alternate functions below.</description>
                <name>SELECTS_FUNCTION_R_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_2.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function AD3.</description>
                <name>SELECTS_FUNCTION_AD3</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B1_MAT1.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects Analog/Digital mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Analog input mode</description>
                <name>ANALOG_INPUT_MODE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Digital functional mode</description>
                <name>DIGITAL_FUNCTIONAL_M</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_R_PIO1_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x84</addressOffset>
        <description>I/O configuration for pin PIO3_0/DTR/CT16B0_MAT0/TXD</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO3_0.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function DTR.</description>
                <name>SELECTS_FUNCTION_DTR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B0_MAT0.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function TXD.</description>
                <name>SELECTS_FUNCTION_TXD</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO3_0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x88</addressOffset>
        <description>I/O configuration for pin PIO3_1/DSR/CT16B0_MAT1/RXD</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO3_1.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function DSR.</description>
                <name>SELECTS_FUNCTION_DSR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B0_MAT1.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function RXD.</description>
                <name>SELECTS_FUNCTION_RXD</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO3_1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8C</addressOffset>
        <description>I/O configuration for pin PIO2_3/RI/MOSI1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO2_3.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function RI.</description>
                <name>SELECTS_FUNCTION_RI_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function MOSI1.</description>
                <name>SELECTS_FUNCTION_MOS</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO2_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x90</addressOffset>
        <description>I/O configuration for pin SWDIO/PIO1_3/AD4/CT32B1_MAT2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function SWDIO.</description>
                <name>SELECTS_FUNCTION_SWD</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_3.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function AD4.</description>
                <name>SELECTS_FUNCTION_AD4</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B1_MAT2.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects Analog/Digital mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Analog input mode</description>
                <name>ANALOG_INPUT_MODE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Digital functional mode</description>
                <name>DIGITAL_FUNCTIONAL_M</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_SWDIO_PIO1_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x94</addressOffset>
        <description>I/O configuration for pin PIO1_4/AD5/CT32B1_MAT3</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. This pin functions as WAKEUP pin if the LPC111x/LPC11Cxx is in Deep power-down mode regardless of the value of FUNC. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_4.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function AD5.</description>
                <name>SELECTS_FUNCTION_AD5</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B1_MAT3.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects Analog/Digital mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Analog input mode</description>
                <name>ANALOG_INPUT_MODE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Digital functional mode</description>
                <name>DIGITAL_FUNCTIONAL_M</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO1_4</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x98</addressOffset>
        <description>I/O configuration for pin PIO1_11/AD7/CT32B1_CAP1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_11.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function AD7.</description>
                <name>SELECTS_FUNCTION_AD7</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B1_CAP1.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects Analog/Digital mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Analog input mode</description>
                <name>ANALOG_INPUT_MODE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Digital functional mode</description>
                <name>DIGITAL_FUNCTIONAL_M</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADMODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO1_11</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x9C</addressOffset>
        <description>I/O configuration for pin PIO3_2/DCD/ CT16B0_MAT2/SCK1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO3_2.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function DCD.</description>
                <name>SELECTS_FUNCTION_DCD</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B0_MAT2.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function SCK1.</description>
                <name>SELECTS_FUNCTION_SCK</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO3_2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xA0</addressOffset>
        <description>I/O configuration for pin PIO1_5/RTS/CT32B0_CAP0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_5.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function RTS.</description>
                <name>SELECTS_FUNCTION_RTS</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B0_CAP0.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO1_5</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xA4</addressOffset>
        <description>I/O configuration for pin PIO1_6/RXD/CT32B0_MAT0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_6.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function RXD.</description>
                <name>SELECTS_FUNCTION_RXD</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B0_MAT0.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO1_6</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xA8</addressOffset>
        <description>I/O configuration for pin PIO1_7/TXD/CT32B0_MAT1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO1_7.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function TXD.</description>
                <name>SELECTS_FUNCTION_TXD</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT32B0_MAT1.</description>
                <name>SELECTS_FUNCTION_CT3</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO1_7</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xAC</addressOffset>
        <description>I/O configuration for pin PIO3_3/RI/ CT16B0_CAP0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Selects pin function. All other values are reserved.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function PIO3_3.</description>
                <name>SELECTS_FUNCTION_PIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function RI.</description>
                <name>SELECTS_FUNCTION_RI_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects function CT16B0_CAP0.</description>
                <name>SELECTS_FUNCTION_CT1</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FUNC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects function mode (on-chip pull-up/pull-down resistor control).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Inactive (no pull-down/pull-up resistor enabled).</description>
                <name>INACTIVE_NO_PULL_DO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-down resistor enabled.</description>
                <name>PULL_DOWN_RESISTOR_E</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Pull-up resistor enabled.</description>
                <name>PULL_UP_RESISTOR_ENA</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Repeater mode.</description>
                <name>REPEATER_MODE_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MODE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Hysteresis.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable.</description>
                <name>DISABLE_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable.</description>
                <name>ENABLE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>HYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pseudo open-drain mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Standard GPIO output</description>
                <name>STANDARD_GPIO_OUTPUT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Open-drain output</description>
                <name>OPEN_DRAIN_OUTPUT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>OD</name>
          </field>
        </fields>
        <name>IOCON_PIO3_3</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xD0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xB0</addressOffset>
        <description>SCK0 pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for SCK0 function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects SCK0 function in pin location SWCLK/PIO0_10/SCK0/CT16B0_MAT2 (see Table 129).</description>
                <name>SELECTS_SCK0_FUNCTIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects SCK0 function in pin location PIO2_11/SCK0 (see Table 131).</description>
                <name>SELECTS_SCK0_FUNCTIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects SCK0 function in pin location PIO0_6/SCK0 (see Table 122).</description>
                <name>SELECTS_SCK0_FUNCTIO</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SCKLOC</name>
          </field>
        </fields>
        <name>IOCON_SCK0_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xB4</addressOffset>
        <description>DSR pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for DSR function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects  DSR function in pin location PIO2_1/DSR/SCK1 (see Table 113).</description>
                <name>SELECTS_DSR_FUNCTIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects DSR function in pin location PIO3_1/DSR (see Table 137).</description>
                <name>SELECTS_DSR_FUNCTION</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DSRLOC</name>
          </field>
        </fields>
        <name>IOCON_DSR_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xB8</addressOffset>
        <description>DCD pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for DCD function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects  DCD function in pin location PIO2_2/DCD/MISO1 (see  Table 126).</description>
                <name>SELECTS_DCD_FUNCTIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects DCD function in pin location PIO3_2/DCD (see  Table 142).</description>
                <name>SELECTS_DCD_FUNCTION</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DCDLOC</name>
          </field>
        </fields>
        <name>IOCON_DCD_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xBC</addressOffset>
        <description>RI pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for RI function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects  RI function in pin location PIO2_3/RI/MOSI1 (see Table 138).</description>
                <name>SELECTS_RI_FUNCTION</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects RI function in pin location PIO3_3/RI (see Table 146).</description>
                <name>SELECTS_RI_FUNCTION_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RILOC</name>
          </field>
        </fields>
        <name>IOCON_RI_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x18</addressOffset>
        <description>SSEL1 pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for SSEL1 function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects SSEL1 function in pin location PIO2_2/DCD/MISO1 (see Table 126).</description>
                <name>SELECTS_SSEL1_FUNCTI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects SSEL1 function in pin location  PIO2_4/CT16B1_MAT1/SSEL1 (see Table 119).</description>
                <name>SELECTS_SSEL1_FUNCTI</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SSEL1LOC</name>
          </field>
        </fields>
        <name>IOCON_SSEL1_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC0</addressOffset>
        <description>CT16B0_CAP0 pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for CT16B0_CAP0 function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects CT16B0_CAP0 function in pin location PIO0_2/SSEL0/CT16B0_CAP0 (see  Table 110).</description>
                <name>SELECTS_CT16B0_CAP0_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects CT16B0_CAP0 function in pin location PIO3_3/RI/CT16B0 (see Table 146).</description>
                <name>SELECTS_CT16B0_CAP0_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CT16B0_CAP0LOC</name>
          </field>
        </fields>
        <name>IOCON_CT16B0_CAP0_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC4</addressOffset>
        <description>SCK1 pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for SCK1 function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects SCK1 function in pin location PIO2_1/DSR/SCK1 (see Table 113).</description>
                <name>SELECTS_SCK1_FUNCTIO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects SCK1 function in pin location PIO3_2/DCD/CT16B0_MAT2/SCK1 (see Table 142).</description>
                <name>SELECTS_SCK1_FUNCTIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SCK1LOC</name>
          </field>
        </fields>
        <name>IOCON_SCK1_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC8</addressOffset>
        <description>MISO1 pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for the MISO1 function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects MISO1 function in pin location PIO2_2/DCD/MISO1 (see Table 126).</description>
                <name>SELECTS_MISO1_FUNCTI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects MISO1 function in pin location PIO1_10/AD6/CT16B1_MAT1/MISO1 (see  Table 130).</description>
                <name>SELECTS_MISO1_FUNCTI</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MISO1LOC</name>
          </field>
        </fields>
        <name>IOCON_MISO1_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xCC</addressOffset>
        <description>MOSI1 pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for the MOSI1 function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects MOSI1 function in pin location PIO2_3/RI/MOSI1 (see Table 138).</description>
                <name>SELECTS_MOSI1_FUNCTI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects MOSI1 function in pin location PIO1_9/CT16B1_MAT0/MOSI1 (see Table 117).</description>
                <name>SELECTS_MOSI1_FUNCTI</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MOSI1LOC</name>
          </field>
        </fields>
        <name>IOCON_MOSI1_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xD0</addressOffset>
        <description>CT32B0_CAP0 pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for the CT32B0_CAP0 function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects CT32B0_CAP0 function in pin location PIO1_5/RTS/CT32B0_CAP0 (see Table 143).</description>
                <name>SELECTS_CT32B0_CAP0_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects CT32B0_CAP0 function in pin location PIO2_9/CT32B0_CAP0 (Table 124).</description>
                <name>SELECTS_CT32B0_CAP0_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved.</description>
                <name>RESERVED_</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CT32B0_CAP0LOC</name>
          </field>
        </fields>
        <name>IOCON_CT32B0_CAP0_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xD4</addressOffset>
        <description>RXD pin location select register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Selects pin location for the RXD function.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects RXD function in pin location PIO1_6/RXD/CT32B0_MAT0 (see Table 144).</description>
                <name>SELECTS_RXD_FUNCTION</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects RXD function in pin location PIO2_7/CT32B0_MAT2/RXD (see Table 111).</description>
                <name>SELECTS_RXD_FUNCTION</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects RXD function in pin location PIO3_1/DSR/CT16B0_MAT1/RXD (see Table 137).</description>
                <name>SELECTS_RXD_FUNCTION</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Selects RXD function in pin location PIO3_4/CT16B0_CAP1/RXD (see Table 118).</description>
                <name>SELECTS_RXD_FUNCTION</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RXDLOC</name>
          </field>
        </fields>
        <name>IOCON_RXD_LOC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40048000</baseAddress>
    <description>Product name title=UM10398 Chapter title=LPC111x/LPC11Cxx
    System configuration (SYSCON) Modification date=2/22/2012 Major revision=8 Minor revision=not available </description>
    <groupName>SYSCON</groupName>
    <interrupts>
      <interrupt>
        <name>BOD</name>
        <value>0x1A</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_0</name>
        <value>0x0</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_1</name>
        <value>0x1</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_2</name>
        <value>0x2</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_3</name>
        <value>0x3</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_4</name>
        <value>0x4</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_5</name>
        <value>0x5</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_6</name>
        <value>0x6</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_7</name>
        <value>0x7</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_8</name>
        <value>0x8</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_9</name>
        <value>0x9</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_10</name>
        <value>0xA</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO0_11</name>
        <value>0xB</value>
      </interrupt>
    </interrupts>
    <interrupts>
      <interrupt>
        <name>PIO1_0</name>
        <value>0xC</value>
      </interrupt>
    </interrupts>
    <name>SYSCON</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>System memory remap</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>System memory remap</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Boot Loader Mode. Interrupt vectors are re-mapped to Boot ROM.</description>
                <name>BOOT_LOADER_MODE_IN</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>User RAM Mode. Interrupt vectors are re-mapped to Static RAM.</description>
                <name>USER_RAM_MODE_INTER</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>User Flash Mode. Interrupt vectors are not re-mapped and reside in Flash.</description>
                <name>USER_FLASH_MODE_INT</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MAP</name>
          </field>
        </fields>
        <name>SYSMEMREMAP</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Peripheral reset control</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI0 reset control</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Resets the SPI0 peripheral.</description>
                <name>SPIO0RESET</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI0 reset de-asserted.</description>
                <name>SPIO0NORESET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SSP0_RST_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>I2C reset control</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Resets the I2C peripheral.</description>
                <name>I2CRESET</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>I2C reset de-asserted.</description>
                <name>I2CNORESET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>I2C_RST_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI1 reset control</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Resets the SPI1 peripheral.</description>
                <name>SPI1RESET</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI1 reset de-asserted.</description>
                <name>SPI2NORESET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SSP1_RST_N</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>C_CAN reset control. See Section 3.1 for part specific details.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Resets the C_CAN peripheral.</description>
                <name>CANRESET</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>C_CAN reset de-asserted.</description>
                <name>CANNORESET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAN_RST_N</name>
          </field>
        </fields>
        <name>PRESETCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8</addressOffset>
        <description>System PLL control</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Feedback divider value. The division value M is the programmed MSEL value + 1. 00000: Division ratio M = 1 to 11111: Division ratio M = 32.</description>
            <name>MSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Post divider ratio P. The division ratio is 2 x P.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>P = 1</description>
                <name>P_EQ_1</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>P = 2</description>
                <name>P_EQ_2</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>P = 4</description>
                <name>P_EQ_4</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>P = 8</description>
                <name>P_EQ_8</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>PSEL</name>
          </field>
        </fields>
        <name>SYSPLLCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0xC</addressOffset>
        <description>System PLL status</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>PLL lock status</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>PLL not locked</description>
                <name>PLL_NOT_LOCKED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>PLL locked</description>
                <name>PLL_LOCKED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>LOCK</name>
          </field>
        </fields>
        <name>SYSPLLSTAT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>System oscillator control</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Bypass system oscillator</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Oscillator is not bypassed.</description>
                <name>NOBYPASS</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Bypass enabled. PLL input (sys_osc_clk) is fed directly from the XTALIN and XTALOUT pins.</description>
                <name>BYPASS_ENABLED_PLL_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BYPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Determines frequency range for Low-power oscillator.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>1 - 20 MHz frequency range.</description>
                <name>LOW</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>15 - 25 MHz frequency range</description>
                <name>HIGH</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FREQRANGE</name>
          </field>
        </fields>
        <name>SYSOSCCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>Watchdog oscillator control</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>Select divider for Fclkana.  wdt_osc_clk = Fclkana/ (2 x (1 + DIVSEL)) 00000: 2 x (1 + DIVSEL) = 2 00001: 2 x (1 + DIVSEL) = 4 to 11111: 2 x (1 + DIVSEL) = 64</description>
            <name>DIVSEL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Select watchdog oscillator analog output frequency (Fclkana).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>0.5 MHz</description>
                <name>0_5_MHZ</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>0.8 MHz</description>
                <name>0_8_MHZ</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>1.1 MHz</description>
                <name>1_1_MHZ</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>1.4 MHz</description>
                <name>1_4_MHZ</name>
                <value>0x4</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>1.6 MHz</description>
                <name>1_6_MHZ</name>
                <value>0x5</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>1.8 MHz</description>
                <name>1_8_MHZ</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>2.0 MHz</description>
                <name>2_0_MHZ</name>
                <value>0x7</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>2.2 MHz</description>
                <name>2_2_MHZ</name>
                <value>0x8</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>2.4 MHz</description>
                <name>2_4_MHZ</name>
                <value>0x9</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>2.6 MHz</description>
                <name>2_6_MHZ</name>
                <value>0xA</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>2.7 MHz</description>
                <name>2_7_MHZ</name>
                <value>0xB</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>2.9 MHz</description>
                <name>2_9_MHZ</name>
                <value>0xC</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>3.1 MHz</description>
                <name>3_1_MHZ</name>
                <value>0xD</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>3.2 MHz</description>
                <name>3_2_MHZ</name>
                <value>0xE</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>3.4 MHz</description>
                <name>3_4_MHZ</name>
                <value>0xF</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FREQSEL</name>
          </field>
        </fields>
        <name>WDTOSCCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x28</addressOffset>
        <description>IRC control</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Trim value</description>
            <name>TRIM</name>
          </field>
        </fields>
        <name>IRCCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x80</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x30</addressOffset>
        <description>System reset status register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>POR reset status</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No POR detected.</description>
                <name>NO_POR_DETECTED_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>POR detected. Writing a one clears this reset.</description>
                <name>POR_DETECTED_WRITIN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>POR</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Status of the external RESET pin.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No RESET event detected.</description>
                <name>NO_RESET_EVENT_DETEC</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>RESET detected. Writing a one clears this reset.</description>
                <name>RESET_DETECTED_WRIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EXTRST</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Status of the Watchdog reset</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No WDT reset detected.</description>
                <name>NO_WDT_RESET_DETECTE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>WDT reset detected. Writing a one clears this reset.</description>
                <name>WDT_RESET_DETECTED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>WDT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Status of the Brown-out detect reset</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No BOD reset detected.</description>
                <name>NO_BOD_RESET_DETECTE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>BOD reset detected. Writing a one clears this reset.</description>
                <name>BOD_RESET_DETECTED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BOD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Status of the software system reset</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No System reset detected.</description>
                <name>NO_SYSTEM_RESET_DETE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>System reset detected. Writing a one clears this reset.</description>
                <name>SYSTEM_RESET_DETECTE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SYSRST</name>
          </field>
        </fields>
        <name>SYSRSTSTAT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x40</addressOffset>
        <description>System PLL clock source select</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>System PLL clock source</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>IRC oscillator</description>
                <name>IRC_OSCILLATOR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>System oscillator</description>
                <name>SYSTEM_OSCILLATOR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved</description>
                <name>RESERVED</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved</description>
                <name>RESERVED</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SEL</name>
          </field>
        </fields>
        <name>SYSPLLCLKSEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x44</addressOffset>
        <description>System PLL clock source update enable</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable system PLL clock source update</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No change</description>
                <name>NO_CHANGE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Update clock source</description>
                <name>UPDATE_CLOCK_SOURCE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ENA</name>
          </field>
        </fields>
        <name>SYSPLLCLKUEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x70</addressOffset>
        <description>Main clock source select</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Clock source for main clock</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>IRC oscillator</description>
                <name>IRC_OSCILLATOR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Input clock to system PLL</description>
                <name>INPUT_CLOCK_TO_SYSTE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>WDT oscillator</description>
                <name>WDT_OSCILLATOR</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>System PLL clock out</description>
                <name>SYSTEM_PLL_CLOCK_OUT</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SEL</name>
          </field>
        </fields>
        <name>MAINCLKSEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x74</addressOffset>
        <description>Main clock source update enable</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable main clock source update</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No change</description>
                <name>NO_CHANGE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Update clock source</description>
                <name>UPDATE_CLOCK_SOURCE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ENA</name>
          </field>
        </fields>
        <name>MAINCLKUEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x78</addressOffset>
        <description>System AHB clock divider</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>System AHB clock divider values 0: System clock disabled.  1: Divide by 1. to 255: Divide by 255.</description>
            <name>DIV</name>
          </field>
        </fields>
        <name>SYSAHBCLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x80</addressOffset>
        <description>System AHB clock control</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for AHB to APB bridge, to the AHB matrix, to the Cortex-M0 FCLK and HCLK, to the SysCon, and to the PMU. This bit is read only.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved</description>
                <name>RESERVED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SYS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for ROM.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ROM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for RAM.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RAM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for flash register interface.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FLASHREG</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for flash array access.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disabled</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enabled</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FLASHARRAY</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for I2C.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>I2C</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for GPIO.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>GPIO</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for 16-bit counter/timer 0.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CT16B0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for 16-bit counter/timer 1.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CT16B1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for 32-bit counter/timer 0.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CT32B0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for 32-bit counter/timer 1.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CT32B1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for SPI0.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SSP0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for UART. See Section 3.1 for part specific details.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>UART</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for ADC.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for WDT.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>WDT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x10</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for I/O configuration block.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>IOCON</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x11</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for C_CAN. See Section 3.1 for part specific details.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CAN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x12</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enables clock for SPI1.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SSP1</name>
          </field>
        </fields>
        <name>SYSAHBCLKCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x85F</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x94</addressOffset>
        <description>SPI0 clock divider</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SPI0_PCLK clock divider values 0: Disable SPI0_PCLK.  1: Divide by 1. to 255: Divide by 255.</description>
            <name>DIV</name>
          </field>
        </fields>
        <name>SSP0CLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x98</addressOffset>
        <description>UART clock divder</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>UART_PCLK clock divider values 0: Disable UART_PCLK.  1: Divide by 1. to 255: Divide by 255.</description>
            <name>DIV</name>
          </field>
        </fields>
        <name>UARTCLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x9C</addressOffset>
        <description>SPI1 clock divder</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>SPI1_PCLK clock divider values 0: Disable SPI1_PCLK.  1: Divide by 1. to 255: Divide by 255.</description>
            <name>DIV</name>
          </field>
        </fields>
        <name>SSP1CLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xD0</addressOffset>
        <description>WDT clock source select</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>WDT clock source</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>IRC oscillator</description>
                <name>IRC_OSCILLATOR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Main clock</description>
                <name>MAIN_CLOCK</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Watchdog oscillator</description>
                <name>WATCHDOG_OSCILLATOR</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Reserved</description>
                <name>RESERVED</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SEL</name>
          </field>
        </fields>
        <name>WDTCLKSEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xD4</addressOffset>
        <description>WDT clock source update enable</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable WDT clock source update</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No change</description>
                <name>NO_CHANGE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Update clock source</description>
                <name>UPDATE_CLOCK_SOURCE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ENA</name>
          </field>
        </fields>
        <name>WDTCLKUEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xD8</addressOffset>
        <description>WDT clock divider</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>WDT clock divider values 0: Disable WDCLK.  1: Divide by 1. to 255: Divide by 255.</description>
            <name>DIV</name>
          </field>
        </fields>
        <name>WDTCLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xE0</addressOffset>
        <description>CLKOUT clock source select</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>CLKOUT clock source</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>IRC oscillator</description>
                <name>IRC_OSCILLATOR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>System oscillator</description>
                <name>SYSTEM_OSCILLATOR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Watchdog oscillator</description>
                <name>WATCHDOG_OSCILLATOR</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Main clock</description>
                <name>MAIN_CLOCK</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SEL</name>
          </field>
        </fields>
        <name>CLKOUTCLKSEL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xE4</addressOffset>
        <description>CLKOUT clock source update enable</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable CLKOUT clock source update</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No change</description>
                <name>NO_CHANGE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Update clock source</description>
                <name>UPDATE_CLOCK_SOURCE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ENA</name>
          </field>
        </fields>
        <name>CLKOUTUEN</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xE8</addressOffset>
        <description>CLKOUT clock divider</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Clock output divider values 0: Disable CLKOUT.  1: Divide by 1. to 255: Divide by 255.</description>
            <name>DIV</name>
          </field>
        </fields>
        <name>CLKOUTCLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x100</addressOffset>
        <description>POR captured PIO status 0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>Raw reset status input PIO0_n: PIO0_11 to PIO0_0</description>
            <name>CAPPIO0_n</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0xC</bitWidth>
            <description>Raw reset status input PIO1_n: PIO1_11 to PIO1_0</description>
            <name>CAPPIO1_n</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x18</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Raw reset status input PIO2_n: PIO2_7 to PIO2_0</description>
            <name>CAPPIO2_n</name>
          </field>
        </fields>
        <name>PIOPORCAP0</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x104</addressOffset>
        <description>POR captured PIO status 1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw reset status input PIO2_8</description>
            <name>CAPPIO2_8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw reset status input PIO2_9</description>
            <name>CAPPIO2_9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw reset status input PIO2_10</description>
            <name>CAPPIO2_10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw reset status input PIO2_11</description>
            <name>CAPPIO2_11</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw reset status input PIO3_0</description>
            <name>CAPPIO3_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw reset status input PIO3_1</description>
            <name>CAPPIO3_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw reset status input PIO3_2</description>
            <name>CAPPIO3_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw reset status input PIO3_3</description>
            <name>CAPPIO3_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw reset status input PIO3_4</description>
            <name>CAPPIO3_4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw reset status input PIO3_5</description>
            <name>CAPPIO3_5</name>
          </field>
        </fields>
        <name>PIOPORCAP1</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x150</addressOffset>
        <description>BOD control</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>BOD reset level</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Level 0: The reset assertion threshold voltage is 1.46 V; the reset de-assertion threshold voltage is 1.63 V.</description>
                <name>LEVEL_0_THE_RESET_A</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Level 1: The reset assertion threshold voltage is 2.06 V; the reset de-assertion threshold voltage is 2.15 V.</description>
                <name>LEVEL_1_THE_RESET_A</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Level 2: The reset assertion threshold voltage is 2.35 V; the reset de-assertion threshold voltage is 2.43 V.</description>
                <name>LEVEL_2_THE_RESET_A</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Level 3: The reset assertion threshold voltage is 2.63 V; the reset de-assertion threshold voltage is 2.71 V.</description>
                <name>LEVEL_3_THE_RESET_A</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BODRSTLEV</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>BOD interrupt level</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Level 0: The interrupt assertion threshold voltage is 1.65 V; the interrupt de-assertion threshold voltage is 1.80 V.</description>
                <name>LEVEL_0_THE_INTERRU</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Level 1:The interrupt assertion threshold voltage is 2.22 V; the interrupt de-assertion threshold voltage is 2.35 V.</description>
                <name>LEVEL_1THE_INTERRUP</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Level 2: The interrupt assertion threshold voltage is 2.52 V; the interrupt de-assertion threshold voltage is 2.66 V.</description>
                <name>LEVEL_2_THE_INTERRU</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Level 3: The interrupt assertion threshold voltage is 2.80 V; the interrupt de-assertion threshold voltage is 2.90 V.</description>
                <name>LEVEL_3_THE_INTERRU</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BODINTVAL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BOD reset enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable reset function.</description>
                <name>DISABLE_RESET_FUNCTI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable reset function.</description>
                <name>ENABLE_RESET_FUNCTIO</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BODRSTENA</name>
          </field>
        </fields>
        <name>BODCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x154</addressOffset>
        <description>System tick counter calibration</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1A</bitWidth>
            <description>System tick timer calibration value</description>
            <name>CAL</name>
          </field>
        </fields>
        <name>SYSTCKCAL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x4</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x174</addressOffset>
        <description>NMI source selection</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x5</bitWidth>
            <description>The IRQ number of the interrupt that acts as the Non-Maskable Interrupt (NMI) if bit 31 in this register is 1. See Table 54 for the list of interrupt sources and their IRQ numbers.</description>
            <name>IRQNO</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1F</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write a 1 to this bit to enable the Non-Maskable Interrupt (NMI) source selected by bits 4:0.</description>
            <name>NMIEN</name>
          </field>
        </fields>
        <name>NMISRC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x200</addressOffset>
        <description>Start logic edge control register 0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO0_11</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Edge select for start logic input PIO1_0 0 = Falling edge 1 = Rising edge</description>
            <name>APRPIO1_0</name>
          </field>
        </fields>
        <name>STARTAPRP0</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x204</addressOffset>
        <description>Start logic signal enable register 0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO0_11</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Enable start signal for start logic input PIO1_0 0 = Disabled 1 = Enabled</description>
            <name>ERPIO1_0</name>
          </field>
        </fields>
        <name>STARTERP0</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x208</addressOffset>
        <description>Start logic reset register 0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO0_n:PIO0_11 to PIO0_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO0_11</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal reset for start logic input PIO1_0 0 = Do nothing. 1 = Writing 1 resets the start signal.</description>
            <name>RSRPIO1_0</name>
          </field>
        </fields>
        <name>STARTRSRP0CLR</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x20C</addressOffset>
        <description>Start logic status register 0</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO0_n: PIO0_11 to PIO0_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO0_11</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Start signal status for start logic input PIO1_0 0 = No start signal received. 1 = Start signal pending.</description>
            <name>SRPIO1_0</name>
          </field>
        </fields>
        <name>STARTSRP0</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x230</addressOffset>
        <description>Power-down states in Deep-sleep mode</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Reserved. Always write these bits as 111.</description>
            <name>NOTUSED0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BOD power-down control in Deep-sleep mode, see Table 40.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BOD_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Reserved. Always write these bits as 11.</description>
            <name>NOTUSED1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Watchdog oscillator power control in Deep-sleep mode, see Table 40.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>WDTOSC_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved. Always write this bit as 1.</description>
            <name>NOTUSED2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Reserved. Always write these bits as 000.</description>
            <name>NOTUSED3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Reserved. Always write these bits as 11.</description>
            <name>NOTUSED4</name>
          </field>
        </fields>
        <name>PDSLEEPCFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x234</addressOffset>
        <description>Power-down states after wake-up from Deep-sleep mode</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>IRC oscillator output wake-up configuration</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>IRCOUT_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>IRC oscillator power-down wake-up configuration</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>IRC_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Flash wake-up configuration</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FLASH_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BOD wake-up configuration</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BOD_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ADC wake-up configuration</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADC_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>System oscillator wake-up configuration</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SYSOSC_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Watchdog oscillator wake-up configuration</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>WDTOSC_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>System PLL wake-up configuration</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SYSPLL_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved. Always write this bit as 1.</description>
            <name>NOTUSED0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved. Always write this bit as 0.</description>
            <name>NOTUSED1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved. Always write this bit as 1.</description>
            <name>NOTUSED2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved. Always write this bit as 1.</description>
            <name>NOTUSED3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved. Always write this bit as 0.</description>
            <name>NOTUSED4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Reserved. Always write these bits as 111.</description>
            <name>NOTUSED5</name>
          </field>
        </fields>
        <name>PDAWAKECFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xEDF0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x238</addressOffset>
        <description>Power-down configuration register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>IRC oscillator output power-down</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>IRCOUT_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>IRC oscillator power-down</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>IRC_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Flash power-down</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FLASH_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BOD power-down</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BOD_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>ADC power-down</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ADC_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>System oscillator power-down</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SYSOSC_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Watchdog oscillator power-down</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>WDTOSC_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>System PLL power-down</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered</description>
                <name>POWERED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Powered down</description>
                <name>POWERED_DOWN</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SYSPLL_PD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved. Always write this bit as 1.</description>
            <name>NOTUSED0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved. Always write this bit as 0.</description>
            <name>NOTUSED1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved. Always write this bit as 1.</description>
            <name>NOTUSED2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved. Always write this bit as 1.</description>
            <name>NOTUSED3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Reserved.  Always write this bit as 0.</description>
            <name>NOTUSED4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Reserved. Always write these bits as 111.</description>
            <name>NOTUSED5</name>
          </field>
        </fields>
        <name>PDRUNCFG</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xEDF0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x3F4</addressOffset>
        <description>Device ID register 0 for parts LPC1100, LPC1100C, LPC1100L.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x20</bitWidth>
            <description>Part ID numbers for LPC111x/LPC11Cxx parts 0x041E 502B; 0x2516 D02B = LPC1111FHN33/101 0x2516 D02B = LPC1111FHN33/102 0x0416 502B; 0x2516 902B = LPC1111FHN33/201 0x2516 902B = LPC1111FHN33/202 0x042D 502B; 0x2524 D02B = LPC1112FHN33/101 0x2524 D02B = LPC1112FHN33/102 0x0425 502B; 0x2524 902B = LPC1112FHN33/201 0x2524 902B = LPC1112FHN33/202  0x2524 902B = LPC1112FHI33/202 0x0434 502B; 0x2532 902B = LPC1113FHN33/201 0x2532 902B = LPC1113FHN33/202 0x0434 102B; 0x2532 102B = LPC1113FHN33/301 0x2532 102B = LPC1113FHN33/302 0x0434 102B; 0x2532 102B = LPC1113FBD48/301 0x2532 102B = LPC1113FBD48/302 0x0444 502B; 0x2540 902B = LPC1114FHN33/201 0x2540 902B = LPC1114FHN33/202 0x0444 102B; 0x2540 102B = LPC1114FHN33/301 0x2540 102B = LPC1114FHN33/302  0x2540 102B = LPC1114FHI33/302 0x0444 102B; 0x2540 102B = LPC1114FBD48/301 0x2540 102B = LPC1114FBD48/302 0x2540 102B = LPC11D14FBD100/302 0x1421 102B = LPC11C12/FBD48/301 0x1440 102B = LPC11C14/FBD48/301 0x1431 102B = LPC11C22/FBD48/301 0X1430 102B = LPC11C24/FBD48/301</description>
            <name>DEVICEID</name>
          </field>
        </fields>
        <name>DEVICE_ID</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40050000</baseAddress>
    <description>Product name title=UM10398 Chapter title=LPC111x/LPC11Cxx
    C_CAN controller Modification date=9/19/2011 Major revision=7 Minor revision=not available </description>
    <groupName>C_CAN</groupName>
    <interrupts>
      <interrupt>
        <name>C_CAN</name>
        <value>0xD</value>
      </interrupt>
    </interrupts>
    <name>C_CAN</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>CAN control</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Initialization</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Normal operation.</description>
                <name>NORMAL_OPERATION_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Initialization is started. On reset, software needs to initialize the CAN controller.</description>
                <name>INITIALIZATION</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>INIT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Module interrupt enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable CAN interrupts. The interrupt line is always HIGH.</description>
                <name>DISABLE_CAN_INTERRUP</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable CAN interrupts. The interrupt line is set to LOW and remains LOW until all pending interrupts are cleared.</description>
                <name>ENABLE_CAN_INTERRUPT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>IE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Status change interrupt enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable status change interrupts. No status change interrupt will be generated.</description>
                <name>DISABLE_STATUS_CHANG</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable status change interrupts. A status change interrupt will be generated when a message transfer is successfully completed or a CAN bus error is detected.</description>
                <name>ENABLE_STATUS_CHANGE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SIE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Error interrupt enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Disable error interrupt. No error status interrupt will be generated.</description>
                <name>DISABLE_ERROR_INTERR</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Enable error interrupt. A change in the bits BOFF or EWARN in the CANSTAT registers will generate an interrupt.</description>
                <name>ENABLE_ERROR_INTERRU</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EIE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Disable automatic retransmission</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Automatic retransmission of disturbed messages enabled.</description>
                <name>ENABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Automatic retransmission disabled.</description>
                <name>DISABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DAR</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Configuration change enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The CPU has no write access to the bit timing register.</description>
                <name>NOACCESS</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The CPU has write access to the CANBT register while the INIT bit is one.</description>
                <name>ACCESS</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CCE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Test mode enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Normal operation.</description>
                <name>NORMAL_OPERATION_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Test mode.</description>
                <name>TEST_MODE_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TEST</name>
          </field>
        </fields>
        <name>CANCNTL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Status register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Last error code Type of the last error to occur on the CAN bus.The LEC field holds a code which indicates the type of the last error to occur on the CAN bus. This field will be cleared to 0 when a message has been transferred (reception or transmission) without error. The unused code 111 may be written by the CPU to check for updates.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No error.</description>
                <name>NO_ERROR_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Stuff error: More than 5 equal bits in a sequence have occurred in a part of a received message where this is not allowed.</description>
                <name>STUFF_ERROR</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Form error: A fixed format part of a received frame has the wrong format.</description>
                <name>FORM_ERROR</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>AckError: The message this CAN core transmitted was not acknowledged.</description>
                <name>ACKERROR</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Bit1Error: During the transmission of a message (with the exception of the arbitration field), the device wanted to send a HIGH/recessive level (bit of logical value 1), but the monitored bus value was LOW/dominant.</description>
                <name>BIT1ERROR</name>
                <value>0x4</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Bit0Error: During the transmission of a message (or acknowledge bit, or active error flag, or overload flag), the device wanted to send a LOW/dominant level (data or identifier bit logical value 0), but the monitored Bus value was HIGH/recessive. During busoff recovery this status is set each time a sequence of 11 HIGH/recessive bits has been monitored. This enables the CPU to monitor the proceeding of the busoff recovery sequence (indicating the bus is not stuck at LOW/dominant or continuously disturbed).</description>
                <name>BIT0ERROR</name>
                <value>0x5</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>CRCError: The CRC checksum was incorrect in the message received.</description>
                <name>CRCERROR</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Unused: No CAN bus event was detected (written by the CPU).</description>
                <name>UNUSED</name>
                <value>0x7</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>LEC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmitted a message successfully This bit is reset by the CPU. It is never reset by the CAN controller.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Since this bit was reset by the CPU, no message has been successfully transmitted.</description>
                <name>NOTRANSMIT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Since this bit was last reset by the CPU, a message has been successfully transmitted (error free and acknowledged by at least one other node).</description>
                <name>TRANSMIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TXOK</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Received a message successfully This bit is reset by the CPU. It is never reset by the CAN controller.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Since this bit was last reset by the CPU, no message has been successfully transmitted.</description>
                <name>NOTRANSMIT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Since this bit was last set to zero by the CPU, a message has been successfully received independent of the result of acceptance filtering.</description>
                <name>TRANSMIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RXOK</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Error passive</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The CAN controller is in the error active state.</description>
                <name>ACTIVE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The CAN controller is in the error passive state as defined in the CAN 2.0 specification.</description>
                <name>PASSIVE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EPASS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Warning status</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Both error counters are below the error warning limit of 96.</description>
                <name>BELOWWARNINGLIM</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>At least one of the error counters in the EML has reached the error warning limit of 96.</description>
                <name>WARNINGLIM</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EWARN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Busoff status</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The CAN module is not in busoff.</description>
                <name>NOTBUSOFF</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The CAN controller is in busoff state.</description>
                <name>BUSOFF</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BOFF</name>
          </field>
        </fields>
        <name>CANSTAT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x8</addressOffset>
        <description>Error counter</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Transmit error counter Current value of the transmit error counter (maximum value 255)</description>
            <name>TEC_7_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x7</bitWidth>
            <description>Receive error counter Current value of the receive error counter (maximum value 127).</description>
            <name>REC_6_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receive error passive</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The receive counter is below the error passive level.</description>
                <name>BELOWERRORPASSIVE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The receive counter has reached the error passive level as defined in the  CAN2.0 specification.</description>
                <name>ERRORPASSIVE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RP</name>
          </field>
        </fields>
        <name>CANEC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xC</addressOffset>
        <description>Bit timing register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Baud rate prescaler The value by which the oscillator frequency is divided for generating the bit time quanta. The bit time is built up from a multiple of this quanta. Valid values for the Baud Rate Prescaler are 0 to 63.[1]</description>
            <name>BRP</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>(Re)synchronization jump width Valid programmed values are 0 to 3.[1]</description>
            <name>SJW</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Time segment before the sample point Valid values are 1 to 15.[1]</description>
            <name>TSEG1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x3</bitWidth>
            <description>Time segment after the sample point Valid values are 0 to 7.[1]</description>
            <name>TSEG2</name>
          </field>
        </fields>
        <name>CANBT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x2301</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x10</addressOffset>
        <description>Interrupt register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>0x0000 = No interrupt is pending. 0x0001 - 0x0020 = Number of message object which caused the interrupt. 0x0021 - 0x7FFF = Unused 0x8000 = Status interrupt 0x8001 - 0xFFFF = Unused</description>
            <name>INTID</name>
          </field>
        </fields>
        <name>CANINT</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>Test register</description>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Basic mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Basic mode disabled.</description>
                <name>BASIC_MODE_DISABLED_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>IF1 registers used as TX buffer, IF2 registers used as RX buffer.</description>
                <name>TXRX</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BASIC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Silent mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Normal operation.</description>
                <name>NORMAL_OPERATION_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The module is in silent mode.</description>
                <name>SILENT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SILENT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Loop back mode</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Loop back mode is disabled.</description>
                <name>DISABLED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Loop back mode is enabled.</description>
                <name>ENABLED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>LBACK</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Control of CAN_TXD pins</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Level at the CAN_TXD pin is controlled by the CAN controller. This is the value at reset.</description>
                <name>LEVEL</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The sample point can be monitored at the CAN_TXD pin.</description>
                <name>TXD</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>CAN_TXD pin is driven LOW/dominant.</description>
                <name>LOW</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>CAN_TXD pin is driven HIGH/recessive.</description>
                <name>HIGH</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TX</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Monitors the actual value of the CAN_RXD pin.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The CAN bus is recessive (CAN_RXD = 1).</description>
                <name>RECESSIVE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The CAN bus is dominant (CAN_RXD = 0).</description>
                <name>DORMANT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RX</name>
          </field>
        </fields>
        <name>CANTEST</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x18</addressOffset>
        <description>Baud rate prescaler extension register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Baud rate prescaler extension By programming BRPE the Baud Rate Prescaler can be extended to values up to 1023. Hardware interprets the value as the value of BRPE (MSBs) and BRP (LSBs) plus one. Allowed values are 0 to 15.</description>
            <name>BRPE</name>
          </field>
        </fields>
        <name>CANBRPE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x100</addressOffset>
        <description>Transmission request 1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Transmission request bit of message objects 16 to 1. 0 = This message object is not waiting for transmission. 1 = The transmission of this message object is requested and not yet done.</description>
            <name>TXRQST_16_1</name>
          </field>
        </fields>
        <name>CANTXREQ1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x104</addressOffset>
        <description>Transmission request 2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Transmission request bit of message objects 32 to 17. 0 = This message object is not waiting for transmission. 1 = The transmission of this message object is requested and not yet done.</description>
            <name>TXRQST_32_17</name>
          </field>
        </fields>
        <name>CANTXREQ2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x120</addressOffset>
        <description>New data 1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>New data bits of message objects 16 to 1. 0 = No new data has been written into the data portion of this Message Object by the Message Handler since last time this flag was cleared by the CPU. 1 = The Message Handler or the CPU has written new data into the data portion of this Message Object.</description>
            <name>NEWDAT_16_1</name>
          </field>
        </fields>
        <name>CANND1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x124</addressOffset>
        <description>New data 2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>New data bits of message objects 32 to 17. 0 = No new data has been written into the data portion of this Message Object by the Message Handler since last time this flag was cleared by the CPU. 1 = The Message Handler or the CPU has written new data into the data portion of this Message Object.</description>
            <name>NEWDAT_32_17</name>
          </field>
        </fields>
        <name>CANND2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x140</addressOffset>
        <description>Interrupt pending 1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Interrupt pending bits of message objects 16 to 1. 0 = This message object is ignored by the message handler. 1 = This message object is the source of an interrupt.</description>
            <name>INTPND_16_1</name>
          </field>
        </fields>
        <name>CANIR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x144</addressOffset>
        <description>Interrupt pending 2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Interrupt pending bits of message objects 32 to 17. 0 = This message object is ignored by the message handler. 1 = This message object is the source of an interrupt.</description>
            <name>INTPND_32_17</name>
          </field>
        </fields>
        <name>CANIR2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x160</addressOffset>
        <description>Message valid 1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Message valid bits of message objects 16 to 1. 0 = This message object is ignored by the message handler. 1 = This message object is configured and should be considered by the message handler.</description>
            <name>MSGVAL_16_1</name>
          </field>
        </fields>
        <name>CANMSGV1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x164</addressOffset>
        <description>Message valid 2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Message valid bits of message objects 32 to 17. 0 = This message object is ignored by the message handler. 1 = This message object is configured and should be considered by the message handler.</description>
            <name>MSGVAL_32_17</name>
          </field>
        </fields>
        <name>CANMSGV2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x180</addressOffset>
        <description>Can clock divider register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Clock divider value. CAN_CLK = PCLK/(CLKDIVVAL +1) 0000: CAN_CLK = PCLK divided by 1. 0001: CAN_CLK = PCLK divided by 2. 0010: CAN_CLK = PCLK divided by 3 0010: CAN_CLK = PCLK divided by 4. ... 1111: CAN_CLK = PCLK divided by 16.</description>
            <name>CLKDIVVAL</name>
          </field>
        </fields>
        <name>CANCLKDIV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x20</addressOffset>
        <description>Message interface  command request</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Message number 0x01 - 0x20 = Valid message numbers. The message object in the message RAM is selected for data transfer. 0x00 = Not a valid message number. This value is interpreted as 0x20.[1] 0x21 - 0x3F = Not a valid message number. This value is interpreted as 0x01 - 0x1F.[1]</description>
            <name>MN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BUSY flag</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set to zero by hardware when read/write action to this Command request register has finished.</description>
                <name>ZERO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set to one by hardware when writing to this Command request register.</description>
                <name>ONE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BUSY</name>
          </field>
        </fields>
        <name>CANIF1_CMDREQ</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x80</addressOffset>
        <description>Message interface  command request</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x6</bitWidth>
            <description>Message number 0x01 - 0x20 = Valid message numbers. The message object in the message RAM is selected for data transfer. 0x00 = Not a valid message number. This value is interpreted as 0x20.[1] 0x21 - 0x3F = Not a valid message number. This value is interpreted as 0x01 - 0x1F.[1]</description>
            <name>MN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>BUSY flag</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set to zero by hardware when read/write action to this Command request register has finished.</description>
                <name>ZERO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Set to one by hardware when writing to this Command request register.</description>
                <name>ONE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>BUSY</name>
          </field>
        </fields>
        <name>CANIF2_CMDREQ</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x1</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>Message interface 
        command mask - write direction</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access data bytes 4-7</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Data bytes 4-7 unchanged.</description>
                <name>DATA_BYTES_4_7_UNCHA</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer data bytes 4-7 to message object.</description>
                <name>TRANSFER_DATA_BYTES_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DATA_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access data bytes 0-3</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Data bytes 0-3 unchanged.</description>
                <name>DATA_BYTES_0_3_UNCHA</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer data bytes 0-3 to message object.</description>
                <name>TRANSFER_DATA_BYTES_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DATA_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access transmission request bit</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No transmission request. TXRQSRT bit unchanged in IF1/2_MCTRL. If a transmission is requested by programming this bit, the TXRQST bit in the CANIFn_MCTRL register is ignored.</description>
                <name>NO_TRANSMISSION_REQU</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Request a transmission. Set the TXRQST bit IF1/2_MCTRL.</description>
                <name>REQUEST_A_TRANSMISSI</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TXRQST</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is ignored in the write direction.</description>
            <name>CLRINTPND</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access control bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Control bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer control bits to message object</description>
                <name>TRANSFER_CONTROL_BIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CTRL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access arbitration bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Arbitration bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer Identifier, DIR, XTD, and MSGVAL bits to message object.</description>
                <name>TRANSFER_IDENTIFIER</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ARB</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access mask bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Mask bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer Identifier MASK + MDIR + MXTD to message object.</description>
                <name>TRANSFER_IDENTIFIER_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write transfer Transfer data from the selected message buffer registers to the message object addressed by the command request register CANIFn_CMDREQ.</description>
            <name>WR_RD</name>
          </field>
        </fields>
        <name>CANIF1_CMDMSK_W</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x84</addressOffset>
        <description>Message interface 
        command mask - write direction</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access data bytes 4-7</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Data bytes 4-7 unchanged.</description>
                <name>DATA_BYTES_4_7_UNCHA</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer data bytes 4-7 to message object.</description>
                <name>TRANSFER_DATA_BYTES_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DATA_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access data bytes 0-3</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Data bytes 0-3 unchanged.</description>
                <name>DATA_BYTES_0_3_UNCHA</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer data bytes 0-3 to message object.</description>
                <name>TRANSFER_DATA_BYTES_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DATA_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access transmission request bit</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No transmission request. TXRQSRT bit unchanged in IF1/2_MCTRL. If a transmission is requested by programming this bit, the TXRQST bit in the CANIFn_MCTRL register is ignored.</description>
                <name>NO_TRANSMISSION_REQU</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Request a transmission. Set the TXRQST bit IF1/2_MCTRL.</description>
                <name>REQUEST_A_TRANSMISSI</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TXRQST</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is ignored in the write direction.</description>
            <name>CLRINTPND</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access control bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Control bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer control bits to message object</description>
                <name>TRANSFER_CONTROL_BIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CTRL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access arbitration bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Arbitration bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer Identifier, DIR, XTD, and MSGVAL bits to message object.</description>
                <name>TRANSFER_IDENTIFIER</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ARB</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access mask bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Mask bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer Identifier MASK + MDIR + MXTD to message object.</description>
                <name>TRANSFER_IDENTIFIER_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Write transfer Transfer data from the selected message buffer registers to the message object addressed by the command request register CANIFn_CMDREQ.</description>
            <name>WR_RD</name>
          </field>
        </fields>
        <name>CANIF2_CMDMSK_W</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x24</addressOffset>
        <description>Message interface  command mask - read direction</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access data bytes 4-7</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Data bytes 4-7 unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer data bytes 4-7 to IFx message buffer register.</description>
                <name>TRANSFER_DATA_BYTES_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DATA_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access data bytes 0-3</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Data bytes 0-3 unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer data bytes 0-3 to IFx message buffer.</description>
                <name>TRANSFER_DATA_BYTES_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DATA_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access new data bit</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>NEWDAT bit remains unchanged. A read access to a message object can be combined with the reset of the control bits INTPND and NEWDAT in IF1/2_MCTRL. The values of these bits transferred to the IFx Message Control Register always reflect the status before resetting these bits.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear NEWDAT bit in the message object.</description>
                <name>CLEAR_NEWDAT_BIT_IN_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>NEWDAT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear interrupt pending bit.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>INTPND bit remains unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear INTPND bit in the message object.</description>
                <name>CLEAR_INTPND_BIT_IN_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CLRINTPND</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access control bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Control bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer control bits to IFx message buffer.</description>
                <name>TRANSFER_CONTROL_BIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CTRL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access arbitration bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Arbitration bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer Identifier, DIR, XTD, and MSGVAL bits to IFx message buffer register.</description>
                <name>TRANSFER_IDENTIFIER</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ARB</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access mask bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Mask bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer Identifier MASK + MDIR + MXTD to IFx message buffer register.</description>
                <name>TRANSFER_IDENTIFIER_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read transfer Transfer data from the message object addressed by the command request register to the selected message buffer registers CANIFn_CMDREQ.</description>
            <name>WR_RD</name>
          </field>
        </fields>
        <name>CANIF1_CMDMSK_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x84</addressOffset>
        <description>Message interface  command mask - read direction</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access data bytes 4-7</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Data bytes 4-7 unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer data bytes 4-7 to IFx message buffer register.</description>
                <name>TRANSFER_DATA_BYTES_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DATA_B</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access data bytes 0-3</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Data bytes 0-3 unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer data bytes 0-3 to IFx message buffer.</description>
                <name>TRANSFER_DATA_BYTES_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DATA_A</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access new data bit</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>NEWDAT bit remains unchanged. A read access to a message object can be combined with the reset of the control bits INTPND and NEWDAT in IF1/2_MCTRL. The values of these bits transferred to the IFx Message Control Register always reflect the status before resetting these bits.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear NEWDAT bit in the message object.</description>
                <name>CLEAR_NEWDAT_BIT_IN_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>NEWDAT</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clear interrupt pending bit.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>INTPND bit remains unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Clear INTPND bit in the message object.</description>
                <name>CLEAR_INTPND_BIT_IN_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CLRINTPND</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access control bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Control bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer control bits to IFx message buffer.</description>
                <name>TRANSFER_CONTROL_BIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CTRL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access arbitration bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Arbitration bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer Identifier, DIR, XTD, and MSGVAL bits to IFx message buffer register.</description>
                <name>TRANSFER_IDENTIFIER</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>ARB</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Access mask bits</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Mask bits unchanged.</description>
                <name>UNCHANGED</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Transfer Identifier MASK + MDIR + MXTD to IFx message buffer register.</description>
                <name>TRANSFER_IDENTIFIER_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Read transfer Transfer data from the message object addressed by the command request register to the selected message buffer registers CANIFn_CMDREQ.</description>
            <name>WR_RD</name>
          </field>
        </fields>
        <name>CANIF2_CMDMSK_R</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x28</addressOffset>
        <description>Message interface 1 mask 1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Identifier mask</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The corresponding bit in the identifier of the message can not inhibit the match in the acceptance filtering.</description>
                <name>NOINHIBIT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The corresponding identifier bit is used for acceptance filtering.</description>
                <name>ACCEPTANCEFILTERING</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MSK_15_0</name>
          </field>
        </fields>
        <name>CANIF1_MSK1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFF</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x88</addressOffset>
        <description>Message interface 1 mask 1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Identifier mask</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The corresponding bit in the identifier of the message can not inhibit the match in the acceptance filtering.</description>
                <name>NOINHIBIT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The corresponding identifier bit is used for acceptance filtering.</description>
                <name>ACCEPTANCEFILTERING</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MSK_15_0</name>
          </field>
        </fields>
        <name>CANIF2_MSK1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFF</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x2C</addressOffset>
        <description>Message interface 1 mask 2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>Identifier mask</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The corresponding bit in the identifier of the message can not inhibit the match in the acceptance filtering.</description>
                <name>NOINHIBIT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The corresponding identifier bit is used for acceptance filtering.</description>
                <name>ACCEPTANCEFILTERING</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MSK_28_16</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Mask message direction</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The message direction bit (DIR) has no effect on acceptance filtering.</description>
                <name>NOEFFECT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The message direction bit (DIR) is used for acceptance filtering.</description>
                <name>ACCEPTANCEFILTERING</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MDIR</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Mask extend identifier</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The extended identifier bit (XTD) has no effect on acceptance filtering.</description>
                <name>NOEFFECT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The extended identifier bit (XTD) is used for acceptance filtering.</description>
                <name>ACCEPTANCEFILTERING</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MXTD</name>
          </field>
        </fields>
        <name>CANIF1_MSK2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFF</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8C</addressOffset>
        <description>Message interface 1 mask 2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>Identifier mask</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The corresponding bit in the identifier of the message can not inhibit the match in the acceptance filtering.</description>
                <name>NOINHIBIT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The corresponding identifier bit is used for acceptance filtering.</description>
                <name>ACCEPTANCEFILTERING</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MSK_28_16</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Mask message direction</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The message direction bit (DIR) has no effect on acceptance filtering.</description>
                <name>NOEFFECT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The message direction bit (DIR) is used for acceptance filtering.</description>
                <name>ACCEPTANCEFILTERING</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MDIR</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Mask extend identifier</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The extended identifier bit (XTD) has no effect on acceptance filtering.</description>
                <name>NOEFFECT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The extended identifier bit (XTD) is used for acceptance filtering.</description>
                <name>ACCEPTANCEFILTERING</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MXTD</name>
          </field>
        </fields>
        <name>CANIF2_MSK2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0xFFFF</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x30</addressOffset>
        <description>Message interface 1 arbitration 1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Message identifier  29-bit identifier (extended frame) 11-bit identifier (standard frame)</description>
            <name>ID_15_0</name>
          </field>
        </fields>
        <name>CANIF1_ARB1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x90</addressOffset>
        <description>Message interface 1 arbitration 1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Message identifier  29-bit identifier (extended frame) 11-bit identifier (standard frame)</description>
            <name>ID_15_0</name>
          </field>
        </fields>
        <name>CANIF2_ARB1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x34</addressOffset>
        <description>Message interface 1 arbitration 2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>Message identifier  29-bit identifier (extended frame) 11-bit identifier (standard frame)</description>
            <name>ID_28_16</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Message direction</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Direction = receive. On TXRQST, a Remote Frame with the identifier of this Message Object is transmitted. On reception of a Data Frame with matching identifier, that message is stored in this Message Object.</description>
                <name>RECEIVE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Direction = transmit. On TXRQST, the respective Message Object is transmitted as a Data Frame. On reception of a Remote Frame with matching identifier, the TXRQST bit of this Message Object is set (if RMTEN = one).</description>
                <name>TRANSMIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DIR</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Extend identifier</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The 11-bit standard identifier will be used for this message object.</description>
                <name>11_BIT_STANDARD_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The 29-bit extended identifier will be used for this message object.</description>
                <name>29_BIT_EXTENDED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>XTD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Message valid The CPU must reset the MSGVAL bit of all unused Messages Objects during the initialization before it resets bit INIT in the CAN Control Register. This bit must also be reset before the identifier ID28:0, the control bits XTD, DIR, or the Data Length Code DLC3:0 are modified, or if the Messages Object is no longer required.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The message object is ignored by the message handler.</description>
                <name>IGNORE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The message object is configured and should be considered by the message handler.</description>
                <name>CONFIGURED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MSGVAL</name>
          </field>
        </fields>
        <name>CANIF1_ARB2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x94</addressOffset>
        <description>Message interface 1 arbitration 2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0xD</bitWidth>
            <description>Message identifier  29-bit identifier (extended frame) 11-bit identifier (standard frame)</description>
            <name>ID_28_16</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Message direction</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Direction = receive. On TXRQST, a Remote Frame with the identifier of this Message Object is transmitted. On reception of a Data Frame with matching identifier, that message is stored in this Message Object.</description>
                <name>RECEIVE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Direction = transmit. On TXRQST, the respective Message Object is transmitted as a Data Frame. On reception of a Remote Frame with matching identifier, the TXRQST bit of this Message Object is set (if RMTEN = one).</description>
                <name>TRANSMIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DIR</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Extend identifier</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The 11-bit standard identifier will be used for this message object.</description>
                <name>11_BIT_STANDARD_</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The 29-bit extended identifier will be used for this message object.</description>
                <name>29_BIT_EXTENDED_</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>XTD</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Message valid The CPU must reset the MSGVAL bit of all unused Messages Objects during the initialization before it resets bit INIT in the CAN Control Register. This bit must also be reset before the identifier ID28:0, the control bits XTD, DIR, or the Data Length Code DLC3:0 are modified, or if the Messages Object is no longer required.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The message object is ignored by the message handler.</description>
                <name>IGNORE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The message object is configured and should be considered by the message handler.</description>
                <name>CONFIGURED</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MSGVAL</name>
          </field>
        </fields>
        <name>CANIF2_ARB2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x38</addressOffset>
        <description>Message interface 1 message control</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Data length code The Data Length Code of a Message Object must be defined the same as in all the corresponding objects with the same identifier at other nodes. When the Message Handler stores a data frame, it will write the DLC to the value given by the received message. 0000 - 1000 = Data frame has 0 - 8 data bytes. 1001 - 1111 = Data frame has 8 data bytes.</description>
            <name>DLC_3_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>End of buffer</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Message object belongs to a FIFO buffer and is not the last message object of that FIFO buffer.</description>
                <name>FIFO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Single message object or last message object of a FIFO buffer.</description>
                <name>SINGELAST</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EOB</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmit request</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>This message object is not waiting for transmission.</description>
                <name>NOWAIT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The transmission of this message object is requested and is not yet done</description>
                <name>WAIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TXRQST</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Remote enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>At the reception of a remote frame, TXRQST is left unchanged.</description>
                <name>NOCHANGE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>At the reception of a remote frame, TXRQST is set.</description>
                <name>SET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RMTEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receive interrupt enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>INTPND will be left unchanged after successful reception of a frame.</description>
                <name>NOCHANGE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>INTPND will be set after successful reception of a frame.</description>
                <name>SET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RXIE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmit interrupt enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The INTPND bit will be left unchanged after a successful transmission of a frame.</description>
                <name>NOCHANGE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>INTPND will be set after a successful transmission of a frame.</description>
                <name>SET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TXIE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Use acceptance mask If UMASK is set to 1, the message object's mask bits have to be programmed during initialization of the message object before MAGVAL is set to 1.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Mask ignored.</description>
                <name>IGNORE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Use mask (MSK[28:0], MXTD, and MDIR) for acceptance filtering.</description>
                <name>USEMASK</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>UMASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt pending</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>This message object is not the source of an interrupt.</description>
                <name>NOINTSOURCE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>This message object is the source of an interrupt. The Interrupt Identifier in the Interrupt Register will point to this message object if there is no other interrupt source with higher priority.</description>
                <name>INTSOURCE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>INTPND</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Message lost (only valid for message objects in the direction receive).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No message lost since this bit was reset last by the CPU.</description>
                <name>NOLOST</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The Message Handler stored a new message into this object when NEWDAT was still set, the CPU has lost a message.</description>
                <name>NEWMESSAGE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MSGLST</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>New data</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No new data has been written into the data portion of this message object by the message handler since this flag was cleared last by the CPU.</description>
                <name>NONEWDATA</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The message handler or the CPU has written new data into the data portion of this message object.</description>
                <name>NEWDATA</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>NEWDAT</name>
          </field>
        </fields>
        <name>CANIF1_MCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x98</addressOffset>
        <description>Message interface 1 message control</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Data length code The Data Length Code of a Message Object must be defined the same as in all the corresponding objects with the same identifier at other nodes. When the Message Handler stores a data frame, it will write the DLC to the value given by the received message. 0000 - 1000 = Data frame has 0 - 8 data bytes. 1001 - 1111 = Data frame has 8 data bytes.</description>
            <name>DLC_3_0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>End of buffer</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Message object belongs to a FIFO buffer and is not the last message object of that FIFO buffer.</description>
                <name>FIFO</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Single message object or last message object of a FIFO buffer.</description>
                <name>SINGELAST</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>EOB</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmit request</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>This message object is not waiting for transmission.</description>
                <name>NOWAIT</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The transmission of this message object is requested and is not yet done</description>
                <name>WAIT</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TXRQST</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Remote enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>At the reception of a remote frame, TXRQST is left unchanged.</description>
                <name>NOCHANGE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>At the reception of a remote frame, TXRQST is set.</description>
                <name>SET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RMTEN</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receive interrupt enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>INTPND will be left unchanged after successful reception of a frame.</description>
                <name>NOCHANGE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>INTPND will be set after successful reception of a frame.</description>
                <name>SET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>RXIE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmit interrupt enable</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The INTPND bit will be left unchanged after a successful transmission of a frame.</description>
                <name>NOCHANGE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>INTPND will be set after a successful transmission of a frame.</description>
                <name>SET</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>TXIE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xC</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Use acceptance mask If UMASK is set to 1, the message object's mask bits have to be programmed during initialization of the message object before MAGVAL is set to 1.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>Mask ignored.</description>
                <name>IGNORE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Use mask (MSK[28:0], MXTD, and MDIR) for acceptance filtering.</description>
                <name>USEMASK</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>UMASK</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xD</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Interrupt pending</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>This message object is not the source of an interrupt.</description>
                <name>NOINTSOURCE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>This message object is the source of an interrupt. The Interrupt Identifier in the Interrupt Register will point to this message object if there is no other interrupt source with higher priority.</description>
                <name>INTSOURCE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>INTPND</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xE</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Message lost (only valid for message objects in the direction receive).</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No message lost since this bit was reset last by the CPU.</description>
                <name>NOLOST</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The Message Handler stored a new message into this object when NEWDAT was still set, the CPU has lost a message.</description>
                <name>NEWMESSAGE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MSGLST</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xF</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>New data</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>No new data has been written into the data portion of this message object by the message handler since this flag was cleared last by the CPU.</description>
                <name>NONEWDATA</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The message handler or the CPU has written new data into the data portion of this message object.</description>
                <name>NEWDATA</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>NEWDAT</name>
          </field>
        </fields>
        <name>CANIF2_MCTRL</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3C</addressOffset>
        <description>Message interface 1 data A1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 0</description>
            <name>DATA0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 1</description>
            <name>DATA1</name>
          </field>
        </fields>
        <name>CANIF1_DA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x9C</addressOffset>
        <description>Message interface 1 data A1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 0</description>
            <name>DATA0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 1</description>
            <name>DATA1</name>
          </field>
        </fields>
        <name>CANIF2_DA1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x40</addressOffset>
        <description>Message interface 1 data A2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 2</description>
            <name>DATA2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 3</description>
            <name>DATA3</name>
          </field>
        </fields>
        <name>CANIF1_DA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xA0</addressOffset>
        <description>Message interface 1 data A2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 2</description>
            <name>DATA2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 3</description>
            <name>DATA3</name>
          </field>
        </fields>
        <name>CANIF2_DA2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x44</addressOffset>
        <description>Message interface 1 data B1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 4</description>
            <name>DATA4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 5</description>
            <name>DATA5</name>
          </field>
        </fields>
        <name>CANIF1_DB1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xA4</addressOffset>
        <description>Message interface 1 data B1</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 4</description>
            <name>DATA4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 5</description>
            <name>DATA5</name>
          </field>
        </fields>
        <name>CANIF2_DB1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x48</addressOffset>
        <description>Message interface 1 data B2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 6</description>
            <name>DATA6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 7</description>
            <name>DATA7</name>
          </field>
        </fields>
        <name>CANIF1_DB2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0xA8</addressOffset>
        <description>Message interface 1 data B2</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 6</description>
            <name>DATA6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Data byte 7</description>
            <name>DATA7</name>
          </field>
        </fields>
        <name>CANIF2_DB2</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x40058000</baseAddress>
    <derivedFrom>SPI0</derivedFrom>
    <description>SPI0</description>
    <groupName>SPI</groupName>
    <interrupts>
      <interrupt>
        <name>SPI1</name>
        <value>0xE</value>
      </interrupt>
    </interrupts>
    <name>SPI1</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x0</addressOffset>
        <description>Control Register 0. Selects the serial clock rate, bus type, and data size.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x4</bitWidth>
            <description>Data Size Select. This field controls the number of bits transferred in each frame. Values 0000-0010 are not supported and should not be used.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>4-bit transfer</description>
                <name>4_BIT_TRANSFER</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>5-bit transfer</description>
                <name>5_BIT_TRANSFER</name>
                <value>0x4</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>6-bit transfer</description>
                <name>6_BIT_TRANSFER</name>
                <value>0x5</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>7-bit transfer</description>
                <name>7_BIT_TRANSFER</name>
                <value>0x6</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>8-bit transfer</description>
                <name>8_BIT_TRANSFER</name>
                <value>0x7</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>9-bit transfer</description>
                <name>9_BIT_TRANSFER</name>
                <value>0x8</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>10-bit transfer</description>
                <name>10_BIT_TRANSFER</name>
                <value>0x9</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>11-bit transfer</description>
                <name>11_BIT_TRANSFER</name>
                <value>0xA</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>12-bit transfer</description>
                <name>12_BIT_TRANSFER</name>
                <value>0xB</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>13-bit transfer</description>
                <name>13_BIT_TRANSFER</name>
                <value>0xC</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>14-bit transfer</description>
                <name>14_BIT_TRANSFER</name>
                <value>0xD</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>15-bit transfer</description>
                <name>15_BIT_TRANSFER</name>
                <value>0xE</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>16-bit transfer</description>
                <name>16_BIT_TRANSFER</name>
                <value>0xF</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>DSS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x2</bitWidth>
            <description>Frame Format.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI</description>
                <name>SPI</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>TI</description>
                <name>TI</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Microwire</description>
                <name>MICROWIRE</name>
                <value>0x2</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>This combination is not supported and should not be used.</description>
                <name>RESERVED</name>
                <value>0x3</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>FRF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clock Out Polarity. This bit is only used in SPI mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI controller maintains the bus clock low between frames.</description>
                <name>LOW</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI controller maintains the bus clock high between frames.</description>
                <name>HIGH</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CPOL</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Clock Out Phase. This bit is only used in SPI mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI controller captures serial data on the first clock transition of the frame, that is, the transition away from the inter-frame state of the clock line.</description>
                <name>FIRSTCLOCK</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>SPI controller captures serial data on the second clock transition of the frame, that is, the transition back to the inter-frame state of the clock line.</description>
                <name>SECONDCLOCK</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>CPHA</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>Serial Clock Rate. The number of prescaler output clocks per bit on the bus, minus one. Given that CPSDVSR is the prescale divider, and the APB clock PCLK clocks the prescaler, the bit frequency is PCLK / (CPSDVSR X [SCR+1]).</description>
            <name>SCR</name>
          </field>
        </fields>
        <name>CR0</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x4</addressOffset>
        <description>Control Register 1. Selects master/slave and other modes.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Loop Back Mode.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>During normal operation.</description>
                <name>NORMAL</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>Serial input is taken from the serial output (MOSI or MISO) rather than the serial input pin (MISO or MOSI respectively).</description>
                <name>LOOPBACK</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>LBM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>SPI Enable.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The SPI controller is disabled.</description>
                <name>DISABLE</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The SPI controller will interact with other devices on the serial bus. Software should write the appropriate control information to the other SPI/SSP registers and interrupt controller registers, before setting this bit.</description>
                <name>ENABLE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>SSE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Master/Slave Mode.This bit can only be written when the SSE bit is 0.</description>
            <enumeratedValues>
              <enumeratedValue>
                <description>The SPI controller acts as a master on the bus, driving the SCLK, MOSI, and SSEL lines and receiving the MISO line.</description>
                <name>MASTER</name>
                <value>0x0</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <enumeratedValue>
                <description>The SPI controller acts as a slave on the bus, driving MISO line and receiving SCLK, MOSI, and SSEL lines.</description>
                <name>SLAVE</name>
                <value>0x1</value>
              </enumeratedValue>
            </enumeratedValues>
            <name>MS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Slave Output Disable. This bit is relevant only in slave mode (MS = 1). If it is 1, this blocks this SPI controller from driving the transmit data line (MISO).</description>
            <name>SOD</name>
          </field>
        </fields>
        <name>CR1</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8</addressOffset>
        <description>Data Register. Writes fill the transmit FIFO, and reads empty the receive FIFO.</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x10</bitWidth>
            <description>Write: software can write data to be sent in a future frame to this register whenever the TNF bit in the Status register is 1, indicating that the Tx FIFO is not full. If the Tx FIFO was previously empty and the SPI controller is not busy on the bus, transmission of the data will begin immediately. Otherwise the data written to this register will be sent as soon as all previous data has been sent (and received). If the data length is less than 16 bit, software must right-justify the data written to this register. Read: software can read data from this register whenever the RNE bit in the Status register is 1, indicating that the Rx FIFO is not empty. When software reads this register, the SPI controller returns data from the least recent frame in the Rx FIFO. If the data length is less than 16 bit, the data is right-justified in this field with higher order bits filled with 0s.</description>
            <name>DATA</name>
          </field>
        </fields>
        <name>DR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0xC</addressOffset>
        <description>Status Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmit FIFO Empty. This bit is 1 is the Transmit FIFO is empty, 0 if not.</description>
            <name>TFE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Transmit FIFO Not Full. This bit is 0 if the Tx FIFO is full, 1 if not.</description>
            <name>TNF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receive FIFO Not Empty. This bit is 0 if the Receive FIFO is empty, 1 if not.</description>
            <name>RNE</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Receive FIFO Full. This bit is 1 if the Receive FIFO is full, 0 if not.</description>
            <name>RFF</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Busy. This bit is 0 if the SPI controller is idle, 1 if it is currently sending/receiving a frame and/or the Tx FIFO is not empty.</description>
            <name>BSY</name>
          </field>
        </fields>
        <name>SR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x3</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x10</addressOffset>
        <description>Clock Prescale Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x8</bitWidth>
            <description>This even value between 2 and 254, by which SPI_PCLK is divided to yield the prescaler output clock. Bit 0 always reads as 0.</description>
            <name>CPSDVSR</name>
          </field>
        </fields>
        <name>CPSR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x14</addressOffset>
        <description>Interrupt Mask Set and Clear Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software should set this bit to enable interrupt when a Receive Overrun occurs, that is, when the Rx FIFO is full and another frame is completely received. The ARM spec implies that the preceding frame data is overwritten by the new frame data when this occurs.</description>
            <name>RORIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software should set this bit to enable interrupt when a Receive Time-out condition occurs. A Receive Time-out occurs when the Rx FIFO is not empty, and no has not been read for a time-out period. The time-out period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1]).</description>
            <name>RTIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software should set this bit to enable interrupt when the Rx FIFO is at least half full.</description>
            <name>RXIM</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Software should set this bit to enable interrupt when the Tx FIFO is at least half empty.</description>
            <name>TXIM</name>
          </field>
        </fields>
        <name>IMSC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x18</addressOffset>
        <description>Raw Interrupt Status Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if another frame was completely received while the RxFIFO was full. The ARM spec implies that the preceding frame data is overwritten by the new frame data when this occurs.</description>
            <name>RORRIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Rx FIFO is not empty, and has not been read for a time-out period. The time-out period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1]).</description>
            <name>RTRIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Rx FIFO is at least half full.</description>
            <name>RXRIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Tx FIFO is at least half empty.</description>
            <name>TXRIS</name>
          </field>
        </fields>
        <name>RIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x8</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x1C</addressOffset>
        <description>Masked Interrupt Status Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if another frame was completely received while the RxFIFO was full, and this interrupt is enabled.</description>
            <name>RORMIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Rx FIFO is not empty, has not been read for a time-out period, and this interrupt is enabled. The time-out period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1]).</description>
            <name>RTMIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Rx FIFO is at least half full, and this interrupt is enabled.</description>
            <name>RXMIS</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>This bit is 1 if the Tx FIFO is at least half empty, and this interrupt is enabled.</description>
            <name>TXMIS</name>
          </field>
        </fields>
        <name>MIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x20</addressOffset>
        <description>SSPICR Interrupt Clear Register</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Writing a 1 to this bit clears the frame was received when RxFIFO was full interrupt.</description>
            <name>RORIC</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Writing a 1 to this bit clears the Rx FIFO was not empty and has not been read for a timeout period interrupt. The timeout period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1]).</description>
            <name>RTIC</name>
          </field>
        </fields>
        <name>ICR</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFFFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x50000000</baseAddress>
    <description>GPIO0</description>
    <groupName>GPIO</groupName>
    <interrupts>
      <interrupt>
        <name>GPIO0</name>
        <value>0x1F</value>
      </interrupt>
    </interrupts>
    <name>GPIO0</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3FFC</addressOffset>
        <description>Port n data register for pins PIOn_0 to PIOn_11</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA11</name>
          </field>
        </fields>
        <name>DATA</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8000</addressOffset>
        <description>Data direction register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO11</name>
          </field>
        </fields>
        <name>DIR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8004</addressOffset>
        <description>Interrupt sense register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE11</name>
          </field>
        </fields>
        <name>IS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8008</addressOffset>
        <description>Interrupt both edges register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE11</name>
          </field>
        </fields>
        <name>IBE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x800C</addressOffset>
        <description>Interrupt event register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV11</name>
          </field>
        </fields>
        <name>IEV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8010</addressOffset>
        <description>Interrupt mask register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK11</name>
          </field>
        </fields>
        <name>IE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x8014</addressOffset>
        <description>Raw interrupt status register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST11</name>
          </field>
        </fields>
        <name>RIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x8018</addressOffset>
        <description>Masked interrupt status register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK11</name>
          </field>
        </fields>
        <name>MIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x801C</addressOffset>
        <description>Interrupt clear register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR11</name>
          </field>
        </fields>
        <name>IC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFFFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x50010000</baseAddress>
    <derivedFrom>GPIO0</derivedFrom>
    <description>GPIO0</description>
    <groupName>GPIO</groupName>
    <interrupts>
      <interrupt>
        <name>GPIO1</name>
        <value>0x1E</value>
      </interrupt>
    </interrupts>
    <name>GPIO1</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3FFC</addressOffset>
        <description>Port n data register for pins PIOn_0 to PIOn_11</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA11</name>
          </field>
        </fields>
        <name>DATA</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8000</addressOffset>
        <description>Data direction register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO11</name>
          </field>
        </fields>
        <name>DIR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8004</addressOffset>
        <description>Interrupt sense register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE11</name>
          </field>
        </fields>
        <name>IS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8008</addressOffset>
        <description>Interrupt both edges register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE11</name>
          </field>
        </fields>
        <name>IBE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x800C</addressOffset>
        <description>Interrupt event register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV11</name>
          </field>
        </fields>
        <name>IEV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8010</addressOffset>
        <description>Interrupt mask register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK11</name>
          </field>
        </fields>
        <name>IE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x8014</addressOffset>
        <description>Raw interrupt status register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST11</name>
          </field>
        </fields>
        <name>RIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x8018</addressOffset>
        <description>Masked interrupt status register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK11</name>
          </field>
        </fields>
        <name>MIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x801C</addressOffset>
        <description>Interrupt clear register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR11</name>
          </field>
        </fields>
        <name>IC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFFFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x50020000</baseAddress>
    <derivedFrom>GPIO0</derivedFrom>
    <description>GPIO0</description>
    <groupName>GPIO</groupName>
    <interrupts>
      <interrupt>
        <name>GPIO2</name>
        <value>0x1D</value>
      </interrupt>
    </interrupts>
    <name>GPIO2</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3FFC</addressOffset>
        <description>Port n data register for pins PIOn_0 to PIOn_11</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA11</name>
          </field>
        </fields>
        <name>DATA</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8000</addressOffset>
        <description>Data direction register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO11</name>
          </field>
        </fields>
        <name>DIR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8004</addressOffset>
        <description>Interrupt sense register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE11</name>
          </field>
        </fields>
        <name>IS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8008</addressOffset>
        <description>Interrupt both edges register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE11</name>
          </field>
        </fields>
        <name>IBE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x800C</addressOffset>
        <description>Interrupt event register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV11</name>
          </field>
        </fields>
        <name>IEV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8010</addressOffset>
        <description>Interrupt mask register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK11</name>
          </field>
        </fields>
        <name>IE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x8014</addressOffset>
        <description>Raw interrupt status register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST11</name>
          </field>
        </fields>
        <name>RIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x8018</addressOffset>
        <description>Masked interrupt status register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK11</name>
          </field>
        </fields>
        <name>MIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x801C</addressOffset>
        <description>Interrupt clear register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR11</name>
          </field>
        </fields>
        <name>IC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<peripherals>
  <peripheral>
    <addressBlock>
      <offset>0x0</offset>
      <size>0xFFFFFF</size>
      <usage>registers</usage>
    </addressBlock>
    <baseAddress>0x50030000</baseAddress>
    <derivedFrom>GPIO0</derivedFrom>
    <description>GPIO0</description>
    <groupName>GPIO</groupName>
    <interrupts>
      <interrupt>
        <name>GPIO3</name>
        <value>0x1C</value>
      </interrupt>
    </interrupts>
    <name>GPIO3</name>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x3FFC</addressOffset>
        <description>Port n data register for pins PIOn_0 to PIOn_11</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0.</description>
            <name>DATA11</name>
          </field>
        </fields>
        <name>DATA</name>
        <resetMask>0x0</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8000</addressOffset>
        <description>Data direction register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output.</description>
            <name>IO11</name>
          </field>
        </fields>
        <name>DIR</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8004</addressOffset>
        <description>Interrupt sense register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive.</description>
            <name>ISENSE11</name>
          </field>
        </fields>
        <name>IS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8008</addressOffset>
        <description>Interrupt both edges register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register GPIOnIEV. 1 = Both edges on pin PIOn_x trigger an interrupt.</description>
            <name>IBE11</name>
          </field>
        </fields>
        <name>IBE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x800C</addressOffset>
        <description>Interrupt event register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GPIOnIS (see Table 109), falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register GPIOnIS (see Table 109), rising edges or HIGH level on pin PIOn_x trigger an interrupt.</description>
            <name>IEV11</name>
          </field>
        </fields>
        <name>IEV</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-write</access>
        <addressOffset>0x8010</addressOffset>
        <description>Interrupt mask register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked.</description>
            <name>MASK11</name>
          </field>
        </fields>
        <name>IE</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x8014</addressOffset>
        <description>Raw interrupt status register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x.</description>
            <name>RAWST11</name>
          </field>
        </fields>
        <name>RIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>read-only</access>
        <addressOffset>0x8018</addressOffset>
        <description>Masked interrupt status register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x.</description>
            <name>MASK11</name>
          </field>
        </fields>
        <name>MIS</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <registers>
      <register>
        <access>write-only</access>
        <addressOffset>0x801C</addressOffset>
        <description>Interrupt clear register for port n</description>
        <fields>
          <field>
            <bitOffset>0x0</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR0</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x1</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR1</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x2</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR2</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x3</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR3</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x4</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR4</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x5</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR5</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x6</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR6</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x7</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR7</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x8</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR8</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0x9</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR9</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xA</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR10</name>
          </field>
        </fields>
        <fields>
          <field>
            <bitOffset>0xB</bitOffset>
            <bitWidth>0x1</bitWidth>
            <description>Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x.</description>
            <name>CLR11</name>
          </field>
        </fields>
        <name>IC</name>
        <resetMask>0xFFFFFFFF</resetMask>
        <resetValue>0x0</resetValue>
        <size>0x20</size>
      </register>
    </registers>
    <size>0x20</size>
  </peripheral>
</peripherals>
<size>0x20</size>
<version>6</version>
<width>0x20</width></device>